(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["page-LoadingInit~page-absen-group_selfie~page-absen-selfie~page-register-wajah"],{"01f3":function(e,t){function n(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="01f3"},"1fb5":function(e,t,n){"use strict";t.byteLength=p,t.toByteArray=d,t.fromByteArray=m;for(var r=[],a=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,l=i.length;o<l;++o)r[o]=i[o],a[i.charCodeAt(o)]=o;function u(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");-1===n&&(n=t);var r=n===t?0:4-n%4;return[n,r]}function p(e){var t=u(e),n=t[0],r=t[1];return 3*(n+r)/4-r}function h(e,t,n){return 3*(t+n)/4-n}function d(e){var t,n,r=u(e),i=r[0],o=r[1],l=new s(h(e,i,o)),p=0,d=o>0?i-4:i;for(n=0;n<d;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],l[p++]=t>>16&255,l[p++]=t>>8&255,l[p++]=255&t;return 2===o&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,l[p++]=255&t),1===o&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,l[p++]=t>>8&255,l[p++]=255&t),l}function c(e){return r[e>>18&63]+r[e>>12&63]+r[e>>6&63]+r[63&e]}function f(e,t,n){for(var r,a=[],s=t;s<n;s+=3)r=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(c(r));return a.join("")}function m(e){for(var t,n=e.length,a=n%3,s=[],i=16383,o=0,l=n-a;o<l;o+=i)s.push(f(e,o,o+i>l?l:o+i));return 1===a?(t=e[n-1],s.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],s.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),s.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},"3c35":function(e,t){(function(t){e.exports=t}).call(this,{})},"75bf":function(e,t,n){"use strict";n.r(t),function(e,r,a,s,i){n.d(t,"AgeGenderNet",(function(){return Koe})),n.d(t,"BoundingBox",(function(){return Use})),n.d(t,"Box",(function(){return Vse})),n.d(t,"ComposableTask",(function(){return lue})),n.d(t,"ComputeAllFaceDescriptorsTask",(function(){return jue})),n.d(t,"ComputeFaceDescriptorsTaskBase",(function(){return Hue})),n.d(t,"ComputeSingleFaceDescriptorTask",(function(){return que})),n.d(t,"DetectAllFaceLandmarksTask",(function(){return Xue})),n.d(t,"DetectAllFacesTask",(function(){return Zue})),n.d(t,"DetectFaceLandmarksTaskBase",(function(){return Kue})),n.d(t,"DetectFacesTaskBase",(function(){return Jue})),n.d(t,"DetectSingleFaceLandmarksTask",(function(){return Yue})),n.d(t,"DetectSingleFaceTask",(function(){return Que})),n.d(t,"Dimensions",(function(){return Tse})),n.d(t,"FACE_EXPRESSION_LABELS",(function(){return Soe})),n.d(t,"FaceDetection",(function(){return Hse})),n.d(t,"FaceDetectionNet",(function(){return Ble})),n.d(t,"FaceExpressionNet",(function(){return Toe})),n.d(t,"FaceExpressions",(function(){return Noe})),n.d(t,"FaceLandmark68Net",(function(){return Yoe})),n.d(t,"FaceLandmark68TinyNet",(function(){return ele})),n.d(t,"FaceLandmarkNet",(function(){return tle})),n.d(t,"FaceLandmarks",(function(){return sie})),n.d(t,"FaceLandmarks5",(function(){return iie})),n.d(t,"FaceLandmarks68",(function(){return oie})),n.d(t,"FaceMatch",(function(){return lie})),n.d(t,"FaceMatcher",(function(){return ipe})),n.d(t,"FaceRecognitionNet",(function(){return cle})),n.d(t,"Gender",(function(){return qoe})),n.d(t,"LabeledBox",(function(){return uie})),n.d(t,"LabeledFaceDescriptors",(function(){return pie})),n.d(t,"NetInput",(function(){return Wie})),n.d(t,"NeuralNetwork",(function(){return eoe})),n.d(t,"ObjectDetection",(function(){return Gse})),n.d(t,"Point",(function(){return Wse})),n.d(t,"PredictedBox",(function(){return hie})),n.d(t,"Rect",(function(){return tie})),n.d(t,"SsdMobilenetv1",(function(){return Lle})),n.d(t,"SsdMobilenetv1Options",(function(){return Ole})),n.d(t,"TinyFaceDetector",(function(){return fue})),n.d(t,"TinyFaceDetectorOptions",(function(){return oue})),n.d(t,"TinyYolov2",(function(){return sue})),n.d(t,"TinyYolov2Options",(function(){return nue})),n.d(t,"allFaces",(function(){return ape})),n.d(t,"allFacesSsdMobilenetv1",(function(){return npe})),n.d(t,"allFacesTinyYolov2",(function(){return rpe})),n.d(t,"awaitMediaLoaded",(function(){return Fie})),n.d(t,"bufferToImage",(function(){return Die})),n.d(t,"computeFaceDescriptor",(function(){return vue})),n.d(t,"createCanvas",(function(){return Oie})),n.d(t,"createCanvasFromMedia",(function(){return Lie})),n.d(t,"createFaceDetectionNet",(function(){return zle})),n.d(t,"createFaceRecognitionNet",(function(){return fle})),n.d(t,"createSsdMobilenetv1",(function(){return Ple})),n.d(t,"createTinyFaceDetector",(function(){return ope})),n.d(t,"createTinyYolov2",(function(){return iue})),n.d(t,"detectAllFaces",(function(){return tpe})),n.d(t,"detectFaceLandmarks",(function(){return xue})),n.d(t,"detectFaceLandmarksTiny",(function(){return wue})),n.d(t,"detectLandmarks",(function(){return Due})),n.d(t,"detectSingleFace",(function(){return epe})),n.d(t,"draw",(function(){return Ise})),n.d(t,"env",(function(){return Iie})),n.d(t,"euclideanDistance",(function(){return spe})),n.d(t,"extendWithAge",(function(){return yle})),n.d(t,"extendWithFaceDescriptor",(function(){return mle})),n.d(t,"extendWithFaceDetection",(function(){return cie})),n.d(t,"extendWithFaceExpressions",(function(){return Coe})),n.d(t,"extendWithFaceLandmarks",(function(){return $oe})),n.d(t,"extendWithGender",(function(){return xle})),n.d(t,"extractFaceTensors",(function(){return Gie})),n.d(t,"extractFaces",(function(){return Uie})),n.d(t,"fetchImage",(function(){return jie})),n.d(t,"fetchJson",(function(){return qie})),n.d(t,"fetchNetWeights",(function(){return Kie})),n.d(t,"fetchOrThrow",(function(){return Hie})),n.d(t,"fetchVideo",(function(){return Yie})),n.d(t,"getContext2dOrThrow",(function(){return Nie})),n.d(t,"getMediaDimensions",(function(){return Mie})),n.d(t,"imageTensorToCanvas",(function(){return Pie})),n.d(t,"imageToSquare",(function(){return Bie})),n.d(t,"inverseSigmoid",(function(){return Qse})),n.d(t,"iou",(function(){return jse})),n.d(t,"isMediaElement",(function(){return zie})),n.d(t,"isMediaLoaded",(function(){return $ie})),n.d(t,"isWithAge",(function(){return gle})),n.d(t,"isWithFaceDetection",(function(){return die})),n.d(t,"isWithFaceExpressions",(function(){return _oe})),n.d(t,"isWithFaceLandmarks",(function(){return Aoe})),n.d(t,"isWithGender",(function(){return ble})),n.d(t,"loadAgeGenderModel",(function(){return Rue})),n.d(t,"loadFaceDetectionModel",(function(){return $ue})),n.d(t,"loadFaceExpressionModel",(function(){return Aue})),n.d(t,"loadFaceLandmarkModel",(function(){return _ue})),n.d(t,"loadFaceLandmarkTinyModel",(function(){return Cue})),n.d(t,"loadFaceRecognitionModel",(function(){return Eue})),n.d(t,"loadSsdMobilenetv1Model",(function(){return Sue})),n.d(t,"loadTinyFaceDetectorModel",(function(){return Nue})),n.d(t,"loadTinyYolov2Model",(function(){return Tue})),n.d(t,"loadWeightMap",(function(){return Zie})),n.d(t,"locateFaces",(function(){return Fue})),n.d(t,"matchDimensions",(function(){return Qie})),n.d(t,"minBbox",(function(){return qse})),n.d(t,"nets",(function(){return mue})),n.d(t,"nonMaxSuppression",(function(){return Kse})),n.d(t,"normalize",(function(){return Xse})),n.d(t,"padToSquare",(function(){return Yse})),n.d(t,"predictAgeAndGender",(function(){return Iue})),n.d(t,"recognizeFaceExpressions",(function(){return kue})),n.d(t,"resizeResults",(function(){return lpe})),n.d(t,"resolveInput",(function(){return Sie})),n.d(t,"shuffleArray",(function(){return Jse})),n.d(t,"sigmoid",(function(){return Zse})),n.d(t,"ssdMobilenetv1",(function(){return gue})),n.d(t,"tf",(function(){return p})),n.d(t,"tinyFaceDetector",(function(){return yue})),n.d(t,"tinyYolov2",(function(){return bue})),n.d(t,"toNetInput",(function(){return Vie})),n.d(t,"utils",(function(){return Nse})),n.d(t,"validateConfig",(function(){return Kle})),n.d(t,"version",(function(){return upe}));var o=Object.defineProperty,l=(e=>n("01f3"))(),u=(e,t)=>{for(var n in t)o(e,n,{get:t[n],enumerable:!0})},p={};u(p,{Abs:()=>Je,Acos:()=>Ze,Acosh:()=>Qe,AdadeltaOptimizer:()=>Jb,AdagradOptimizer:()=>Zb,AdamOptimizer:()=>Qb,AdamaxOptimizer:()=>ex,Add:()=>et,AddN:()=>tt,All:()=>nt,Any:()=>rt,ArgMax:()=>at,ArgMin:()=>st,Asin:()=>it,Asinh:()=>ot,Atan:()=>lt,Atan2:()=>pt,Atanh:()=>ut,AvgPool:()=>ht,AvgPool3D:()=>ct,AvgPool3DGrad:()=>ft,AvgPoolGrad:()=>dt,BackendWasm:()=>Zae,BatchMatMul:()=>mt,BatchToSpaceND:()=>gt,Bincount:()=>yt,BitwiseAnd:()=>bt,BroadcastArgs:()=>wt,BroadcastTo:()=>xt,Callback:()=>yF,CallbackList:()=>i_,Cast:()=>vt,Ceil:()=>kt,ClipByValue:()=>It,Complex:()=>St,ComplexAbs:()=>Nt,Concat:()=>Tt,Conv2D:()=>_t,Conv2DBackpropFilter:()=>Ct,Conv2DBackpropInput:()=>Et,Conv3D:()=>At,Conv3DBackpropFilterV2:()=>Rt,Conv3DBackpropInputV2:()=>$t,Cos:()=>Ft,Cosh:()=>Dt,CropAndResize:()=>Lt,Cumprod:()=>Mt,Cumsum:()=>Ot,CustomCallback:()=>u_,DataStorage:()=>V,DenseBincount:()=>Pt,DepthToSpace:()=>zt,DepthwiseConv2dNative:()=>Bt,DepthwiseConv2dNativeBackpropFilter:()=>Wt,DepthwiseConv2dNativeBackpropInput:()=>Vt,Diag:()=>Ut,Dilation2D:()=>Gt,Dilation2DBackpropFilter:()=>jt,Dilation2DBackpropInput:()=>Ht,Draw:()=>qt,ENV:()=>je,EarlyStopping:()=>wF,Einsum:()=>Xt,Elu:()=>Yt,EluGrad:()=>Jt,Environment:()=>Be,Equal:()=>Qt,Erf:()=>Zt,Exp:()=>en,ExpandDims:()=>tn,Expm1:()=>nn,FFT:()=>rn,Fill:()=>an,FlipLeftRight:()=>sn,Floor:()=>on,FloorDiv:()=>ln,FromPixels:()=>ha,FusedBatchNorm:()=>un,FusedConv2D:()=>fa,FusedDepthwiseConv2D:()=>ma,GPGPUContext:()=>PK,GatherNd:()=>hn,GatherV2:()=>pn,GraphModel:()=>LM,Greater:()=>dn,GreaterEqual:()=>cn,History:()=>l_,IFFT:()=>mn,Identity:()=>fn,Imag:()=>gn,InputSpec:()=>QN,IsFinite:()=>yn,IsInf:()=>bn,IsNan:()=>xn,KernelBackend:()=>U,LRN:()=>$n,LRNGrad:()=>Fn,LayerVariable:()=>XN,LayersModel:()=>VC,LeakyRelu:()=>wn,Less:()=>vn,LessEqual:()=>kn,LinSpace:()=>In,Log:()=>Sn,Log1p:()=>Nn,LogSoftmax:()=>An,LogicalAnd:()=>Tn,LogicalNot:()=>_n,LogicalOr:()=>Cn,LogicalXor:()=>En,LowerBound:()=>Rn,MathBackendCPU:()=>uL,MathBackendWebGL:()=>bY,MatrixBandPart:()=>Dn,Max:()=>Mn,MaxPool:()=>Ln,MaxPool3D:()=>zn,MaxPool3DGrad:()=>Bn,MaxPoolGrad:()=>Pn,MaxPoolWithArgmax:()=>Wn,Maximum:()=>On,Mean:()=>Vn,Min:()=>Un,Minimum:()=>Gn,MirrorPad:()=>Hn,Mod:()=>jn,MomentumOptimizer:()=>nx,Multinomial:()=>qn,Multiply:()=>Kn,Neg:()=>Xn,NonMaxSuppressionV3:()=>Jn,NonMaxSuppressionV4:()=>Zn,NonMaxSuppressionV5:()=>Qn,NotEqual:()=>Yn,OP_SCOPE_SUFFIX:()=>ui,OneHot:()=>tr,OnesLike:()=>er,Optimizer:()=>Yb,OptimizerConstructors:()=>Iw,Pack:()=>nr,PadV2:()=>rr,Pool:()=>ar,Pow:()=>sr,Prelu:()=>ir,Prod:()=>or,RMSPropOptimizer:()=>rx,RNN:()=>tA,RaggedGather:()=>lr,RaggedRange:()=>ur,RaggedTensorToTensor:()=>pr,Range:()=>hr,Rank:()=>_s,Real:()=>dr,RealDiv:()=>Kt,Reciprocal:()=>cr,Reduction:()=>Zy,Relu:()=>fr,Relu6:()=>wr,Reshape:()=>mr,ResizeBilinear:()=>br,ResizeBilinearGrad:()=>xr,ResizeNearestNeighbor:()=>gr,ResizeNearestNeighborGrad:()=>yr,Reverse:()=>vr,RotateWithOffset:()=>da,Round:()=>kr,Rsqrt:()=>Ir,SGDOptimizer:()=>tx,ScatterNd:()=>Sr,SearchSorted:()=>Tr,Select:()=>_r,Selu:()=>Cr,Sequential:()=>KC,Sigmoid:()=>Fr,Sign:()=>$r,Sin:()=>Ar,Sinh:()=>Rr,Slice:()=>Er,Softmax:()=>zr,Softplus:()=>Dr,SpaceToBatchND:()=>Lr,SparseFillEmptyRows:()=>Br,SparseReshape:()=>Wr,SparseSegmentMean:()=>Vr,SparseSegmentSum:()=>Ur,SparseToDense:()=>Gr,SplitV:()=>Pr,Sqrt:()=>Mr,Square:()=>jr,SquaredDifference:()=>Hr,StaticRegexReplace:()=>qr,Step:()=>pa,StridedSlice:()=>Kr,StringNGrams:()=>Xr,StringSplit:()=>Yr,StringToHashBucketFast:()=>Jr,Sub:()=>Zr,Sum:()=>Or,SymbolicTensor:()=>eT,Tan:()=>Qr,Tanh:()=>ea,Tensor:()=>Ss,TensorBuffer:()=>bs,TensorScatterUpdate:()=>Nr,Tile:()=>ta,TopK:()=>na,Transform:()=>ra,Transpose:()=>aa,Unique:()=>sa,Unpack:()=>ia,UnsortedSegmentSum:()=>oa,UpperBound:()=>la,Variable:()=>Ts,ZerosLike:()=>ua,_FusedMatMul:()=>ca,abs:()=>ml,acos:()=>yl,acosh:()=>xl,add:()=>ol,addN:()=>vl,all:()=>Il,any:()=>Nl,argMax:()=>_l,argMin:()=>El,asin:()=>Rl,asinh:()=>Fl,atan:()=>Ml,atan2:()=>Ll,atanh:()=>zl,avgPool:()=>lu,avgPool3d:()=>pu,backend:()=>Li,backend_util:()=>Cw,basicLSTMCell:()=>ku,batchNorm:()=>_u,batchNorm2d:()=>Eu,batchNorm3d:()=>Ru,batchNorm4d:()=>Fu,batchToSpaceND:()=>Su,bincount:()=>Mu,bitwiseAnd:()=>Lu,booleanMaskAsync:()=>cg,broadcastArgs:()=>zu,broadcastTo:()=>Wu,broadcast_util:()=>Fp,browser:()=>zx,buffer:()=>Qo,callbacks:()=>SF,cast:()=>tl,ceil:()=>Uu,clipByValue:()=>ju,clone:()=>rl,complex:()=>di,concat:()=>du,concat1d:()=>Ku,concat2d:()=>Yu,concat3d:()=>Zu,concat4d:()=>ep,constraints:()=>IT,conv1d:()=>ap,conv2d:()=>np,conv2dTranspose:()=>lp,conv3d:()=>pp,conv3dTranspose:()=>fp,copyRegisteredKernels:()=>_a,cos:()=>gp,cosh:()=>bp,cosineWindow:()=>Eg,cumprod:()=>wp,cumsum:()=>kp,customGrad:()=>yd,data:()=>VM,denseBincount:()=>Sp,deprecationWarn:()=>vi,depthToSpace:()=>Tp,depthwiseConv2d:()=>Cp,deregisterOp:()=>EF,device_util:()=>Zs,diag:()=>Ap,dilation2d:()=>$p,disableDeprecationWarnings:()=>wi,dispose:()=>_i,disposeVariables:()=>ki,div:()=>hl,divNoNan:()=>Gp,dot:()=>jp,dropout:()=>_g,einsum:()=>Kp,elu:()=>Yp,enableDebugMode:()=>xi,enableProdMode:()=>bi,enclosingPowerOfTwo:()=>Cg,engine:()=>Ii,ensureShape:()=>Zp,env:()=>Ge,equal:()=>Pp,erf:()=>eh,euclideanNorm:()=>Th,exp:()=>Ch,expandDims:()=>Ah,expm1:()=>$h,eye:()=>Oh,fft:()=>bm,fill:()=>Gu,findBackend:()=>Di,findBackendFactory:()=>Mi,floor:()=>Ph,floorDiv:()=>ul,forceHalfFloat:()=>vY,fused:()=>$g,gather:()=>Bh,gatherND:()=>Sg,gather_util:()=>Qx,getBackend:()=>$i,getGradient:()=>va,getKernel:()=>wa,getKernelsForBackend:()=>ka,getThreadsCount:()=>fse,gpgpu_util:()=>mK,grad:()=>dd,grads:()=>cd,greater:()=>Vh,greaterEqual:()=>Gh,ifft:()=>wm,imag:()=>jh,image:()=>Pb,inTopKAsync:()=>Rg,initializers:()=>PT,input:()=>JC,io:()=>ix,irfft:()=>km,isFinite:()=>Kh,isInf:()=>Yh,isNaN:()=>Zh,keep:()=>Ci,kernel_impls:()=>Dv,layers:()=>t_,leakyRelu:()=>ed,less:()=>nd,lessEqual:()=>ad,linalg:()=>zb,linspace:()=>sd,loadGraphModel:()=>PM,loadGraphModelSync:()=>zM,loadLayersModel:()=>HC,localResponseNormalization:()=>od,log:()=>ud,log1p:()=>hd,logSigmoid:()=>Sd,logSoftmax:()=>Cd,logSumExp:()=>Ad,logicalAnd:()=>$d,logicalNot:()=>Dd,logicalOr:()=>Od,logicalXor:()=>Pd,losses:()=>Bb,lowerBound:()=>Vd,matMul:()=>fu,math:()=>Ox,max:()=>ph,maxPool:()=>Gd,maxPool3d:()=>jd,maxPoolWithArgmax:()=>Kd,maximum:()=>Yd,mean:()=>Zd,memory:()=>Si,meshgrid:()=>tc,metrics:()=>Y$,min:()=>dh,minimum:()=>rc,mirrorPad:()=>sc,mod:()=>oc,model:()=>XC,models:()=>dF,moments:()=>uc,movingAverage:()=>yg,mul:()=>cl,multiRNNCell:()=>hc,multinomial:()=>cc,neg:()=>wd,nextFrame:()=>Tw,norm:()=>Sh,notEqual:()=>mc,oneHot:()=>yc,ones:()=>ec,onesLike:()=>xc,op:()=>pi,outerProduct:()=>vc,pad:()=>Ic,pad1d:()=>Nc,pad2d:()=>_c,pad3d:()=>Ec,pad4d:()=>Rc,pool:()=>Lc,pow:()=>fh,prelu:()=>zc,print:()=>al,prod:()=>Wc,profile:()=>Ni,raggedGather:()=>Uc,raggedRange:()=>Hc,raggedTensorToTensor:()=>qc,rand:()=>Xc,randomGamma:()=>yf,randomNormal:()=>xf,randomStandardNormal:()=>vf,randomUniform:()=>If,randomUniformInt:()=>Nf,range:()=>Tf,ready:()=>Ri,real:()=>Cf,reciprocal:()=>Af,registerBackend:()=>Oi,registerCallbackConstructor:()=>ZC,registerGradient:()=>Sa,registerKernel:()=>Ia,registerOp:()=>_F,regularizers:()=>cF,relu:()=>$f,relu6:()=>Df,removeBackend:()=>Fi,reshape:()=>iu,reverse:()=>Of,reverse1d:()=>Pf,reverse2d:()=>Bf,reverse3d:()=>Vf,reverse4d:()=>Gf,rfft:()=>Tm,round:()=>jf,rsqrt:()=>Kf,scalar:()=>mh,scatterND:()=>xg,scatter_util:()=>Hm,searchSorted:()=>Wd,selu:()=>Yf,separableConv2d:()=>Zf,sequential:()=>YC,serialization:()=>Ub,setBackend:()=>Ai,setPlatform:()=>Pi,setThreadsCount:()=>cse,setWasmPath:()=>use,setWasmPaths:()=>pse,setWebGLContext:()=>HH,setdiff1dAsync:()=>em,shared:()=>pL,sigmoid:()=>gu,sign:()=>nm,signal:()=>Lb,sin:()=>am,sinh:()=>im,slice:()=>bu,slice1d:()=>lm,slice2d:()=>pm,slice3d:()=>dm,slice4d:()=>fm,slice_util:()=>tw,softmax:()=>gm,softplus:()=>kd,spaceToBatchND:()=>Fc,sparse:()=>Wb,sparseToDense:()=>kg,spectral:()=>Ob,split:()=>Sm,sqrt:()=>yh,square:()=>xh,squaredDifference:()=>Cm,squeeze:()=>Am,stack:()=>$m,step:()=>Dm,stridedSlice:()=>Om,string:()=>Vb,sub:()=>Td,sum:()=>vh,sumOutType:()=>Ms,tan:()=>Pm,tanh:()=>wu,tensor:()=>fi,tensor1d:()=>zm,tensor2d:()=>Bm,tensor3d:()=>Wm,tensor4d:()=>Vm,tensor5d:()=>Um,tensor6d:()=>Gm,tensorScatterUpdate:()=>Ym,tensor_util:()=>$s,test_util:()=>Jc,tidy:()=>Ti,tile:()=>Dh,time:()=>Ei,topk:()=>Zm,train:()=>Sw,transpose:()=>mg,truncatedNormal:()=>eg,unique:()=>ng,unregisterGradient:()=>Ta,unregisterKernel:()=>Na,unsortedSegmentSum:()=>ag,unstack:()=>ig,upcastType:()=>Ds,upperBound:()=>og,util:()=>Ea,valueAndGrad:()=>fd,valueAndGrads:()=>md,variable:()=>lg,variableGrads:()=>gd,version:()=>kse,version_converter:()=>WM,version_core:()=>kw,version_cpu:()=>Gz,version_layers:()=>hC,version_wasm:()=>mse,version_webgl:()=>wY,webgl:()=>kY,webgl_util:()=>zH,where:()=>Bp,whereAsync:()=>hg,zeros:()=>Qd,zerosLike:()=>Vp});var h=Object.create,d=Object.defineProperty,c=Object.getOwnPropertyDescriptor,f=Object.getOwnPropertyNames,m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty,y=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),b=(e,t)=>{for(var n in t)d(e,n,{get:t[n],enumerable:!0})},x=(e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of f(t))!g.call(e,a)&&a!==n&&d(e,a,{get:()=>t[a],enumerable:!(r=c(t,a))||r.enumerable});return e},w=(e,t,n)=>(n=null!=e?h(m(e)):{},x(!t&&e&&e.__esModule?n:d(n,"default",{value:e,enumerable:!0}),e)),v=y((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(C){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(e>>>=0,(a=0<=e&&e<256)&&(r=i[e],r)?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n)):(e|=0,(a=-128<=e&&e<128)&&(r=s[e],r)?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n))}function l(e,t){if(isNaN(e))return t?w:x;if(t){if(e<0)return w;if(e>=g)return N}else{if(e<=-y)return T;if(e+1>=y)return S}return e<0?l(-e,t).neg():u(e%m|0,e/m|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var p=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return x;if("number"==typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var a=l(p(n,8)),s=x,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var d=l(p(n,o));s=s.mul(d).add(l(u))}else s=s.mul(a),s=s.add(l(u))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?h(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=d;var c=65536,f=1<<24,m=c*c,g=m*m,y=g/2,b=o(f),x=o(0);r.ZERO=x;var w=o(0,!0);r.UZERO=w;var v=o(1);r.ONE=v;var k=o(1,!0);r.UONE=k;var I=o(-1);r.NEG_ONE=I;var S=u(-1,2147483647,!1);r.MAX_VALUE=S;var N=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=N;var T=u(0,-2147483648,!1);r.MIN_VALUE=T;var _=r.prototype;_.toInt=function(){return this.unsigned?this.low>>>0:this.low},_.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},_.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(T)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(p(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=s.sub(o.mul(a)).toInt()>>>0,h=u.toString(e);if(s=o,s.isZero())return h+i;for(;h.length<6;)h="0"+h;i=""+h+i}},_.getHighBits=function(){return this.high},_.getHighBitsUnsigned=function(){return this.high>>>0},_.getLowBits=function(){return this.low},_.getLowBitsUnsigned=function(){return this.low>>>0},_.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},_.isZero=function(){return 0===this.high&&0===this.low},_.eqz=_.isZero,_.isNegative=function(){return!this.unsigned&&this.high<0},_.isPositive=function(){return this.unsigned||this.high>=0},_.isOdd=function(){return 1===(1&this.low)},_.isEven=function(){return 0===(1&this.low)},_.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},_.eq=_.equals,_.notEquals=function(e){return!this.eq(e)},_.neq=_.notEquals,_.ne=_.notEquals,_.lessThan=function(e){return this.comp(e)<0},_.lt=_.lessThan,_.lessThanOrEqual=function(e){return this.comp(e)<=0},_.lte=_.lessThanOrEqual,_.le=_.lessThanOrEqual,_.greaterThan=function(e){return this.comp(e)>0},_.gt=_.greaterThan,_.greaterThanOrEqual=function(e){return this.comp(e)>=0},_.gte=_.greaterThanOrEqual,_.ge=_.greaterThanOrEqual,_.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},_.comp=_.compare,_.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(v)},_.neg=_.negate,_.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,p=65535&e.low,h=0,c=0,f=0,m=0;return m+=s+p,f+=m>>>16,m&=65535,f+=r+l,c+=f>>>16,f&=65535,c+=n+o,h+=c>>>16,c&=65535,h+=t+i,h&=65535,u(f<<16|m,h<<16|c,this.unsigned)},_.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},_.sub=_.subtract,_.multiply=function(e){if(this.isZero())return x;if(a(e)||(e=d(e)),n){var t=n.mul(this.low,this.high,e.low,e.high);return u(t,n.get_high(),this.unsigned)}if(e.isZero())return x;if(this.eq(T))return e.isOdd()?T:x;if(e.eq(T))return this.isOdd()?T:x;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b)&&e.lt(b))return l(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=65535&this.high,i=this.low>>>16,o=65535&this.low,p=e.high>>>16,h=65535&e.high,c=e.low>>>16,f=65535&e.low,m=0,g=0,y=0,w=0;return w+=o*f,y+=w>>>16,w&=65535,y+=i*f,g+=y>>>16,y&=65535,y+=o*c,g+=y>>>16,y&=65535,g+=s*f,m+=g>>>16,g&=65535,g+=i*c,m+=g>>>16,g&=65535,g+=o*h,m+=g>>>16,g&=65535,m+=r*f+s*c+i*h+o*p,m&=65535,u(y<<16|w,m<<16|g,this.unsigned)},_.mul=_.multiply,_.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var t=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high);return u(t,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:x;var r,s,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return w;if(e.gt(this.shru(1)))return k;i=w}else{if(this.eq(T)){if(e.eq(v)||e.eq(I))return T;if(e.eq(T))return v;var o=this.shr(1);return r=o.div(e).shl(1),r.eq(x)?e.isNegative()?v:I:(s=this.sub(e.mul(r)),i=r.add(s.div(e)),i)}if(e.eq(T))return this.unsigned?w:x;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=x}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var h=Math.ceil(Math.log(r)/Math.LN2),c=h<=48?1:p(2,h-48),f=l(r),m=f.mul(e);m.isNegative()||m.gt(s);)r-=c,f=l(r,this.unsigned),m=f.mul(e);f.isZero()&&(f=v),i=i.add(f),s=s.sub(m)}return i},_.div=_.divide,_.modulo=function(e){if(a(e)||(e=d(e)),n){var t=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high);return u(t,n.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},_.mod=_.modulo,_.rem=_.modulo,_.not=function(){return u(~this.low,~this.high,this.unsigned)},_.and=function(e){return a(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},_.or=function(e){return a(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},_.xor=function(e){return a(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},_.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},_.shl=_.shiftLeft,_.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},_.shr=_.shiftRight,_.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return u(n>>>e|t<<32-e,t>>>e,this.unsigned)}return u(32===e?t:t>>>e-32,0,this.unsigned)},_.shru=_.shiftRightUnsigned,_.shr_u=_.shiftRightUnsigned,_.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},_.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},_.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},_.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},_.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}),k=y(()=>{}),I=y(()=>{}),S=y((e,t)=>{(function(e,t,n){function r(e){var t=this,n=i();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}function i(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),N=y((e,t)=>{(function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),T=y((e,t)=>{(function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),_=y((e,t)=>{(function(e,t,n){function r(e){var t=this;function n(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],e^=e>>>7,n=e^e<<24,e=r[a+1&7],n^=e^e>>>10,e=r[a+3&7],n^=e^e>>>3,e=r[a+4&7],n^=e^e<<7,e=r[a+7&7],e^=e<<13,n^=e^e<<9,r[a]=n,t.i=a+1&7,n},n(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),C=y((e,t)=>{(function(e,t,n){function r(e){var t=this;function n(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,n=o[127&s]^=r+i,a=0==n?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},n(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),E=y((e,t)=>{(function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),A=y(()=>{}),R=y((e,t)=>{(function(e,r,a){var s,i=256,o=6,l=52,u="random",p=a.pow(i,o),h=a.pow(2,l),d=2*h,c=i-1;function f(e,t,n){var s=[];t=1==t?{entropy:!0}:t||{};var l=b(y(t.entropy?[e,w(r)]:null==e?x():e,3),s),c=new m(s),f=function(){for(var e=c.g(o),t=p,n=0;e<h;)e=(e+n)*i,t*=i,n=c.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return f.int32=function(){return 0|c.g(4)},f.quick=function(){return c.g(4)/4294967296},f.double=f,b(w(c.S),r),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,c),e.state=function(){return g(c,{})}),n?(a[u]=e,t):e})(f,l,"global"in t?t.global:this==a,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return w(t)}function x(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),w(t)}catch(o){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,w(r)]}}function w(e){return String.fromCharCode.apply(0,e)}if(b(a.random(),r),"object"==typeof t&&t.exports){t.exports=f;try{s=A()}catch(v){}}else"function"==typeof define&&n("3c35")?define((function(){return f})):a["seed"+u]=f})("undefined"!=typeof self?self:e,[],Math)}),$=y((e,t)=>{var n=S(),r=N(),a=T(),s=_(),i=C(),o=E(),l=R();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),F=y(()=>{}),D=y(()=>{}),M=y(()=>{}),O=y(()=>{}),L=y(()=>{}),P=y(()=>{}),z=y((t,i)=>{var o=(()=>{var t="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return t=t||e,function(e){function n(){return B.buffer!=H&&ne(B.buffer),j}function i(){return B.buffer!=H&&ne(B.buffer),q}function o(){return B.buffer!=H&&ne(B.buffer),K}function l(){return B.buffer!=H&&ne(B.buffer),X}function u(){return B.buffer!=H&&ne(B.buffer),Y}e=e||{};var p,h,d,c="undefined"!=typeof e?e:{};c.ready=new Promise((function(e,t){p=e,h=t})),"undefined"!=typeof r&&r.listeners&&(d={uncaughtException:r.listeners("uncaughtException"),unhandledRejection:r.listeners("unhandledRejection")});var f,m,g,y=Object.assign({},c),b=[],x=(e,t)=>{throw t},w="object"==typeof window,v="function"==typeof importScripts,k="object"==typeof r&&"object"==typeof r.versions&&"string"==typeof r.versions.node,I=c.ENVIRONMENT_IS_PTHREAD||!1,S="";function N(e){return c.locateFile?c.locateFile(e,S):S+e}function T(e){e instanceof Ee||$("exiting due to exception: "+e)}if(k){var _=D(),C=M();let e;S=v?C.dirname(S)+"/":a+"/",f=(e,t)=>(e=Se(e)?new URL(e):C.normalize(e),_.readFileSync(e,t?void 0:"utf8")),g=e=>{var t=f(e,!0);return t.buffer||(t=new Uint8Array(t)),t},m=(e,t,n)=>{e=Se(e)?new URL(e):C.normalize(e),_.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),b=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof Ee))throw e})),r.on("unhandledRejection",(function(e){throw e})),x=(e,t)=>{if(le())throw r.exitCode=e,t;T(t),r.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{e=O()}catch(Gt){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),Gt}s.Worker=e.Worker}else(w||v)&&(v?S=self.location.href:"undefined"!=typeof document&&document.currentScript&&(S=document.currentScript.src),"undefined"!=typeof t&&t&&(S=t),S=0!==S.indexOf("blob:")?S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1):"",k||(f=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},v&&(g=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),m=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}),e=>document.title=e);k&&"undefined"==typeof performance&&(s.performance=L().performance);var E=console.log.bind(console),A=console.warn.bind(console);k&&(E=e=>_.writeSync(1,e+"\n"),A=e=>_.writeSync(2,e+"\n"));var R=c.print||E,$=c.printErr||A;Object.assign(c,y),y=null,c.arguments&&(b=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(x=c.quit);var F;Atomics.load,Atomics.store,Atomics.compareExchange;c.wasmBinary&&(F=c.wasmBinary);var z=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&we("no native wasm support detected");var B,W,V,U=!1;function G(e,t){e||we(t)}var H,j,q,K,X,Y,J="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function Z(e,t,n){t>>>=0;for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&J)return J.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,a):e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if(i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++],i<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function Q(e,t){return e>>>=0,e?Z(i(),e,t):""}function ee(e,t,n,r){if(n>>>=0,!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343){var l=e.charCodeAt(++i);o=65536+((1023&o)<<10)|1023&l}if(o<=127){if(n>=s)break;t[n++>>>0]=o}else if(o<=2047){if(n+1>=s)break;t[n++>>>0]=192|o>>6,t[n++>>>0]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++>>>0]=224|o>>12,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}else{if(n+3>=s)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}}return t[n>>>0]=0,n-a}function te(e,t,n){return ee(e,i(),t,n)}function ne(e){H=e,c.HEAP8=j=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=K=new Int32Array(e),c.HEAPU8=q=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=X=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=Y=new Float64Array(e)}I&&(H=c.buffer);var re=c.INITIAL_MEMORY||16777216;if(I)B=c.wasmMemory,H=c.buffer;else if(c.wasmMemory)B=c.wasmMemory;else if(B=new WebAssembly.Memory({initial:re/65536,maximum:65536,shared:!0}),!(B.buffer instanceof SharedArrayBuffer))throw $("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),k&&$("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");B&&(H=B.buffer),re=H.byteLength,ne(H);var ae,se=[],ie=[],oe=[];function le(){return z}function ue(){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)de(c.preRun.shift());ze(se)}function pe(){!0,!I&&ze(ie)}function he(){if(!I){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)fe(c.postRun.shift());ze(oe)}}function de(e){se.unshift(e)}function ce(e){ie.unshift(e)}function fe(e){oe.unshift(e)}var me=0,ge=null,ye=null;function be(e){me++,c.monitorRunDependencies&&c.monitorRunDependencies(me)}function xe(e){if(me--,c.monitorRunDependencies&&c.monitorRunDependencies(me),0==me&&(null!==ge&&(clearInterval(ge),ge=null),ye)){var t=ye;ye=null,t()}}function we(e){c.onAbort&&c.onAbort(e),e="Aborted("+e+")",$(e),U=!0,V=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw h(t),t}var ve,ke="data:application/octet-stream;base64,";function Ie(e){return e.startsWith(ke)}function Se(e){return e.startsWith("file://")}function Ne(e){try{if(e==ve&&F)return new Uint8Array(F);if(g)return g(e);throw"both async and sync fetching of the wasm failed"}catch(Gt){we(Gt)}}function Te(){if(!F&&(w||v)){if("function"==typeof fetch&&!Se(ve))return fetch(ve,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ve+"'";return e.arrayBuffer()})).catch((function(){return Ne(ve)}));if(m)return new Promise((function(e,t){m(ve,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Ne(ve)}))}function _e(){var e={env:Rt,wasi_snapshot_preview1:Rt};function t(e,t){var n=e.exports;if(c.asm=n,He(c.asm._emscripten_tls_init),ae=c.asm.__indirect_function_table,ce(c.asm.__wasm_call_ctors),W=t,!I){var r=Pe.unusedWorkers.length;Pe.unusedWorkers.forEach((function(e){Pe.loadWasmModuleToWorker(e,(function(){--r||xe("wasm-instantiate")}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Te().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){$("failed to asynchronously prepare wasm: "+e),we(e)}))}function a(){return F||"function"!=typeof WebAssembly.instantiateStreaming||Ie(ve)||Se(ve)||k||"function"!=typeof fetch?r(n):fetch(ve,{credentials:"same-origin"}).then((function(t){var a=WebAssembly.instantiateStreaming(t,e);return a.then(n,(function(e){return $("wasm streaming compile failed: "+e),$("falling back to ArrayBuffer instantiation"),r(n)}))}))}if(I||be("wasm-instantiate"),c.instantiateWasm)try{var s=c.instantiateWasm(e,t);return s}catch(i){$("Module.instantiateWasm callback failed with error: "+i),h(i)}return a().catch(h),{}}ve="tfjs-backend-wasm-threaded-simd.wasm",Ie(ve)||(ve=N(ve));var Ce={};function Ee(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Ae(e){var t=Pe.pthreads[e];delete Pe.pthreads[e],t.terminate(),Ot(e),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(t),1),t.pthread_ptr=0}function Re(e){var t=Pe.pthreads[e];t.postMessage({cmd:"cancel"})}function $e(e){var t=Pe.pthreads[e];G(t),Pe.returnWorkerToPool(t)}function Fe(e){var t=Pe.getNewWorker();if(!t)return 6;Pe.runningWorkers.push(t),Pe.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{k&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function De(e){if(I)return dt(1,1,e);V=e,le()||(Pe.terminateAllThreads(),c.onExit&&c.onExit(e),U=!0),x(e,new Ee(e))}function Me(e,t){if(V=e,!t&&I)throw We(e),"unwind";De(e)}var Oe=Me;function Le(e){if(e instanceof Ee||"unwind"==e)return V;x(1,e)}var Pe={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){I?Pe.initWorker():Pe.initMainThread()},initMainThread:function(){for(var e=8;e--;)Pe.allocateUnusedWorker()},initWorker:function(){z=!1},setExitStatus:function(e){V=e},terminateAllThreads:function(){for(var e of Object.values(Pe.pthreads))Pe.returnWorkerToPool(e);for(var e of Pe.unusedWorkers)e.terminate();Pe.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete Pe.pthreads[t],Pe.unusedWorkers.push(e),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(e),1),e.pthread_ptr=0,k&&e.unref(),Ot(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){Pe.tlsInitFunctions.forEach(e=>e())},loadWasmModuleToWorker:function(e,n){e.onmessage=t=>{var r=t.data,a=r.cmd;if(e.pthread_ptr&&(Pe.currentProxiedOperationCallerThread=e.pthread_ptr),r.targetThread&&r.targetThread!=$t()){var s=Pe.pthreads[r.targetThread];return s?s.postMessage(r,r.transferList):$('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Pe.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===a?et(r.queue):"spawnThread"===a?Fe(r):"cleanupThread"===a?$e(r.thread):"killThread"===a?Ae(r.thread):"cancelThread"===a?Re(r.thread):"loaded"===a?(e.loaded=!0,k&&e.unref(),n&&n(e),e.runPthread&&e.runPthread()):"print"===a?R("Thread "+r.threadId+": "+r.text):"printErr"===a?$("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"callHandler"===a?c[r.handler](...r.args):a&&$("worker sent an unknown command "+a),Pe.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{var t="worker sent an error!";throw $(t+" "+e.filename+":"+e.lineno+": "+e.message),e},k&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){})));var r=[],a=["onExit","onAbort","print","printErr"];for(var s of a)c.hasOwnProperty(s)&&r.push(s);e.postMessage({cmd:"load",handlers:r,urlOrBlob:c.mainScriptUrlOrBlob||t,wasmMemory:B,wasmModule:W})},allocateUnusedWorker:function(){var e,t=N("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),Pe.unusedWorkers.push(e)},getNewWorker:function(){return 0==Pe.unusedWorkers.length&&(Pe.allocateUnusedWorker(),Pe.loadWasmModuleToWorker(Pe.unusedWorkers[0])),Pe.unusedWorkers.pop()}};function ze(e){for(;e.length>0;)e.shift()(c)}function Be(){var e=$t(),t=o()[e+52>>>2],n=o()[e+56>>>2],r=t-n;Pt(t,r),Bt(t)}function We(e){if(I)return dt(2,0,e);try{Oe(e)}catch(Gt){Le(Gt)}}c.PThread=Pe,c.establishStackSpace=Be;var Ve=[];function Ue(e){var t=Ve[e];return t||(e>=Ve.length&&(Ve.length=e+1),Ve[e]=t=ae.get(e)),t}function Ge(e,t){var n=Ue(e)(t);le()?Pe.setExitStatus(n):Lt(n)}function He(e){Pe.tlsInitFunctions.push(e)}function je(e){Ft(e,!v,1,!w),Pe.threadInitTLS()}function qe(e){I?postMessage({cmd:"cleanupThread",thread:e}):$e(e)}function Ke(e,t,n,r){return I?dt(3,1,e,t,n,r):Xe(e,t,n,r)}function Xe(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return $("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[],s=0;if(I&&(0===a.length||s))return Ke(e,t,n,r);if(s)return s;var i={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return I?(i.cmd="spawnThread",postMessage(i,a),0):Fe(i)}function Ye(){return 65536}c.invokeEntryPoint=Ge;var Je,Ze=!0;function Qe(){return Ze}function et(e){Atomics.store(o(),e>>2,1),$t()&&Mt(e),Atomics.compareExchange(o(),e>>2,1,0)}function tt(e,t,n,r){if(e==t)setTimeout(()=>et(r));else if(I)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:r});else{var a=Pe.pthreads[e];if(!a)return;a.postMessage({cmd:"processProxyingQueue",queue:r})}return 1}function nt(e,t,n){return-1}function rt(){we("")}function at(e){at.shown||(at.shown={}),at.shown[e]||(at.shown[e]=1,k&&(e="warning: "+e),$(e))}function st(){k||v||at("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function it(){return Date.now()}function ot(){return 4294901760}function lt(){return ot()}function ut(e,t,n){i().copyWithin(e>>>0,t>>>0,t+n>>>0)}function pt(){return k?P().cpus().length:navigator.hardwareConcurrency}function ht(e){var t=zt(),n=e();return Bt(t),n}function dt(e,t){var n=arguments.length-2,r=arguments;return ht(()=>{for(var a=n,s=Wt(8*a),i=s>>3,o=0;o<n;o++){var l=r[2+o];u()[i+o>>>0]=l}return Dt(e,a,s,t)})}c.executeNotifiedProxyingQueue=et,Je=k?()=>{var e=r.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var ct=[];function ft(e,t,n){ct.length=t;for(var r=n>>3,a=0;a<t;a++)ct[a]=u()[r+a>>>0];var s=e<0,i=s?Ce[-e-1]:At[e];return i.apply(null,ct)}function mt(e){try{return B.grow(e-H.byteLength+65535>>>16),ne(B.buffer),1}catch(Gt){}}function gt(e){var t=i().length;if(e>>>=0,e<=t)return!1;var n=ot();if(e>n)return!1;let r=(e,t)=>e+(t-e%t)%t;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);s=Math.min(s,e+100663296);var o=Math.min(n,r(Math.max(e,s),65536)),l=mt(o);if(l)return!0}return!1}function yt(){throw"unwind"}function bt(e){return I?dt(4,1,e):52}function xt(e,t,n,r,a){return I?dt(5,1,e,t,n,r,a):70}var wt=[null,[],[]];function vt(e,t){var n=wt[e];0===t||10===t?((1===e?R:$)(Z(n,0)),n.length=0):n.push(t)}function kt(e,t,n,r){if(I)return dt(6,1,e,t,n,r);for(var a=0,s=0;s<n;s++){var o=l()[t>>>2],u=l()[t+4>>>2];t+=8;for(var p=0;p<u;p++)vt(e,i()[o+p>>>0]);a+=u}return l()[r>>>2]=a,0}function It(e){var t=c["_"+e];return t}function St(e,t){n().set(e,t>>>0)}function Nt(e,t,n,r,a){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);t=Wt(n),te(e,t,n)}return t},array:e=>{var t=Wt(e.length);return St(e,t),t}};function i(e){return"string"===t?Q(e):"boolean"===t?!!e:e}var o=It(e),l=[],u=0;if(r)for(var p=0;p<r.length;p++){var h=s[n[p]];h?(0===u&&(u=zt()),l[p]=h(r[p])):l[p]=r[p]}var d=o.apply(null,l);function c(e){return 0!==u&&Bt(u),i(e)}return d=c(d),d}function Tt(e,t,n,r){n=n||[];var a=n.every(e=>"number"===e||"boolean"===e),s="string"!==t;return s&&a&&!r?It(e):function(){return Nt(e,t,n,arguments,r)}}Pe.init();var _t,Ct,Et,At=[null,De,We,Ke,bt,xt,kt],Rt={__emscripten_init_main_thread_js:je,__emscripten_thread_cleanup:qe,__pthread_create_js:Xe,_emscripten_default_pthread_stack_size:Ye,_emscripten_get_now_is_monotonic:Qe,_emscripten_notify_task_queue:tt,_emscripten_set_offscreencanvas_size:nt,abort:rt,emscripten_check_blocking_allowed:st,emscripten_date_now:it,emscripten_get_heap_max:lt,emscripten_get_now:Je,emscripten_memcpy_big:ut,emscripten_num_logical_cores:pt,emscripten_receive_on_main_thread_js:ft,emscripten_resize_heap:gt,emscripten_unwind_to_js_event_loop:yt,exit:Oe,fd_close:bt,fd_seek:xt,fd_write:kt,memory:B||c.wasmMemory},$t=(_e(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.__wasm_call_ctors).apply(null,arguments)},c._init=function(){return(c._init=c.asm.init).apply(null,arguments)},c._init_with_threads_count=function(){return(c._init_with_threads_count=c.asm.init_with_threads_count).apply(null,arguments)},c._get_threads_count=function(){return(c._get_threads_count=c.asm.get_threads_count).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.register_tensor).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.dispose_data).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.dispose).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.Abs).apply(null,arguments)},c._Acos=function(){return(c._Acos=c.asm.Acos).apply(null,arguments)},c._Acosh=function(){return(c._Acosh=c.asm.Acosh).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.Add).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.AddN).apply(null,arguments)},c._All=function(){return(c._All=c.asm.All).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.Any).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.ArgMax).apply(null,arguments)},c._ArgMin=function(){return(c._ArgMin=c.asm.ArgMin).apply(null,arguments)},c._Asin=function(){return(c._Asin=c.asm.Asin).apply(null,arguments)},c._Asinh=function(){return(c._Asinh=c.asm.Asinh).apply(null,arguments)},c._Atan=function(){return(c._Atan=c.asm.Atan).apply(null,arguments)},c._Atan2=function(){return(c._Atan2=c.asm.Atan2).apply(null,arguments)},c._Atanh=function(){return(c._Atanh=c.asm.Atanh).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.AvgPool).apply(null,arguments)},c._AvgPool3D=function(){return(c._AvgPool3D=c.asm.AvgPool3D).apply(null,arguments)},c._AvgPool3DGrad=function(){return(c._AvgPool3DGrad=c.asm.AvgPool3DGrad).apply(null,arguments)},c._AvgPoolGrad=function(){return(c._AvgPoolGrad=c.asm.AvgPoolGrad).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.BatchMatMul).apply(null,arguments)},c._Bincount=function(){return(c._Bincount=c.asm.Bincount).apply(null,arguments)},c._BitwiseAnd=function(){return(c._BitwiseAnd=c.asm.BitwiseAnd).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.Ceil).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.ClipByValue).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.Conv2D).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.Conv2DBackpropInput).apply(null,arguments)},c._Conv3D=function(){return(c._Conv3D=c.asm.Conv3D).apply(null,arguments)},c._Conv3DBackpropFilterV2=function(){return(c._Conv3DBackpropFilterV2=c.asm.Conv3DBackpropFilterV2).apply(null,arguments)},c._Conv3DBackpropInputV2=function(){return(c._Conv3DBackpropInputV2=c.asm.Conv3DBackpropInputV2).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.Cos).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.Cosh).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.CropAndResize).apply(null,arguments)},c._Cumprod=function(){return(c._Cumprod=c.asm.Cumprod).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.Cumsum).apply(null,arguments)},c._DenseBincount=function(){return(c._DenseBincount=c.asm.DenseBincount).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.DepthToSpace).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.DepthwiseConv2dNative).apply(null,arguments)},c._Diag=function(){return(c._Diag=c.asm.Diag).apply(null,arguments)},c._Dilation2D=function(){return(c._Dilation2D=c.asm.Dilation2D).apply(null,arguments)},c._Dilation2DBackpropFilter=function(){return(c._Dilation2DBackpropFilter=c.asm.Dilation2DBackpropFilter).apply(null,arguments)},c._Dilation2DBackpropInput=function(){return(c._Dilation2DBackpropInput=c.asm.Dilation2DBackpropInput).apply(null,arguments)},c._Elu=function(){return(c._Elu=c.asm.Elu).apply(null,arguments)},c._EluGrad=function(){return(c._EluGrad=c.asm.EluGrad).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.Equal).apply(null,arguments)},c._Erf=function(){return(c._Erf=c.asm.Erf).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.Exp).apply(null,arguments)},c._Expm1=function(){return(c._Expm1=c.asm.Expm1).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.FlipLeftRight).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.Floor).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.FloorDiv).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.FusedBatchNorm).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.FusedConv2D).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.FusedDepthwiseConv2D).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.Gather).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.GatherNd).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.Greater).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.GreaterEqual).apply(null,arguments)},c._IsFinite=function(){return(c._IsFinite=c.asm.IsFinite).apply(null,arguments)},c._IsInf=function(){return(c._IsInf=c.asm.IsInf).apply(null,arguments)},c._IsNan=function(){return(c._IsNan=c.asm.IsNan).apply(null,arguments)},c._LRN=function(){return(c._LRN=c.asm.LRN).apply(null,arguments)},c._LRNGrad=function(){return(c._LRNGrad=c.asm.LRNGrad).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.LeakyRelu).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.Less).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.LessEqual).apply(null,arguments)},c._LinSpace=function(){return(c._LinSpace=c.asm.LinSpace).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.Log).apply(null,arguments)},c._Log1p=function(){return(c._Log1p=c.asm.Log1p).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.LogicalAnd).apply(null,arguments)},c._LogicalNot=function(){return(c._LogicalNot=c.asm.LogicalNot).apply(null,arguments)},c._LogicalOr=function(){return(c._LogicalOr=c.asm.LogicalOr).apply(null,arguments)},c._LogicalXor=function(){return(c._LogicalXor=c.asm.LogicalXor).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.Max).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.MaxPool).apply(null,arguments)},c._MaxPool3D=function(){return(c._MaxPool3D=c.asm.MaxPool3D).apply(null,arguments)},c._MaxPool3DGrad=function(){return(c._MaxPool3DGrad=c.asm.MaxPool3DGrad).apply(null,arguments)},c._MaxPoolGrad=function(){return(c._MaxPoolGrad=c.asm.MaxPoolGrad).apply(null,arguments)},c._MaxPoolWithArgmax=function(){return(c._MaxPoolWithArgmax=c.asm.MaxPoolWithArgmax).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.Maximum).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.Mean).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.Min).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.Minimum).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.MirrorPad).apply(null,arguments)},c._Mod=function(){return(c._Mod=c.asm.Mod).apply(null,arguments)},c._Multinomial=function(){return(c._Multinomial=c.asm.Multinomial).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.Multiply).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.Neg).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.NonMaxSuppressionV3).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.NonMaxSuppressionV4).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.NonMaxSuppressionV5).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.NotEqual).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.OneHot).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.PadV2).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Pow).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Prelu).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Prod).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.RealDiv).apply(null,arguments)},c._Reciprocal=function(){return(c._Reciprocal=c.asm.Reciprocal).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Relu).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Relu6).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.ResizeBilinear).apply(null,arguments)},c._ResizeBilinearGrad=function(){return(c._ResizeBilinearGrad=c.asm.ResizeBilinearGrad).apply(null,arguments)},c._ResizeNearestNeighbor=function(){return(c._ResizeNearestNeighbor=c.asm.ResizeNearestNeighbor).apply(null,arguments)},c._ResizeNearestNeighborGrad=function(){return(c._ResizeNearestNeighborGrad=c.asm.ResizeNearestNeighborGrad).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Reverse).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.RotateWithOffset).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Round).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Rsqrt).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.ScatterNd).apply(null,arguments)},c._SearchSorted=function(){return(c._SearchSorted=c.asm.SearchSorted).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.SelectV2).apply(null,arguments)},c._Selu=function(){return(c._Selu=c.asm.Selu).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Sigmoid).apply(null,arguments)},c._Sign=function(){return(c._Sign=c.asm.Sign).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Sin).apply(null,arguments)},c._Sinh=function(){return(c._Sinh=c.asm.Sinh).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Softmax).apply(null,arguments)},c._Softplus=function(){return(c._Softplus=c.asm.Softplus).apply(null,arguments)},c._SparseFillEmptyRows=function(){return(c._SparseFillEmptyRows=c.asm.SparseFillEmptyRows).apply(null,arguments)},c._SparseReshape=function(){return(c._SparseReshape=c.asm.SparseReshape).apply(null,arguments)},c._SparseSegmentReduction=function(){return(c._SparseSegmentReduction=c.asm.SparseSegmentReduction).apply(null,arguments)},c._SparseToDense=function(){return(c._SparseToDense=c.asm.SparseToDense).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Sqrt).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Square).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.SquaredDifference).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Step).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.StridedSlice).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Sub).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Sum).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.Tan).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.Tanh).apply(null,arguments)},c._TensorScatterUpdate=function(){return(c._TensorScatterUpdate=c.asm.TensorScatterUpdate).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.Tile).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.TopK).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.Transform).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.Transpose).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm._FusedMatMul).apply(null,arguments)},c._malloc=function(){return(c._malloc=c.asm.malloc).apply(null,arguments)},c._free=function(){return(c._free=c.asm.free).apply(null,arguments)},c.__emscripten_tls_init=function(){return(c.__emscripten_tls_init=c.asm._emscripten_tls_init).apply(null,arguments)},c._pthread_self=function(){return($t=c._pthread_self=c.asm.pthread_self).apply(null,arguments)}),Ft=(c.___errno_location=function(){return(c.___errno_location=c.asm.__errno_location).apply(null,arguments)},c.__emscripten_thread_init=function(){return(Ft=c.__emscripten_thread_init=c.asm._emscripten_thread_init).apply(null,arguments)}),Dt=(c.__emscripten_thread_crashed=function(){return(c.__emscripten_thread_crashed=c.asm._emscripten_thread_crashed).apply(null,arguments)},c._emscripten_main_thread_process_queued_calls=function(){return(c._emscripten_main_thread_process_queued_calls=c.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},c._emscripten_main_browser_thread_id=function(){return(c._emscripten_main_browser_thread_id=c.asm.emscripten_main_browser_thread_id).apply(null,arguments)},c._emscripten_run_in_main_runtime_thread_js=function(){return(Dt=c._emscripten_run_in_main_runtime_thread_js=c.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Mt=(c._emscripten_dispatch_to_thread_=function(){return(c._emscripten_dispatch_to_thread_=c.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},c.__emscripten_proxy_execute_task_queue=function(){return(Mt=c.__emscripten_proxy_execute_task_queue=c.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),Ot=c.__emscripten_thread_free_data=function(){return(Ot=c.__emscripten_thread_free_data=c.asm._emscripten_thread_free_data).apply(null,arguments)},Lt=c.__emscripten_thread_exit=function(){return(Lt=c.__emscripten_thread_exit=c.asm._emscripten_thread_exit).apply(null,arguments)},Pt=c._emscripten_stack_set_limits=function(){return(Pt=c._emscripten_stack_set_limits=c.asm.emscripten_stack_set_limits).apply(null,arguments)},zt=c.stackSave=function(){return(zt=c.stackSave=c.asm.stackSave).apply(null,arguments)},Bt=c.stackRestore=function(){return(Bt=c.stackRestore=c.asm.stackRestore).apply(null,arguments)},Wt=c.stackAlloc=function(){return(Wt=c.stackAlloc=c.asm.stackAlloc).apply(null,arguments)};c.dynCall_iijjiiii=function(){return(c.dynCall_iijjiiii=c.asm.dynCall_iijjiiii).apply(null,arguments)},c.dynCall_jiji=function(){return(c.dynCall_jiji=c.asm.dynCall_jiji).apply(null,arguments)};function Vt(e){if(e=e||b,!(me>0)){if(I)return p(c),pe(),void startWorker(c);ue(),me>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){_t||(_t=!0,c.calledRun=!0,!U&&(pe(),p(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),he()))}}if(c.keepRuntimeAlive=le,c.wasmMemory=B,c.cwrap=Tt,c.ExitStatus=Ee,c.PThread=Pe,ye=function e(){_t||Vt(),_t||(ye=e)},c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();if(Vt(),d&&(Ct={uncaughtException:r.listeners("uncaughtException").filter((function(e){return!d.uncaughtException.indexOf(e)>-1})),unhandledRejection:r.listeners("unhandledRejection").filter((function(e){return!d.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Et=WasmBackendModule;else{if("undefined"==typeof e)throw new Error("Could not find wasm module in post.js");Et=e}if(Ct){var Ut=Et._dispose;Et._dispose=function(){Ut(),Ct.uncaughtException.forEach((function(e){r.removeListener("uncaughtException",e)})),Ct.unhandledRejection.forEach((function(e){r.removeListener("unhandledRejection",e)}))}}return e.ready}})();"object"==typeof t&&"object"==typeof i?i.exports=o:"function"==typeof define&&n("3c35")?define([],(function(){return o})):"object"==typeof t&&(t.WasmBackendModuleThreadedSimd=o)}),B=y((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'}),W=y((t,s)=>{var i=(()=>{var t="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return t=t||e,function(e){e=e||{};var n,s,i,o="undefined"!=typeof e?e:{};o.ready=new Promise((function(e,t){n=e,s=t})),"undefined"!=typeof r&&r.listeners&&(i={uncaughtException:r.listeners("uncaughtException"),unhandledRejection:r.listeners("unhandledRejection")});var l,u,p,h=Object.assign({},o),d=[],c="object"==typeof window,f="function"==typeof importScripts,m="object"==typeof r&&"object"==typeof r.versions&&"string"==typeof r.versions.node,g="";function y(e){return o.locateFile?o.locateFile(e,g):g+e}function b(e){e instanceof le||k("exiting due to exception: "+e)}if(m){var x=D(),w=M();g=f?w.dirname(g)+"/":a+"/",l=(e,t)=>(e=ae(e)?new URL(e):w.normalize(e),x.readFileSync(e,t?void 0:"utf8")),p=e=>{var t=l(e,!0);return t.buffer||(t=new Uint8Array(t)),t},u=(e,t,n)=>{e=ae(e)?new URL(e):w.normalize(e),x.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),d=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof le))throw e})),r.on("unhandledRejection",(function(e){throw e})),(e,t)=>{if(V())throw r.exitCode=e,t;b(t),r.exit(e)},o.inspect=function(){return"[Emscripten Module object]"}}else(c||f)&&(f?g=self.location.href:"undefined"!=typeof document&&document.currentScript&&(g=document.currentScript.src),t&&(g=t),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},f&&(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),u=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)},e=>document.title=e);var v=o.print||console.log.bind(console),k=o.printErr||console.warn.bind(console);Object.assign(o,h),h=null,o.arguments&&(d=o.arguments),o.thisProgram&&o.thisProgram,o.quit&&o.quit;var I;o.wasmBinary&&(I=o.wasmBinary);var S=o.noExitRuntime||!0;"object"!=typeof WebAssembly&&ee("no native wasm support detected");var N,T=!1;var _,C,E,A,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function $(e,t,n){t>>>=0;for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&R)return R.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if(i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++],i<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function F(e,t){return e>>>=0,e?$(E,e,t):""}function O(e,t,n,r){if(n>>>=0,!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343){var l=e.charCodeAt(++i);o=65536+((1023&o)<<10)|1023&l}if(o<=127){if(n>=s)break;t[n++>>>0]=o}else if(o<=2047){if(n+1>=s)break;t[n++>>>0]=192|o>>6,t[n++>>>0]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++>>>0]=224|o>>12,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}else{if(n+3>=s)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}}return t[n>>>0]=0,n-a}function L(e,t,n){return O(e,E,t,n)}function P(e){_=e,o.HEAP8=C=new Int8Array(e),o.HEAP16=new Int16Array(e),o.HEAP32=new Int32Array(e),o.HEAPU8=E=new Uint8Array(e),o.HEAPU16=new Uint16Array(e),o.HEAPU32=A=new Uint32Array(e),o.HEAPF32=new Float32Array(e),o.HEAPF64=new Float64Array(e)}o.INITIAL_MEMORY;var z=[],B=[],W=[];function V(){return S}function U(){if(o.preRun)for("function"==typeof o.preRun&&(o.preRun=[o.preRun]);o.preRun.length;)j(o.preRun.shift());ue(z)}function G(){!0,ue(B)}function H(){if(o.postRun)for("function"==typeof o.postRun&&(o.postRun=[o.postRun]);o.postRun.length;)K(o.postRun.shift());ue(W)}function j(e){z.unshift(e)}function q(e){B.unshift(e)}function K(e){W.unshift(e)}var X=0,Y=null,J=null;function Z(e){X++,o.monitorRunDependencies&&o.monitorRunDependencies(X)}function Q(e){if(X--,o.monitorRunDependencies&&o.monitorRunDependencies(X),0==X&&(null!==Y&&(clearInterval(Y),Y=null),J)){var t=J;J=null,t()}}function ee(e){o.onAbort&&o.onAbort(e),e="Aborted("+e+")",k(e),T=!0,1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw s(t),t}var te,ne="data:application/octet-stream;base64,";function re(e){return e.startsWith(ne)}function ae(e){return e.startsWith("file://")}function se(e){try{if(e==te&&I)return new Uint8Array(I);if(p)return p(e);throw"both async and sync fetching of the wasm failed"}catch(t){ee(t)}}function ie(){if(!I&&(c||f)){if("function"==typeof fetch&&!ae(te))return fetch(te,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+te+"'";return e.arrayBuffer()})).catch((function(){return se(te)}));if(u)return new Promise((function(e,t){u(te,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return se(te)}))}function oe(){var e={env:Ce,wasi_snapshot_preview1:Ce};function t(e,t){var n=e.exports;o.asm=n,N=o.asm.memory,P(N.buffer),o.asm.__indirect_function_table,q(o.asm.__wasm_call_ctors),Q("wasm-instantiate")}function n(e){t(e.instance)}function r(t){return ie().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){k("failed to asynchronously prepare wasm: "+e),ee(e)}))}function a(){return I||"function"!=typeof WebAssembly.instantiateStreaming||re(te)||ae(te)||m||"function"!=typeof fetch?r(n):fetch(te,{credentials:"same-origin"}).then((function(t){var a=WebAssembly.instantiateStreaming(t,e);return a.then(n,(function(e){return k("wasm streaming compile failed: "+e),k("falling back to ArrayBuffer instantiation"),r(n)}))}))}if(Z("wasm-instantiate"),o.instantiateWasm)try{var i=o.instantiateWasm(e,t);return i}catch(l){k("Module.instantiateWasm callback failed with error: "+l),s(l)}return a().catch(s),{}}function le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){for(;e.length>0;)e.shift()(o)}function pe(){ee("")}function he(){return 4294901760}function de(){return he()}function ce(e,t,n){E.copyWithin(e>>>0,t>>>0,t+n>>>0)}function fe(e){try{return N.grow(e-_.byteLength+65535>>>16),P(N.buffer),1}catch(t){}}function me(e){var t=E.length;e>>>=0;var n=he();if(e>n)return!1;let r=(e,t)=>e+(t-e%t)%t;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);s=Math.min(s,e+100663296);var i=Math.min(n,r(Math.max(e,s),65536)),o=fe(i);if(o)return!0}return!1}te="tfjs-backend-wasm.wasm",re(te)||(te=y(te));function ge(e){return 52}function ye(e,t,n,r,a){return 70}var be=[null,[],[]];function xe(e,t){var n=be[e];0===t||10===t?((1===e?v:k)($(n,0)),n.length=0):n.push(t)}function we(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=A[t>>>2],o=A[t+4>>>2];t+=8;for(var l=0;l<o;l++)xe(e,E[i+l>>>0]);a+=o}return A[r>>>2]=a,0}function ve(e){var t=o["_"+e];return t}function ke(e,t){C.set(e,t>>>0)}function Ie(e,t,n,r,a){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);t=Re(n),L(e,t,n)}return t},array:e=>{var t=Re(e.length);return ke(e,t),t}};function i(e){return"string"===t?F(e):"boolean"===t?!!e:e}var o=ve(e),l=[],u=0;if(r)for(var p=0;p<r.length;p++){var h=s[n[p]];h?(0===u&&(u=Ee()),l[p]=h(r[p])):l[p]=r[p]}var d=o.apply(null,l);function c(e){return 0!==u&&Ae(u),i(e)}return d=c(d),d}function Se(e,t,n,r){n=n||[];var a=n.every(e=>"number"===e||"boolean"===e),s="string"!==t;return s&&a&&!r?ve(e):function(){return Ie(e,t,n,arguments,r)}}var Ne,Te,_e,Ce={abort:pe,emscripten_get_heap_max:de,emscripten_memcpy_big:ce,emscripten_resize_heap:me,fd_close:ge,fd_seek:ye,fd_write:we},Ee=(oe(),o.___wasm_call_ctors=function(){return(o.___wasm_call_ctors=o.asm.__wasm_call_ctors).apply(null,arguments)},o._init=function(){return(o._init=o.asm.init).apply(null,arguments)},o._init_with_threads_count=function(){return(o._init_with_threads_count=o.asm.init_with_threads_count).apply(null,arguments)},o._get_threads_count=function(){return(o._get_threads_count=o.asm.get_threads_count).apply(null,arguments)},o._register_tensor=function(){return(o._register_tensor=o.asm.register_tensor).apply(null,arguments)},o._dispose_data=function(){return(o._dispose_data=o.asm.dispose_data).apply(null,arguments)},o._dispose=function(){return(o._dispose=o.asm.dispose).apply(null,arguments)},o._Abs=function(){return(o._Abs=o.asm.Abs).apply(null,arguments)},o._Acos=function(){return(o._Acos=o.asm.Acos).apply(null,arguments)},o._Acosh=function(){return(o._Acosh=o.asm.Acosh).apply(null,arguments)},o._Add=function(){return(o._Add=o.asm.Add).apply(null,arguments)},o._AddN=function(){return(o._AddN=o.asm.AddN).apply(null,arguments)},o._All=function(){return(o._All=o.asm.All).apply(null,arguments)},o._Any=function(){return(o._Any=o.asm.Any).apply(null,arguments)},o._ArgMax=function(){return(o._ArgMax=o.asm.ArgMax).apply(null,arguments)},o._ArgMin=function(){return(o._ArgMin=o.asm.ArgMin).apply(null,arguments)},o._Asin=function(){return(o._Asin=o.asm.Asin).apply(null,arguments)},o._Asinh=function(){return(o._Asinh=o.asm.Asinh).apply(null,arguments)},o._Atan=function(){return(o._Atan=o.asm.Atan).apply(null,arguments)},o._Atan2=function(){return(o._Atan2=o.asm.Atan2).apply(null,arguments)},o._Atanh=function(){return(o._Atanh=o.asm.Atanh).apply(null,arguments)},o._AvgPool=function(){return(o._AvgPool=o.asm.AvgPool).apply(null,arguments)},o._AvgPool3D=function(){return(o._AvgPool3D=o.asm.AvgPool3D).apply(null,arguments)},o._AvgPool3DGrad=function(){return(o._AvgPool3DGrad=o.asm.AvgPool3DGrad).apply(null,arguments)},o._AvgPoolGrad=function(){return(o._AvgPoolGrad=o.asm.AvgPoolGrad).apply(null,arguments)},o._BatchMatMul=function(){return(o._BatchMatMul=o.asm.BatchMatMul).apply(null,arguments)},o._Bincount=function(){return(o._Bincount=o.asm.Bincount).apply(null,arguments)},o._BitwiseAnd=function(){return(o._BitwiseAnd=o.asm.BitwiseAnd).apply(null,arguments)},o._Ceil=function(){return(o._Ceil=o.asm.Ceil).apply(null,arguments)},o._ClipByValue=function(){return(o._ClipByValue=o.asm.ClipByValue).apply(null,arguments)},o._Conv2D=function(){return(o._Conv2D=o.asm.Conv2D).apply(null,arguments)},o._Conv2DBackpropInput=function(){return(o._Conv2DBackpropInput=o.asm.Conv2DBackpropInput).apply(null,arguments)},o._Conv3D=function(){return(o._Conv3D=o.asm.Conv3D).apply(null,arguments)},o._Conv3DBackpropFilterV2=function(){return(o._Conv3DBackpropFilterV2=o.asm.Conv3DBackpropFilterV2).apply(null,arguments)},o._Conv3DBackpropInputV2=function(){return(o._Conv3DBackpropInputV2=o.asm.Conv3DBackpropInputV2).apply(null,arguments)},o._Cos=function(){return(o._Cos=o.asm.Cos).apply(null,arguments)},o._Cosh=function(){return(o._Cosh=o.asm.Cosh).apply(null,arguments)},o._CropAndResize=function(){return(o._CropAndResize=o.asm.CropAndResize).apply(null,arguments)},o._Cumprod=function(){return(o._Cumprod=o.asm.Cumprod).apply(null,arguments)},o._Cumsum=function(){return(o._Cumsum=o.asm.Cumsum).apply(null,arguments)},o._DenseBincount=function(){return(o._DenseBincount=o.asm.DenseBincount).apply(null,arguments)},o._DepthToSpace=function(){return(o._DepthToSpace=o.asm.DepthToSpace).apply(null,arguments)},o._DepthwiseConv2dNative=function(){return(o._DepthwiseConv2dNative=o.asm.DepthwiseConv2dNative).apply(null,arguments)},o._Diag=function(){return(o._Diag=o.asm.Diag).apply(null,arguments)},o._Dilation2D=function(){return(o._Dilation2D=o.asm.Dilation2D).apply(null,arguments)},o._Dilation2DBackpropFilter=function(){return(o._Dilation2DBackpropFilter=o.asm.Dilation2DBackpropFilter).apply(null,arguments)},o._Dilation2DBackpropInput=function(){return(o._Dilation2DBackpropInput=o.asm.Dilation2DBackpropInput).apply(null,arguments)},o._Elu=function(){return(o._Elu=o.asm.Elu).apply(null,arguments)},o._EluGrad=function(){return(o._EluGrad=o.asm.EluGrad).apply(null,arguments)},o._Equal=function(){return(o._Equal=o.asm.Equal).apply(null,arguments)},o._Erf=function(){return(o._Erf=o.asm.Erf).apply(null,arguments)},o._Exp=function(){return(o._Exp=o.asm.Exp).apply(null,arguments)},o._Expm1=function(){return(o._Expm1=o.asm.Expm1).apply(null,arguments)},o._FlipLeftRight=function(){return(o._FlipLeftRight=o.asm.FlipLeftRight).apply(null,arguments)},o._Floor=function(){return(o._Floor=o.asm.Floor).apply(null,arguments)},o._FloorDiv=function(){return(o._FloorDiv=o.asm.FloorDiv).apply(null,arguments)},o._FusedBatchNorm=function(){return(o._FusedBatchNorm=o.asm.FusedBatchNorm).apply(null,arguments)},o._FusedConv2D=function(){return(o._FusedConv2D=o.asm.FusedConv2D).apply(null,arguments)},o._FusedDepthwiseConv2D=function(){return(o._FusedDepthwiseConv2D=o.asm.FusedDepthwiseConv2D).apply(null,arguments)},o._Gather=function(){return(o._Gather=o.asm.Gather).apply(null,arguments)},o._GatherNd=function(){return(o._GatherNd=o.asm.GatherNd).apply(null,arguments)},o._Greater=function(){return(o._Greater=o.asm.Greater).apply(null,arguments)},o._GreaterEqual=function(){return(o._GreaterEqual=o.asm.GreaterEqual).apply(null,arguments)},o._IsFinite=function(){return(o._IsFinite=o.asm.IsFinite).apply(null,arguments)},o._IsInf=function(){return(o._IsInf=o.asm.IsInf).apply(null,arguments)},o._IsNan=function(){return(o._IsNan=o.asm.IsNan).apply(null,arguments)},o._LRN=function(){return(o._LRN=o.asm.LRN).apply(null,arguments)},o._LRNGrad=function(){return(o._LRNGrad=o.asm.LRNGrad).apply(null,arguments)},o._LeakyRelu=function(){return(o._LeakyRelu=o.asm.LeakyRelu).apply(null,arguments)},o._Less=function(){return(o._Less=o.asm.Less).apply(null,arguments)},o._LessEqual=function(){return(o._LessEqual=o.asm.LessEqual).apply(null,arguments)},o._LinSpace=function(){return(o._LinSpace=o.asm.LinSpace).apply(null,arguments)},o._Log=function(){return(o._Log=o.asm.Log).apply(null,arguments)},o._Log1p=function(){return(o._Log1p=o.asm.Log1p).apply(null,arguments)},o._LogicalAnd=function(){return(o._LogicalAnd=o.asm.LogicalAnd).apply(null,arguments)},o._LogicalNot=function(){return(o._LogicalNot=o.asm.LogicalNot).apply(null,arguments)},o._LogicalOr=function(){return(o._LogicalOr=o.asm.LogicalOr).apply(null,arguments)},o._LogicalXor=function(){return(o._LogicalXor=o.asm.LogicalXor).apply(null,arguments)},o._Max=function(){return(o._Max=o.asm.Max).apply(null,arguments)},o._MaxPool=function(){return(o._MaxPool=o.asm.MaxPool).apply(null,arguments)},o._MaxPool3D=function(){return(o._MaxPool3D=o.asm.MaxPool3D).apply(null,arguments)},o._MaxPool3DGrad=function(){return(o._MaxPool3DGrad=o.asm.MaxPool3DGrad).apply(null,arguments)},o._MaxPoolGrad=function(){return(o._MaxPoolGrad=o.asm.MaxPoolGrad).apply(null,arguments)},o._MaxPoolWithArgmax=function(){return(o._MaxPoolWithArgmax=o.asm.MaxPoolWithArgmax).apply(null,arguments)},o._Maximum=function(){return(o._Maximum=o.asm.Maximum).apply(null,arguments)},o._Mean=function(){return(o._Mean=o.asm.Mean).apply(null,arguments)},o._Min=function(){return(o._Min=o.asm.Min).apply(null,arguments)},o._Minimum=function(){return(o._Minimum=o.asm.Minimum).apply(null,arguments)},o._MirrorPad=function(){return(o._MirrorPad=o.asm.MirrorPad).apply(null,arguments)},o._Mod=function(){return(o._Mod=o.asm.Mod).apply(null,arguments)},o._Multinomial=function(){return(o._Multinomial=o.asm.Multinomial).apply(null,arguments)},o._Multiply=function(){return(o._Multiply=o.asm.Multiply).apply(null,arguments)},o._Neg=function(){return(o._Neg=o.asm.Neg).apply(null,arguments)},o._NonMaxSuppressionV3=function(){return(o._NonMaxSuppressionV3=o.asm.NonMaxSuppressionV3).apply(null,arguments)},o._NonMaxSuppressionV4=function(){return(o._NonMaxSuppressionV4=o.asm.NonMaxSuppressionV4).apply(null,arguments)},o._NonMaxSuppressionV5=function(){return(o._NonMaxSuppressionV5=o.asm.NonMaxSuppressionV5).apply(null,arguments)},o._NotEqual=function(){return(o._NotEqual=o.asm.NotEqual).apply(null,arguments)},o._OneHot=function(){return(o._OneHot=o.asm.OneHot).apply(null,arguments)},o._PadV2=function(){return(o._PadV2=o.asm.PadV2).apply(null,arguments)},o._Pow=function(){return(o._Pow=o.asm.Pow).apply(null,arguments)},o._Prelu=function(){return(o._Prelu=o.asm.Prelu).apply(null,arguments)},o._Prod=function(){return(o._Prod=o.asm.Prod).apply(null,arguments)},o._RealDiv=function(){return(o._RealDiv=o.asm.RealDiv).apply(null,arguments)},o._Reciprocal=function(){return(o._Reciprocal=o.asm.Reciprocal).apply(null,arguments)},o._Relu=function(){return(o._Relu=o.asm.Relu).apply(null,arguments)},o._Relu6=function(){return(o._Relu6=o.asm.Relu6).apply(null,arguments)},o._ResizeBilinear=function(){return(o._ResizeBilinear=o.asm.ResizeBilinear).apply(null,arguments)},o._ResizeBilinearGrad=function(){return(o._ResizeBilinearGrad=o.asm.ResizeBilinearGrad).apply(null,arguments)},o._ResizeNearestNeighbor=function(){return(o._ResizeNearestNeighbor=o.asm.ResizeNearestNeighbor).apply(null,arguments)},o._ResizeNearestNeighborGrad=function(){return(o._ResizeNearestNeighborGrad=o.asm.ResizeNearestNeighborGrad).apply(null,arguments)},o._Reverse=function(){return(o._Reverse=o.asm.Reverse).apply(null,arguments)},o._RotateWithOffset=function(){return(o._RotateWithOffset=o.asm.RotateWithOffset).apply(null,arguments)},o._Round=function(){return(o._Round=o.asm.Round).apply(null,arguments)},o._Rsqrt=function(){return(o._Rsqrt=o.asm.Rsqrt).apply(null,arguments)},o._ScatterNd=function(){return(o._ScatterNd=o.asm.ScatterNd).apply(null,arguments)},o._SearchSorted=function(){return(o._SearchSorted=o.asm.SearchSorted).apply(null,arguments)},o._SelectV2=function(){return(o._SelectV2=o.asm.SelectV2).apply(null,arguments)},o._Selu=function(){return(o._Selu=o.asm.Selu).apply(null,arguments)},o._Sigmoid=function(){return(o._Sigmoid=o.asm.Sigmoid).apply(null,arguments)},o._Sign=function(){return(o._Sign=o.asm.Sign).apply(null,arguments)},o._Sin=function(){return(o._Sin=o.asm.Sin).apply(null,arguments)},o._Sinh=function(){return(o._Sinh=o.asm.Sinh).apply(null,arguments)},o._Softmax=function(){return(o._Softmax=o.asm.Softmax).apply(null,arguments)},o._Softplus=function(){return(o._Softplus=o.asm.Softplus).apply(null,arguments)},o._SparseFillEmptyRows=function(){return(o._SparseFillEmptyRows=o.asm.SparseFillEmptyRows).apply(null,arguments)},o._SparseReshape=function(){return(o._SparseReshape=o.asm.SparseReshape).apply(null,arguments)},o._SparseSegmentReduction=function(){return(o._SparseSegmentReduction=o.asm.SparseSegmentReduction).apply(null,arguments)},o._SparseToDense=function(){return(o._SparseToDense=o.asm.SparseToDense).apply(null,arguments)},o._Sqrt=function(){return(o._Sqrt=o.asm.Sqrt).apply(null,arguments)},o._Square=function(){return(o._Square=o.asm.Square).apply(null,arguments)},o._SquaredDifference=function(){return(o._SquaredDifference=o.asm.SquaredDifference).apply(null,arguments)},o._Step=function(){return(o._Step=o.asm.Step).apply(null,arguments)},o._StridedSlice=function(){return(o._StridedSlice=o.asm.StridedSlice).apply(null,arguments)},o._Sub=function(){return(o._Sub=o.asm.Sub).apply(null,arguments)},o._Sum=function(){return(o._Sum=o.asm.Sum).apply(null,arguments)},o._Tan=function(){return(o._Tan=o.asm.Tan).apply(null,arguments)},o._Tanh=function(){return(o._Tanh=o.asm.Tanh).apply(null,arguments)},o._TensorScatterUpdate=function(){return(o._TensorScatterUpdate=o.asm.TensorScatterUpdate).apply(null,arguments)},o._Tile=function(){return(o._Tile=o.asm.Tile).apply(null,arguments)},o._TopK=function(){return(o._TopK=o.asm.TopK).apply(null,arguments)},o._Transform=function(){return(o._Transform=o.asm.Transform).apply(null,arguments)},o._Transpose=function(){return(o._Transpose=o.asm.Transpose).apply(null,arguments)},o.__FusedMatMul=function(){return(o.__FusedMatMul=o.asm._FusedMatMul).apply(null,arguments)},o._malloc=function(){return(o._malloc=o.asm.malloc).apply(null,arguments)},o._free=function(){return(o._free=o.asm.free).apply(null,arguments)},o.___errno_location=function(){return(o.___errno_location=o.asm.__errno_location).apply(null,arguments)},o.stackSave=function(){return(Ee=o.stackSave=o.asm.stackSave).apply(null,arguments)}),Ae=o.stackRestore=function(){return(Ae=o.stackRestore=o.asm.stackRestore).apply(null,arguments)},Re=o.stackAlloc=function(){return(Re=o.stackAlloc=o.asm.stackAlloc).apply(null,arguments)};o.dynCall_iijjiiii=function(){return(o.dynCall_iijjiiii=o.asm.dynCall_iijjiiii).apply(null,arguments)},o.dynCall_jiji=function(){return(o.dynCall_jiji=o.asm.dynCall_jiji).apply(null,arguments)};function $e(e){function t(){Ne||(Ne=!0,o.calledRun=!0,!T&&(G(),n(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),H()))}e=e||d,X>0||(U(),X>0)||(o.setStatus?(o.setStatus("Running..."),setTimeout((function(){setTimeout((function(){o.setStatus("")}),1),t()}),1)):t())}if(o.cwrap=Se,J=function e(){Ne||$e(),Ne||(J=e)},o.preInit)for("function"==typeof o.preInit&&(o.preInit=[o.preInit]);o.preInit.length>0;)o.preInit.pop()();if($e(),i&&(Te={uncaughtException:r.listeners("uncaughtException").filter((function(e){return!i.uncaughtException.indexOf(e)>-1})),unhandledRejection:r.listeners("unhandledRejection").filter((function(e){return!i.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof e)_e=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");_e=WasmBackendModuleThreadedSimd}if(Te){var Fe=_e._dispose;_e._dispose=function(){Fe(),Te.uncaughtException.forEach((function(e){r.removeListener("uncaughtException",e)})),Te.unhandledRejection.forEach((function(e){r.removeListener("unhandledRejection",e)}))}}return e.ready}})();"object"==typeof t&&"object"==typeof s?s.exports=i:"function"==typeof define&&n("3c35")?define([],(function(){return i})):"object"==typeof t&&(t.WasmBackendModule=i)}),V=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},U=class{refCount(e){return G("refCount")}incRef(e){return G("incRef")}timerAvailable(){return!0}time(e){return G("time")}read(e){return G("read")}readSync(e){return G("readSync")}readToGPU(e,t){return G("readToGPU")}numDataIds(){return G("numDataIds")}disposeData(e,t){return G("disposeData")}write(e,t,n){return G("write")}move(e,t,n,r,a){return G("move")}createTensorFromGPUData(e,t,n){return G("createTensorFromGPUData")}memory(){return G("memory")}floatPrecision(){return G("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return G("dispose")}};function G(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function H(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,X(e,t,n)}function j(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,X(e,n,r),X(t,n,r)}function q(e,t,n){return Math.max(e,Math.min(t,n))}function K(e){return e%2===0?e:e+1}function X(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function Y(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function J(e,t){let n=Math.random();return t*n+(1-n)*e}function Z(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Q(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ee(e,t,n=""){Q(se(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function te(e){Q(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function ne(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function re(e){return 0===e.length}function ae(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function se(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ie(e){return e%1===0}function oe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function le(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ue(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return H(t),t}function pe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function he(e,t=(e=>0),n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e())return void a();i++;let l=t(i);null!=n&&i>=n?s():null!=r?r(o,l):setTimeout(o,l)};o()})}function de(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function ce(e,t){let n=t.length;return e=null==e?t.map((e,t)=>t):[].concat(e),Q(e.every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),Q(e.every(e=>ie(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function fe(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:ce(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function me(e,t){return ge(e,t)}function ge(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function ye(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function be(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function xe(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function we(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function ve(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function ke(e){return"string"==typeof e||e instanceof String}function Ie(e){return"boolean"==typeof e}function Se(e){return"number"==typeof e}function Ne(e){return Array.isArray(e)?Ne(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Se(e)?"float32":ke(e)?"string":Ie(e)?"bool":"float32"}function Te(e){return!!(e&&e.constructor&&e.call&&e.apply)}function _e(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Ce(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Ee(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=Ee(e+t*o,i,n,r)}return a}function Ae(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Ee(0,e,t,n)}function Re(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype "+t)}function $e(e,t){let n=Fe(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Fe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function De(e,t){let n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Ae(e,new Float32Array(n));if("int32"===t)return Ae(e,new Int32Array(n));if("bool"===t)return Ae(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function Me(e){e.forEach(t=>{Q(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Oe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function Le(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Pe(e){return e&&e.then&&"function"==typeof e.then}var ze="tfjsflags",Be=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=We,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ge().getBool("IS_TEST")||Ge().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Ge().getBool("IS_TEST")||Ge().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Pe(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"==typeof this.global||"undefined"==typeof this.global.location||"undefined"==typeof this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);ze in e&&e[ze].split(",").forEach(e=>{let[t,n]=e.split(":");this.urlFlags[t]=Ue(t,n)})}};function We(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(Ve(t,n[0],n[1]),n.join("="))),t}function Ve(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Ue(e,t){let n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}function Ge(){return je}var He,je=null;function qe(e){je=e}function Ke(){if(null==He){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof s)e=s;else if("undefined"!=typeof r)e=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}He=e}return He}function Xe(){let e=Ke();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function Ye(e,t){let n=Xe();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Je="Abs",Ze="Acos",Qe="Acosh",et="Add",tt="AddN",nt="All",rt="Any",at="ArgMax",st="ArgMin",it="Asin",ot="Asinh",lt="Atan",ut="Atanh",pt="Atan2",ht="AvgPool",dt="AvgPoolGrad",ct="AvgPool3D",ft="AvgPool3DGrad",mt="BatchMatMul",gt="BatchToSpaceND",yt="Bincount",bt="BitwiseAnd",xt="BroadcastTo",wt="BroadcastArgs",vt="Cast",kt="Ceil",It="ClipByValue",St="Complex",Nt="ComplexAbs",Tt="Concat",_t="Conv2D",Ct="Conv2DBackpropFilter",Et="Conv2DBackpropInput",At="Conv3D",Rt="Conv3DBackpropFilterV2",$t="Conv3DBackpropInputV2",Ft="Cos",Dt="Cosh",Mt="Cumprod",Ot="Cumsum",Lt="CropAndResize",Pt="DenseBincount",zt="DepthToSpace",Bt="DepthwiseConv2dNative",Wt="DepthwiseConv2dNativeBackpropFilter",Vt="DepthwiseConv2dNativeBackpropInput",Ut="Diag",Gt="Dilation2D",Ht="Dilation2DBackpropInput",jt="Dilation2DBackpropFilter",qt="Draw",Kt="RealDiv",Xt="Einsum",Yt="Elu",Jt="EluGrad",Zt="Erf",Qt="Equal",en="Exp",tn="ExpandDims",nn="Expm1",rn="FFT",an="Fill",sn="FlipLeftRight",on="Floor",ln="FloorDiv",un="FusedBatchNorm",pn="GatherV2",hn="GatherNd",dn="Greater",cn="GreaterEqual",fn="Identity",mn="IFFT",gn="Imag",yn="IsFinite",bn="IsInf",xn="IsNan",wn="LeakyRelu",vn="Less",kn="LessEqual",In="LinSpace",Sn="Log",Nn="Log1p",Tn="LogicalAnd",_n="LogicalNot",Cn="LogicalOr",En="LogicalXor",An="LogSoftmax",Rn="LowerBound",$n="LRN",Fn="LRNGrad",Dn="MatrixBandPart",Mn="Max",On="Maximum",Ln="MaxPool",Pn="MaxPoolGrad",zn="MaxPool3D",Bn="MaxPool3DGrad",Wn="MaxPoolWithArgmax",Vn="Mean",Un="Min",Gn="Minimum",Hn="MirrorPad",jn="Mod",qn="Multinomial",Kn="Multiply",Xn="Neg",Yn="NotEqual",Jn="NonMaxSuppressionV3",Zn="NonMaxSuppressionV4",Qn="NonMaxSuppressionV5",er="OnesLike",tr="OneHot",nr="Pack",rr="PadV2",ar="Pool",sr="Pow",ir="Prelu",or="Prod",lr="RaggedGather",ur="RaggedRange",pr="RaggedTensorToTensor",hr="Range",dr="Real",cr="Reciprocal",fr="Relu",mr="Reshape",gr="ResizeNearestNeighbor",yr="ResizeNearestNeighborGrad",br="ResizeBilinear",xr="ResizeBilinearGrad",wr="Relu6",vr="Reverse",kr="Round",Ir="Rsqrt",Sr="ScatterNd",Nr="TensorScatterUpdate",Tr="SearchSorted",_r="Select",Cr="Selu",Er="Slice",Ar="Sin",Rr="Sinh",$r="Sign",Fr="Sigmoid",Dr="Softplus",Mr="Sqrt",Or="Sum",Lr="SpaceToBatchND",Pr="SplitV",zr="Softmax",Br="SparseFillEmptyRows",Wr="SparseReshape",Vr="SparseSegmentMean",Ur="SparseSegmentSum",Gr="SparseToDense",Hr="SquaredDifference",jr="Square",qr="StaticRegexReplace",Kr="StridedSlice",Xr="StringNGrams",Yr="StringSplit",Jr="StringToHashBucketFast",Zr="Sub",Qr="Tan",ea="Tanh",ta="Tile",na="TopK",ra="Transform",aa="Transpose",sa="Unique",ia="Unpack",oa="UnsortedSegmentSum",la="UpperBound",ua="ZerosLike",pa="Step",ha="FromPixels",da="RotateWithOffset",ca="_FusedMatMul",fa="FusedConv2D",ma="FusedDepthwiseConv2D";function ga(...e){Ge().getBool("IS_TEST")||Ge().getBool("PROD")||console.warn(...e)}function ya(...e){Ge().getBool("IS_TEST")||Ge().getBool("PROD")||console.log(...e)}var ba=Ye("kernelRegistry",()=>new Map),xa=Ye("gradRegistry",()=>new Map);function wa(e,t){let n=Ca(e,t);return ba.get(n)}function va(e){return xa.get(e)}function ka(e){let t=ba.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Ia(e){let{kernelName:t,backendName:n}=e,r=Ca(t,n);ba.has(r)&&ga(`The kernel '${t}' for backend '${n}' is already registered`),ba.set(r,e)}function Sa(e){let{kernelName:t}=e;xa.has(t)&&Ge().getBool("DEBUG")&&ga(`Overriding the gradient for '${t}'`),xa.set(t,e)}function Na(e,t){let n=Ca(e,t);if(!ba.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ba.delete(n)}function Ta(e){if(!xa.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);xa.delete(e)}function _a(e,t){ka(e).forEach(e=>{let n=Object.assign({},e,{backendName:t});Ia(n)})}function Ca(e,t){return`${t}_${e}`}var Ea={};function Aa(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}b(Ea,{arraysEqual:()=>se,arraysEqualWithNull:()=>ae,assert:()=>Q,assertNonNegativeIntegerDimensions:()=>Me,assertNonNull:()=>te,assertShapesMatch:()=>ee,bytesFromStringArray:()=>ve,bytesPerElement:()=>we,checkConversionForErrors:()=>ye,clamp:()=>q,computeStrides:()=>Ce,convertBackendValuesAndArrayBuffer:()=>Re,createScalarValue:()=>Xa,createShuffledIndices:()=>ue,decodeString:()=>ts,distSquared:()=>Z,encodeString:()=>es,fetch:()=>Qa,fingerPrint64:()=>Ka,flatten:()=>rs,getArrayFromDType:()=>ge,getTypedArrayFromDType:()=>me,hasEncodingLoss:()=>xe,hexToLong:()=>Fa,indexToLoc:()=>Le,inferDtype:()=>Ne,inferFromImplicitShape:()=>de,isBoolean:()=>Ie,isFunction:()=>Te,isInt:()=>ie,isNumber:()=>Se,isPromise:()=>Pe,isScalarShape:()=>re,isString:()=>ke,isTypedArray:()=>ns,isValidDtype:()=>be,locToIndex:()=>Oe,makeOnesTypedArray:()=>$e,makeZerosNestedTypedArray:()=>De,makeZerosTypedArray:()=>Fe,nearestDivisor:()=>_e,nearestLargerEven:()=>K,now:()=>Za,parseAxisParam:()=>ce,randUniform:()=>J,repeatedTry:()=>he,rightPad:()=>pe,shuffle:()=>H,shuffleCombo:()=>j,sizeFromShape:()=>ne,sizeToSquarishShape:()=>le,squeezeShape:()=>fe,sum:()=>Y,swap:()=>X,tanh:()=>oe,toNestedArray:()=>Ae,toTypedArray:()=>Ja});var Ra=w(v()),$a=Ra.default||Ra;function Fa(e){return $a.fromString(e,!0,16)}var Da=Fa("c3a5c85c97cb3127"),Ma=Fa("b492b66fbe98f273"),Oa=Fa("9ae16a3b2f90404f");function La(e){return e.xor(e.shru(47))}function Pa(e,t,n){let r=e.slice(t,t+n);return $a.fromBytes(Array.from(r),!0,!0)}function za(e,t){return Pa(e,t,8)}function Ba(e,t){return Pa(e,t,4)}function Wa(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Va(e,t,n=Fa("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ua(e,t,n,r,a,s){a=a.add(e),s=Wa(s.add(a).add(r),21);let i=a;return a=a.add(t),a=a.add(n),s=s.add(Wa(a,44)),[a.add(r),s.add(i)]}function Ga(e,t,n,r){return Ua(za(e,t),za(e,t+8),za(e,t+16),za(e,t+24),n,r)}function Ha(e,t=e.length){if(t>=8){let n=Oa.add(2*t),r=za(e,0).add(Oa),a=za(e,t-8),s=Wa(a,37).mul(n).add(r),i=Wa(r,25).add(a).mul(n);return Va(s,i,n)}if(t>=4){let n=Oa.add(2*t),r=Ba(e,0);return Va(r.shl(3).add(t),Ba(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1],s=n+(r<<8),i=t+(a<<2);return La(Oa.mul(s).xor(Da.mul(i))).mul(Oa)}return Oa}function ja(e,t=e.length){let n=Oa.add(2*t),r=za(e,0).mul(Ma),a=za(e,8),s=za(e,t-8).mul(n),i=za(e,t-16).mul(Oa);return Va(Wa(r.add(a),43).add(Wa(s,30)).add(i),r.add(Wa(a.add(Oa),18)).add(s),n)}function qa(e,t=e.length){let n=Oa.add(2*t),r=za(e,0).mul(Oa),a=za(e,8),s=za(e,t-8).mul(n),i=za(e,t-16).mul(Oa),o=Wa(r.add(a),43).add(Wa(s,30)).add(i),l=Va(o,r.add(Wa(a.add(Oa),18)).add(s),n),u=za(e,16).mul(n),p=za(e,24),h=o.add(za(e,t-32)).mul(n),d=l.add(za(e,t-24)).mul(n);return Va(Wa(u.add(p),43).add(Wa(h,30)).add(d),u.add(Wa(p.add(r),18)).add(h),n)}function Ka(e,t=e.length){let n=$a.fromNumber(81,!0);if(t<=32)return t<=16?Ha(e,t):ja(e,t);if(t<=64)return qa(e,t);let r=n,a=n.mul(Ma).add(113),s=La(a.mul(Oa).add(113)).mul(Oa),i=[$a.UZERO,$a.UZERO],o=[$a.UZERO,$a.UZERO];r=r.mul(Oa).add(za(e,0));let l=0,u=64*(t-1>>6),p=u+(t-1&63)-63;do{r=Wa(r.add(a).add(i[0]).add(za(e,l+8)),37).mul(Ma),a=Wa(a.add(i[1]).add(za(e,l+48)),42).mul(Ma),r=r.xor(o[1]),a=a.add(i[0]).add(za(e,l+40)),s=Wa(s.add(o[0]),33).mul(Ma),i=Ga(e,l,i[1].mul(Ma),r.add(o[0])),o=Ga(e,l+32,s.add(o[1]),a.add(za(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let h=Ma.add(s.and(255).shl(1));return l=p,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Wa(r.add(a).add(i[0]).add(za(e,l+8)),37).mul(h),a=Wa(a.add(i[1]).add(za(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(za(e,l+40))),s=Wa(s.add(o[0]),33).mul(h),i=Ga(e,l,i[1].mul(h),r.add(o[0])),o=Ga(e,l+32,s.add(o[1]),a.add(za(e,l+16))),[s,r]=[r,s],Va(Va(i[0],o[0],h).add(La(a).mul(Da)).add(s),Va(i[1],o[1],h).add(r),h)}function Xa(e,t){return"string"===t?es(e):Ja([e],t)}function Ya(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function Ja(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=rs(e)),Ge().getBool("DEBUG")&&ye(e,t),Ya(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function Za(){return Ge().platform.now()}function Qa(e,t){return Ge().platform.fetch(e,t)}function es(e,t="utf-8"){return t=t||"utf-8",Ge().platform.encode(e,t)}function ts(e,t="utf-8"){return t=t||"utf-8",Ge().platform.decode(e,t)}function ns(e){return null!=Ge().platform.isTypedArray?Ge().platform.isTypedArray(e):Aa(e)}function rs(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Pe(e)||null==e||ns(e)&&n)t.push(e);else if(Array.isArray(e)||ns(e))for(let r=0;r<e.length;++r)rs(e[r],t,n);else{let r=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)rs(e[a],t,n)}return t}var as=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new is)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=Za();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:Za()-i})}if(Ge().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let t=r[o];t.data().then(n=>{ss(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}};function ss(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){let t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}var is=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?pe(r+"ms",9):r.error,o=pe(e,25),l=t.rank,u=t.size,p=pe(t.shape.toString(),14),h="";for(let d in a){let e=a[d];if(null!=e){let n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${p}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function os(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let n=e[l],s=n.inputs;for(let e in s){let i=s[e],o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach(e=>r[e.id]=!0),o=!0,a[n.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(let e in n)s[n[e].id]=!0,i[t.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let t=e[l];if(a[t.id]&&i[t.id]){let e={};for(let a in t.inputs){let n=t.inputs[a];r[n.id]&&(e[a]=n)}let n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}function ls(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n(()=>o[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!se(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}var us=20,ps=3,hs=7;function ds(e,t,n,r){let a=Ce(t),s=cs(e,t,n,a),i=t.length,o=gs(e,t,n,a,s),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+i),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join("\n")),l.join("\n")}function cs(e,t,n,r){let a=ne(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?ys(e):e;if(o>1)for(let u=0;u<a/s;u++){let e=u*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],fs(l[e+t],0,n).length)}return i}function fs(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(hs))} + ${parseFloat(e[1].toFixed(hs))}j`:ke(e)?`'${e}'`:"bool"===n?ms(e):parseFloat(e.toFixed(hs)).toString(),pe(r,t)}function ms(e){return 0===e?"false":"true"}function gs(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){let t=ys(e);return[fs(t[0],0,n)]}return"bool"===n?[ms(e[0])]:[e[0].toString()]}if(1===l){if(o>us){let t=ps*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-ps)*i,o*i));return"complex64"===n&&(r=ys(r),s=ys(s)),["["+r.map((e,t)=>fs(e,a[t],n)).join(", ")+", ..., "+s.map((e,t)=>fs(e,a[o-ps+t],n)).join(", ")+"]"]}return["["+("complex64"===n?ys(e):Array.from(e)).map((e,t)=>fs(e,a[t],n)).join(", ")+"]"]}let u=t.slice(1),p=r.slice(1),h=r[0]*i,d=[];if(o>us){for(let t=0;t<ps;t++){let r=t*h,s=r+h;d.push(...gs(e.slice(r,s),u,n,p,a,!1))}d.push("...");for(let t=o-ps;t<o;t++){let r=t*h,s=r+h;d.push(...gs(e.slice(r,s),u,n,p,a,t===o-1))}}else for(let m=0;m<o;m++){let t=m*h,r=t+h;d.push(...gs(e.slice(t,r),u,n,p,a,m===o-1))}let c=2===l?",":"";d[0]="["+(o>0?d[0]+c:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+c;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function ys(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var bs=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ne(e),null!=n){let e=n.length;Q(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ge(t,this.size),this.strides=Ce(e)}set(e,...t){0===t.length&&(t=[0]),Q(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return xs().makeTensor(this.values,this.shape,this.dtype)}},xs=null,ws=null;function vs(e){xs=e}function ks(e){ws=e}function Is(e){e}var Ss=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ne(e),this.strides=Ce(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return ws.buffer(this.shape,this.dtype,e)}bufferSync(){return ws.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ae(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ae(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=xs().read(this.dataId);if("string"===this.dtype){let n=await e;try{return n.map(e=>ts(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),xs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=xs().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>ts(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await xs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),xs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ws.print(this,e)}clone(){return this.throwIfDisposed(),ws.clone(this)}toString(e=!1){let t=this.dataSync();return ds(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ws.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),xs().makeVariable(this,e,t,n)}};function Ns(){return Ye("Tensor",()=>Ss)}Object.defineProperty(Ss,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ns();var Ts=class extends Ss{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!se(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);xs().disposeTensor(this),this.dataId=e.dataId,xs().incRef(this,null)}dispose(){xs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ts,Symbol.hasInstance,{value:e=>e instanceof Ss&&null!=e.assign&&e.assign instanceof Function});var _s,Cs,Es,As,Rs,$s={};b($s,{assertTypesMatch:()=>zs,getTensorsInContainer:()=>Ws,isTensorInList:()=>Bs,makeTypesMatch:()=>Ps}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(_s||(_s={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Cs||(Cs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Es||(Es={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(As||(As={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Rs||(Rs={}));var Fs={float32:As,int32:Cs,bool:Es,complex64:Rs};function Ds(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Fs[e][t]}function Ms(e){return Ds(e,"int32")}function Os(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Ls(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Ps(e,t){if(e.dtype===t.dtype)return[e,t];let n=Ds(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function zs(e,t){Q(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function Bs(e,t){return t.some(t=>t.id===e.id)}function Ws(e){let t=[];return Vs(e,t,new Set),t}function Vs(e,t,n){if(null==e)return;if(e instanceof Ss)return void t.push(e);if(!Us(e))return;let r=e;for(let a in r){let e=r[a];n.has(e)||(n.add(e),Vs(e,t,n))}}function Us(e){return Array.isArray(e)||"object"==typeof e}function Gs(e){return null!=e.kernelName}var Hs=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},js=class e{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Hs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ga(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new as(this.backendInstance),!0}setupRegisteredKernels(){ka(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ka(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof U||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ga(`Initialization of backend ${e} failed`),ga(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return ga(`Initialization of backend ${e} failed`),ga(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return e.nextTensorId++}nextVariableId(){return e.nextVariableId++}clone(e){let t=Xs.runKernel(fn,{x:e}),n={x:e},r=e=>({x:()=>{let t="float32",n={x:e},r={dtype:t};return Xs.runKernel(vt,n,r)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,a,{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==wa(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=Gs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Gs(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=wa(t,this.backendName);Q(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{a&&(r=e.map(e=>this.keep(this.clone(e))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,s));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:p,attrs:h}=e,d=Gs(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,p,()=>n()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()}),a&&this.addTapeNode(l,p,t,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(e=>null!=p[e]?p[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){let r=va(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(Q(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=a.map(e=>t[e]);let i=n.filter((e,t)=>s[t]);return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&ke(e[0])&&(a=e.map(e=>es(e)));let s=r.write(a,t,n),i=new Ss(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=ve(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";let a={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new Ss(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Ts(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*we(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ts||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*we(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=va(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=n[t],r=Fe(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Ws(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){let e=this.state.activeScope.track[a];!e.kept&&!n.has(e.id)&&e.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{!e.kept&&e.scopeId===r.id&&this.track(e)})}gradients(e,t,n,r=!1){if(Q(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));Q(a instanceof Ss,()=>"The result y returned by f() must be a tensor.");let s=os(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[a.id]=null==n?qs(a.shape):n,ls(e,s,e=>this.tidy(e),Ys);let r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return Q(Te(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{Q(t.every(e=>e instanceof Ss),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};t.forEach((e,t)=>{r[t]=e});let a=(r,a)=>(n=e(...t,a),Q(n.value instanceof Ss,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),Q(Te(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),s=(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Q(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),Q(s.every(e=>e instanceof Ss),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let i={};return s.forEach((e,t)=>{i[t]=()=>e}),i};return this.runKernelFunc({forwardFunc:a,backwardsFunc:s,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Za(),n=await this.backend.time(e);return n.wallMs=Za()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Hs;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function qs(e){let t=$e(ne(e),"float32");return Xs.makeTensor(t,e,"float32")}function Ks(){let e=Ke();if(null==e._tfengine){let t=new Be(e);e._tfengine=new js(t)}return qe(e._tfengine.ENV),vs(()=>e._tfengine),e._tfengine}js.nextTensorId=0,js.nextVariableId=0;var Xs=Ks();function Ys(e,t){let n={a:e,b:t};return Xs.runKernel(et,n)}var Js,Zs={};function Qs(){return"undefined"!=typeof navigator&&null!=navigator}function ei(e){Js=e}function ti(e){if(void 0!==Js)return Js;if(e||Qs()){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ni(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}b(Zs,{isBrowser:()=>ni,isMobile:()=>ti,mockIsMobile:()=>ei});var ri=Ge();function ai(e,t){let n=e;if(ns(e))return"string"===t?[]:[e.length];if(Os(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Ls(e))return[e.buffer.size/(null==t?4:we(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||ns(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ge().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&si(e,r,[]),r}function si(e,t,n){if(n=n||[],!Array.isArray(e)&&!ns(e))return void Q(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);Q(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Q(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let a=0;a<e.length;++a)si(e[a],r,n.concat(a))}function ii(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function oi(e,t,n,r="numeric"){if(e instanceof Ns())return ii(r,e.dtype,t,n),e;let a=Ne(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),ii(r,a,t,n),null==e||!ns(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=ai(e,a);!ns(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Ja(e,a):rs(e,[],!0);return Xs.makeTensor(i,s,a)}function li(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>oi(e,`${t}[${a}]`,n,r))}ri.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ri.registerFlag("IS_BROWSER",()=>ni()),ri.registerFlag("IS_NODE",()=>"undefined"!=typeof r&&"undefined"!=typeof r.versions&&"undefined"!=typeof r.versions.node),ri.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ri.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),ri.registerFlag("PROD",()=>!1),ri.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ri.getBool("DEBUG")),ri.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ri.registerFlag("IS_TEST",()=>!1),ri.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ri.getBool("DEBUG")),ri.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),ri.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),ri.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);var ui="__op";function pi(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ui;let a=(...e)=>{Xs.startScope(n);try{let t=r(...e);return Pe(t)&&console.error("Cannot return a Promise inside of tidy."),Xs.endScope(t),t}catch(t){throw Xs.endScope(null),t}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function hi(e,t){let n=oi(e,"real","complex"),r=oi(t,"imag","complex");ee(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return Xs.runKernel(St,a)}var di=pi({complex_:hi});function ci(e,t,n,r){if(null==r)r=Ne(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Ls(e)||Os(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Xs.backend.createTensorFromGPUData(e,t||n,r)}if(!ns(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Me(t);let e=ne(t),r=ne(n);Q(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let a=0;a<n.length;++a){let e=n[a],r=a!==n.length-1||e!==ne(t.slice(a));Q(n[a]===t[a]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!ns(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Ja(e,r):rs(e,[],!0),Xs.makeTensor(e,t,r)}function fi(e,t,n){let r=ai(e,n);return ci(e,t,r,n)}var mi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},gi=class e{static join(t){return new e(t).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),e=e.map(e=>ns(e)?e.buffer:e),0===e.length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte "+e);let r=t-e,a=new ArrayBuffer(r),s=new Uint8Array(a),i=0;for(let o=n;o<this.shards.length;o++){let n=this.shards[o],r=e+i-n.start,a=i,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,r,l-r);if(s.set(u,a),i+=u.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=yi(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function yi(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}function bi(){Ge().set("PROD",!0)}function xi(){Ge().set("DEBUG",!0)}function wi(){Ge().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function vi(e){Ge().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ki(){Xs.disposeVariables()}function Ii(){return Xs}function Si(){return Xs.memory()}function Ni(e){return Xs.profile(e)}function Ti(e,t){return Xs.tidy(e,t)}function _i(e){Ws(e).forEach(e=>e.dispose())}function Ci(e){return Xs.keep(e)}function Ei(e){return Xs.time(e)}function Ai(e){return Xs.setBackend(e)}function Ri(){return Xs.ready()}function $i(){return Xs.backendName}function Fi(e){Xs.removeBackend(e)}function Di(e){return Xs.findBackend(e)}function Mi(e){return Xs.findBackendFactory(e)}function Oi(e,t,n=1){return Xs.registerBackend(e,t,n)}function Li(){return Xs.backend}function Pi(e,t){Ge().setPlatform(e,t)}Is(vi);var zi=4;async function Bi(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let i=0;i<a.length;++i){let s=a[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);let l={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise(async e=>{let t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+zi*t.length,r=new Uint8Array(n),a=0;for(let s=0;s<t.length;s++){let e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=zi,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}let s=await Promise.all(r);return{data:qi(s),specs:n}}function Wi(e,t){let n=new gi(e),r={},a=0;for(let s of t){let e=Vi(s,(e,t)=>n.slice(a+e,a+t));r[s.name]=Gi(s,n.slice(a,a+e)),a+=e}return r}function Vi(e,t){let n,r=ne(e.shape);if("quantization"in e){let t=e.quantization;n=mi[t.dtype]}else{if("string"===e.dtype){let e=0;for(let n=0;n<r;n++)e+=zi+new Uint32Array(t(e,e+zi))[0];return e}n=mi[e.dtype]}return r*n}async function Ui(e,t){let n,r=ne(e.shape);if("quantization"in e){let t=e.quantization;n=mi[t.dtype]}else{if("string"===e.dtype){let e=0;for(let n=0;n<r;n++)e+=zi+new Uint32Array(await t(e,e+zi))[0];return e}n=mi[e.dtype]}return r*n}function Gi(e,t){let n,r=e.name,a=e.dtype,s=e.shape,i=ne(s),o=0;if("quantization"in e){let s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${a}.`)}let l=mi[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===s.dtype||"uint16"===s.dtype){n=new Float32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);n=lo()(u)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${r}': ${a}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);n=new Int32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=Math.round(t*s.scale+s.min)}}o+=i*l}else if("string"===a){let r=ne(e.shape);n=[];for(let e=0;e<r;e++){let e=new Uint32Array(t.slice(o,o+zi))[0];o+=zi;let r=new Uint8Array(t.slice(o,o+e));n.push(r),o+=e}}else{let e=mi[a];if("float32"===a)n=new Float32Array(t);else if("int32"===a)n=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){n=new Float32Array(t);let e=new Float32Array(n.length/2),r=new Float32Array(n.length/2);for(let t=0;t<e.length;t++)e[t]=n[2*t],r[t]=n[2*t+1];let a=fi(e,s,"float32"),i=fi(r,s,"float32"),o=di(a,i);return a.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${r}': ${a}`)}n=new Uint8Array(t)}o+=i*e}return fi(n,s,a)}async function Hi(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){let{done:t,value:a}=await e.read();if(t&&null==a){let e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}let s=new Uint8Array(r.length+a.byteLength);s.set(r,0),s.set(new Uint8Array(a),r.length),r=s}return r.buffer}async function ji(e,t){let n={},r=e.getReader(),a=new ArrayBuffer(0);for(let s of t){let e=await Ui(s,async(e,t)=>(a=await Hi(r,a,t),a.slice(e,t)));a=await Hi(r,a,e);let t=a.slice(0,e);a=a.slice(e);let i=Gi(s,t);if(n[s.name]=i,"webgpu"===$i()){let e=Li();"uploadToGPU"in e&&ne(i.shape)>=Ge().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function qi(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0,n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});let r=new Uint8Array(t),a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}var Ki="undefined"!=typeof i&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Xi(e){return Ki?i.byteLength(e,"utf8"):new Blob([e]).size}function Yi(e){if(Ki)return i.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function Ji(e){if(Ki){let t=i.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function Zi(e){return gi.join(e)}function Qi(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function eo(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function to(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function no(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),to(e,n,r)}function ro(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Xi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Xi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new gi(e.weightData).byteLength}}function ao(e){let t=[];for(let n of e)t.push(...n.weights);return t}function so(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function io(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function oo(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function lo(){let e=so(),t=io(),n=oo();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let a=r[i],o=e[n[a>>10]+(1023&a)]+t[a>>10];s[i]=o}return new Float32Array(a)}}var uo=class e{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerSaveRouter(t){e.getInstance().saveRouters.push(t)}static registerLoadRouter(t){e.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return e.getHandlers(t,"save")}static getLoadHandlers(t,n){return e.getHandlers(t,"load",n)}static getHandlers(t,n,r){let a=[];return("load"===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach(e=>{let n=e(t,r);null!==n&&a.push(n)}),a}},po=e=>uo.registerSaveRouter(e),ho=e=>uo.registerLoadRouter(e),co=e=>uo.getSaveHandlers(e),fo=(e,t)=>uo.getLoadHandlers(e,t),mo="tensorflowjs",go=1,yo="models_store",bo="model_info_store";function xo(){if(!Ge().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function wo(e){let t=e.result;t.createObjectStore(yo,{keyPath:"modelPath"}),t.createObjectStore(bo,{keyPath:"modelPath"})}var vo=class{constructor(e){if(this.indexedDB=xo(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{let r=this.indexedDB.open(mo,go);r.onupgradeneeded=()=>wo(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(yo,"readonly"),r=t.objectStore(yo).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=gi.join(t.weightData);let r,i,o=ro(t),l=a.transaction(bo,"readwrite"),u=l.objectStore(bo);try{r=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(s){return n(s)}r.onsuccess=()=>{i=a.transaction(yo,"readwrite");let r,s=i.objectStore(yo);try{r=s.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o})}catch(p){return n(p)}r.onsuccess=()=>e({modelArtifactsInfo:o}),r.onerror=e=>{u=l.objectStore(bo);let t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(r.error)),t.onerror=e=>(a.close(),n(r.error))}},r.onerror=e=>(a.close(),n(r.error)),l.oncomplete=()=>{null==i?a.close():i.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}};vo.URL_SCHEME="indexeddb://";var ko=e=>Ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vo.URL_SCHEME)?Io(e.slice(vo.URL_SCHEME.length)):null;function Io(e){return new vo(e)}function So(e){return e.startsWith(vo.URL_SCHEME)?e.slice(vo.URL_SCHEME.length):e}uo.registerSaveRouter(ko),uo.registerLoadRouter(ko);var No=class{constructor(){this.indexedDB=xo()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(mo,go);n.onupgradeneeded=()=>wo(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(bo,"readonly"),s=a.objectStore(bo).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){return e=So(e),new Promise((t,n)=>{let r=this.indexedDB.open(mo,go);r.onupgradeneeded=()=>wo(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(bo,"readwrite"),o=i.objectStore(bo),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(yo,"readwrite");let r=a.objectStore(yo).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}},To="/",_o="tensorflowjs_models",Co="info",Eo="model_topology",Ao="weight_specs",Ro="weight_data",$o="model_metadata";function Fo(e){return{info:[_o,e,Co].join(To),topology:[_o,e,Eo].join(To),weightSpecs:[_o,e,Ao].join(To),weightData:[_o,e,Ro].join(To),modelMetadata:[_o,e,$o].join(To)}}function Do(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function Mo(e){let t=e.split(To);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(To)}function Oo(e){return e.startsWith(Lo.URL_SCHEME)?e.slice(Lo.URL_SCHEME.length):e}var Lo=class{constructor(e){if(!Ge().getBool("IS_BROWSER")||"undefined"==typeof window||"undefined"==typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Fo(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=ro(e),s=gi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Yi(s));let t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw Do(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Ji(s),t}};Lo.URL_SCHEME="localstorage://";var Po=e=>Ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Lo.URL_SCHEME)?zo(e.slice(Lo.URL_SCHEME.length)):null;function zo(e){return new Lo(e)}uo.registerSaveRouter(Po),uo.registerLoadRouter(Po);var Bo=class{constructor(){Q(Ge().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Q("undefined"==typeof window||"undefined"!=typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=_o+To,n=To+Co;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){let t=Mo(a);e[t]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=Oo(e);let t=Fo(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Do(t),n}},Wo="://",Vo=class e{constructor(){this.managers={}}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerManager(t,n){Q(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(Wo)&&(t=t.slice(0,t.indexOf(Wo))),Q(t.length>0,()=>"scheme must not be an empty string.");let r=e.getInstance();Q(null==r.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=n}static getManager(t){let n=e.getInstance().managers[t];if(null==n)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(e.getInstance().managers)}};function Uo(e){if(-1===e.indexOf(Wo))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Vo.getSchemes().join(","));return{scheme:e.split(Wo)[0],path:e.split(Wo)[1]}}async function Go(e,t,n=!1){Q(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=uo.getLoadHandlers(e);Q(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Q(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=uo.getSaveHandlers(t);Q(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Q(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=Uo(e).scheme,l=Uo(e).path,u=o===Uo(e).scheme,p=await a.load();n&&u&&await Vo.getManager(o).removeModel(l);let h=await i.save(p);return n&&!u&&await Vo.getManager(o).removeModel(l),h.modelArtifactsInfo}async function Ho(){let e=Vo.getSchemes(),t={};for(let n of e){let e=await Vo.getManager(n).listModels();for(let r in e){let a=n+Wo+r;t[a]=e[r]}}return t}async function jo(e){let t=Uo(e);return Vo.getManager(t.scheme).removeModel(t.path)}async function qo(e,t){return Go(e,t,!1)}async function Ko(e,t){return Go(e,t,!0)}var Xo=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Ge().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();let t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))):setTimeout(e,t)}isTypedArray(e){return Aa(e)}};if(Ge().get("IS_BROWSER")){Ge().setPlatform("browser",new Xo);try{Vo.registerManager(Lo.URL_SCHEME,new Bo)}catch(ppe){}try{Vo.registerManager(vo.URL_SCHEME,new No)}catch(ppe){}}var Yo,Jo={importFetch:()=>k()},Zo=class{constructor(){this.util=I(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ge().global.fetch?Ge().global.fetch(e,t):(null==Yo&&(Yo=Jo.importFetch()),Yo(e,t))}now(){let e=r.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};function Qo(e,t="float32",n){return t=t||"float32",Me(e),new bs(e,t,n)}function el(e,t){let n=oi(e,"x","cast");if(!be(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return Xs.runKernel(vt,r,a)}Ge().get("IS_NODE")&&!Ge().get("IS_BROWSER")&&Ge().setPlatform("node",new Zo);var tl=pi({cast_:el});function nl(e){let t={x:oi(e,"x","clone","string_or_numeric")};return Xs.runKernel(fn,t)}var rl=pi({clone_:nl});function al(e,t=!1){console.log(e.toString(t))}Ks();var sl={buffer:Qo,cast:tl,clone:rl,print:al};function il(e,t){let n=oi(e,"a","add"),r=oi(t,"b","add");[n,r]=Ps(n,r);let a={a:n,b:r};return Xs.runKernel(et,a)}ks(sl);var ol=pi({add_:il});function ll(e,t){let n=oi(e,"a","floorDiv"),r=oi(t,"b","floorDiv");[n,r]=Ps(n,r);let a={a:n,b:r};return Xs.runKernel(ln,a)}var ul=pi({floorDiv_:ll});function pl(e,t){let n=oi(e,"a","div"),r=oi(t,"b","div");if([n,r]=Ps(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ul(n,r);let a={a:n,b:r},s={};return Xs.runKernel(Kt,a,s)}var hl=pi({div_:pl});function dl(e,t){let n=oi(e,"a","mul"),r=oi(t,"b","mul");[n,r]=Ps(n,r);let a={a:n,b:r};return Xs.runKernel(Kn,a)}var cl=pi({mul_:dl});function fl(e){let t=oi(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Xs.runKernel(Nt,e)}{let e={x:t};return Xs.runKernel(Je,e)}}var ml=pi({abs_:fl});function gl(e){let t={x:oi(e,"x","acos")};return Xs.runKernel(Ze,t)}var yl=pi({acos_:gl});function bl(e){let t={x:oi(e,"x","acosh")};return Xs.runKernel(Qe,t)}var xl=pi({acosh_:bl});function wl(e){Q(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),Q(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);let t=e.map((e,t)=>oi(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!se(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return Xs.runKernel(tt,r)}var vl=pi({addN_:wl});function kl(e,t=null,n=!1){let r={x:oi(e,"x","all","bool")},a={axis:t,keepDims:n};return Xs.runKernel(nt,r,a)}var Il=pi({all_:kl});function Sl(e,t=null,n=!1){let r={x:oi(e,"x","any","bool")},a={axis:t,keepDims:n};return Xs.runKernel(rt,r,a)}var Nl=pi({any_:Sl});function Tl(e,t=0){let n={x:oi(e,"x","argMax")},r={axis:t};return Xs.runKernel(at,n,r)}var _l=pi({argMax_:Tl});function Cl(e,t=0){let n={x:oi(e,"x","argMin")},r={axis:t};return Xs.runKernel(st,n,r)}var El=pi({argMin_:Cl});function Al(e){let t={x:oi(e,"x","asin")};return Xs.runKernel(it,t)}var Rl=pi({asin_:Al});function $l(e){let t={x:oi(e,"x","asinh")};return Xs.runKernel(ot,t)}var Fl=pi({asinh_:$l});function Dl(e){let t={x:oi(e,"x","atan")};return Xs.runKernel(lt,t)}var Ml=pi({atan_:Dl});function Ol(e,t){let n=oi(e,"a","atan2"),r=oi(t,"b","atan2");[n,r]=Ps(n,r);let a={a:n,b:r};return Xs.runKernel(pt,a)}var Ll=pi({atan2_:Ol});function Pl(e){let t={x:oi(e,"x","atanh")};return Xs.runKernel(ut,t)}var zl=pi({atanh_:Pl});function Bl(e,t,n,r,a="NHWC",s){let i=e[3],o=[...t,i],l=ru(a);return Ul(e,o,n,s,r,null,null,l)}function Wl(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=Kl(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);o=[l,u,e[1],e[1]]}return Ul(e,o,n,r,a,s,!1,i)}function Vl(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,p,h]=Xl(t);if("NDHWC"===i)l="channelsLast",o=[u,p,h,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);l="channelsFirst",o=[u,p,h,e[1],e[1]]}return Gl(e,o,n,r,a,!1,l,s)}function Ul(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,p,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,p,h]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,h,u,p]=e}let d,[c,f,,m]=t,[g,y]=Kl(n),[b,x]=Kl(r),w=Yl(c,b),v=Yl(f,x),{padInfo:k,outHeight:I,outWidth:S}=Jl(a,u,p,g,y,w,v,s,o),N=i?m*h:m;return"channelsFirst"===o?d=[l,N,I,S]:"channelsLast"===o&&(d=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:p,inChannels:h,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function Gl(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,p,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,p,h,d]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[l,d,u,p,h]=e}let c,[f,m,g,,y]=t,[b,x,w]=Xl(n),[v,k,I]=Xl(r),S=Yl(f,v),N=Yl(m,k),T=Yl(g,I),{padInfo:_,outDepth:C,outHeight:E,outWidth:A}=Zl(a,u,p,h,b,x,w,S,N,T,o),R=s?y*d:y;return"channelsFirst"===i?c=[l,R,C,E,A]:"channelsLast"===i&&(c=[l,C,E,A,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:p,inWidth:h,inChannels:d,outDepth:C,outHeight:E,outWidth:A,outChannels:R,padInfo:_,strideDepth:b,strideHeight:x,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:v,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function Hl(e,t,n,r,a){null==r&&(r=ql(e,t,n));let s=e[0],i=e[1],o=Ql((s-t+2*r)/n+1,a),l=Ql((i-t+2*r)/n+1,a);return[o,l]}function jl(e,t,n,r,a,s){null==a&&(a=ql(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=Ql((e[o]-t[o]+2*a)/r[o]+1,s));return i}function ql(e,t,n,r=1){let a=Yl(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Kl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Xl(e){return"number"==typeof e?[e,e,e]:e}function Yl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Jl(e,t,n,r,a,s,i,o,l){let u,p,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=Hl([t,n],s,r,e,o);p=a[0],h=a[1]}else if("same"===e){p=Math.ceil(t/r),h=Math.ceil(n/a);let e=Math.max(0,(p-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2),f=o-c;u={top:l,bottom:d,left:c,right:f,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},p=Ql((t-s+d+c)/r+1,o),h=Ql((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:p,outWidth:h}}function Zl(e,t,n,r,a,s,i,o,l,u,p){let h,d,c,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=jl([t,n,r,1],[o,l,u],1,[a,s,i],e,p);d=m[0],c=m[1],f=m[2]}else{if("same"!==e)throw Error("Unknown padding parameter: "+e);{d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(d-1)*a+o-t,p=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(p/2),x=p-b,w=Math.floor(m/2),v=m-w;h={top:b,bottom:x,left:w,right:v,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:c,outWidth:f}}function Ql(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function eu(e){let[t,n,r]=Kl(e);return 1===t&&1===n&&1===r}function tu(e,t){return eu(e)||eu(t)}function nu(e){return Kl(e).every(e=>e>0)}function ru(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}function au(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Q(ie(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(t=>{t.forEach(t=>{Q(ie(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})})}}}function su(e,t){let n={x:oi(e,"x","reshape","string_or_numeric")},r={shape:t};return Xs.runKernel(mr,n,r)}var iu=pi({reshape_:su});function ou(e,t,n,r,a){let s=oi(e,"x","avgPool","float32"),i=1;Q(tu(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;3===s.rank&&(l=!0,o=iu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===o.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),au("avgPool",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=Xs.runKernel(ht,u,p);return h=tl(h,s.dtype),l?iu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var lu=pi({avgPool_:ou});function uu(e,t,n,r,a,s="NDHWC"){let i=oi(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=iu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),Q("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),Q("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),au("avgPool3d",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=Xs.runKernel(ct,u,p);return h=tl(h,o.dtype),l?iu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var pu=pi({avgPool3d_:uu});function hu(e,t=0){Q(e.length>=1,()=>"Pass at least one tensor to concat");let n=li(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return rl(n[0]);let r=n,a={axis:t};return Xs.runKernel(Tt,r,a)}var du=pi({concat_:hu});function cu(e,t,n=!1,r=!1){let a=oi(e,"a","matMul"),s=oi(t,"b","matMul");[a,s]=Ps(a,s);let i={a:a,b:s},o={transposeA:n,transposeB:r};return Xs.runKernel(mt,i,o)}var fu=pi({matMul_:cu});function mu(e){let t={x:oi(e,"x","sigmoid","float32")};return Xs.runKernel(Fr,t)}var gu=pi({sigmoid_:mu});function yu(e,t,n){let r=oi(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return Xs.runKernel(Er,a,s)}var bu=pi({slice_:yu});function xu(e){let t={x:oi(e,"x","tanh","float32")};return Xs.runKernel(ea,t)}var wu=pi({tanh_:xu});function vu(e,t,n,r,a,s){let i=oi(e,"forgetBias","basicLSTMCell"),o=oi(t,"lstmKernel","basicLSTMCell"),l=oi(n,"lstmBias","basicLSTMCell"),u=oi(r,"data","basicLSTMCell"),p=oi(a,"c","basicLSTMCell"),h=oi(s,"h","basicLSTMCell"),d=du([u,h],1),c=fu(d,o),f=ol(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=bu(f,[0,0],y),x=bu(f,[0,g],y),w=bu(f,[0,2*g],y),v=bu(f,[0,3*g],y),k=ol(cl(gu(b),wu(x)),cl(p,gu(ol(i,w)))),I=cl(wu(k),gu(v));return[k,I]}var ku=pi({basicLSTMCell_:vu});function Iu(e,t,n){let r=oi(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);Q(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),Q(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),Q(r.shape[0]%a===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:r},i={blockShape:t,crops:n};return Xs.runKernel(gt,s,i)}var Su=pi({batchToSpaceND_:Iu});function Nu(e){let t;return t=0===e.rank||1===e.rank?iu(e,[1,1,1,e.size]):2===e.rank?iu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?iu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}function Tu(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=oi(e,"x","batchNorm"),u=oi(t,"mean","batchNorm"),p=oi(n,"variance","batchNorm");null!=a&&(i=oi(a,"scale","batchNorm")),null!=r&&(o=oi(r,"offset","batchNorm")),Q(u.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Q(null==o||u.rank===o.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Q(null==i||u.rank===i.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:Nu(l),scale:i,offset:o,mean:u,variance:p},d={varianceEpsilon:s},c=Xs.runKernel(un,h,d);return iu(c,l.shape)}var _u=pi({batchNorm_:Tu});function Cu(e,t,n,r,a,s){let i,o,l=oi(e,"x","batchNorm"),u=oi(t,"mean","batchNorm"),p=oi(n,"variance","batchNorm");return null!=a&&(i=oi(a,"scale","batchNorm")),null!=r&&(o=oi(r,"offset","batchNorm")),Q(2===l.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`),Q(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`),Q(2===p.rank||1===p.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`),null!=i&&Q(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`),null!=o&&Q(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`),_u(l,u,p,o,i,s)}var Eu=pi({batchNorm2d_:Cu});function Au(e,t,n,r,a,s){let i,o,l=oi(e,"x","batchNorm"),u=oi(t,"mean","batchNorm"),p=oi(n,"variance","batchNorm");return null!=a&&(i=oi(a,"scale","batchNorm")),null!=r&&(o=oi(r,"offset","batchNorm")),Q(3===l.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`),Q(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`),Q(3===p.rank||1===p.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`),null!=i&&Q(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`),null!=o&&Q(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`),_u(l,u,p,o,i,s)}var Ru=pi({batchNorm3d_:Au});function $u(e,t,n,r,a,s){let i,o,l=oi(e,"x","batchNorm"),u=oi(t,"mean","batchNorm"),p=oi(n,"variance","batchNorm");return null!=a&&(i=oi(a,"scale","batchNorm")),null!=r&&(o=oi(r,"offset","batchNorm")),Q(4===l.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`),Q(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`),Q(4===p.rank||1===p.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`),null!=i&&Q(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`),null!=o&&Q(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`),_u(l,u,p,o,i,s)}var Fu=pi({batchNorm4d_:$u});function Du(e,t,n){let r=oi(e,"x","bincount"),a=oi(t,"weights","bincount");Q("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),Q(n>=0,()=>`size must be non-negative, but got ${n}.`),Q(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`);let s={x:r,weights:a},i={size:n};return Xs.runKernel(yt,s,i)}var Mu=pi({bincount_:Du});function Ou(e,t){let n=oi(e,"x","bitwiseAnd"),r=oi(t,"y","bitwiseAnd");if(!se(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);let a={a:n,b:r};return Xs.runKernel(bt,a)}var Lu=pi({bitwiseAnd_:Ou});function Pu(e,t){let n=oi(e,"s0","broadcastArgs","int32"),r=oi(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). Has rank "+n.rank);if(1!==r.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). Has rank "+r.rank);let a={s0:n,s1:r};return Xs.runKernel(wt,a)}var zu=pi({broadcastArgs_:Pu});function Bu(e,t){let n=oi(e,"broadcastTo","x"),r=n.shape;if(Me(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=iu(n,e)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return rl(n);let i={x:n},o={reps:s};return Xs.runKernel(ta,i,o)}var Wu=pi({broadcastTo_:Bu});function Vu(e){let t={x:oi(e,"x","ceil","float32")};return Xs.runKernel(kt,t)}var Uu=pi({ceil_:Vu});function Gu(e,t,n){Me(e),n=n||Ne(t);let r={shape:e,value:t,dtype:n};return Xs.runKernel(an,{},r)}function Hu(e,t,n){let r=oi(e,"x","clipByValue");if(Q(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Gu(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return Xs.runKernel(It,a,s)}var ju=pi({clipByValue_:Hu});function qu(e){return du(e,0)}var Ku=pi({concat1d_:qu});function Xu(e,t){return du(e,t)}var Yu=pi({concat2d_:Xu});function Ju(e,t){return du(e,t)}var Zu=pi({concat3d_:Ju});function Qu(e,t){return du(e,t)}var ep=pi({concat4d_:Qu});function tp(e,t,n,r,a="NHWC",s=[1,1],i){let o=oi(e,"x","conv2d","float32"),l=oi(t,"filter","conv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=iu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),Q(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),au("conv2d",r,i);let h="NHWC"===a?u.shape[3]:u.shape[1];Q(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),Q(tu(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Q(nu(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),Q(nu(n),()=>"Error in conv2D: Strides should be larger than 0.");let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Xs.runKernel(_t,d,c);return p?iu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var np=pi({conv2d_:tp});function rp(e,t,n,r,a="NWC",s=1,i){let o=oi(e,"x","conv1d"),l=oi(t,"filter","conv1d"),u=o,p=!1;2===o.rank&&(p=!0,u=iu(o,[1,o.shape[0],o.shape[1]])),Q(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),Q(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),au("conv1d",r,i),Q(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),Q(tu(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),Q(nu(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),Q(nu(n),()=>"Error in conv1D: Stride should be larger than 0."),Q("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let h=iu(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=iu(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=np(d,h,[1,n],r,"NHWC",[1,s],i);return iu(c,p?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}var ap=pi({conv1d_:rp});function sp(e,t,n,r,a,s="NHWC",i){Q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=iu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Q(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),Q(4===l.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+l.rank),Q(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);let p="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];Q(p===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`),Q(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),au("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Xs.runKernel(Et,d,c);return u?iu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ip=pi({conv2DBackpropInput_:sp});function op(e,t,n,r,a,s){let i=oi(e,"x","conv2dTranspose"),o=oi(t,"filter","conv2dTranspose");return ip(n,i,o,r,a,"NHWC",s)}var lp=pi({conv2dTranspose_:op});function up(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=oi(e,"x","conv3d"),o=oi(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=iu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),Q(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),Q(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),Q(tu(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Q("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),Q(nu(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),Q(nu(n),()=>"Error in conv3D: Strides should be larger than 0.");let p={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},d=Xs.runKernel(At,p,h);return u?iu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var pp=pi({conv3d_:up});function hp(e,t,n,r,a){Q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=iu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];Q(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),Q(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),Q(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),Q(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),Q(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let p={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},d=Xs.runKernel($t,p,h);return o?iu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var dp=pi({conv3DBackpropInput_:hp});function cp(e,t,n,r,a){let s=oi(e,"x","conv3dTranspose"),i=oi(t,"filter","conv3dTranspose");return dp(n,s,i,r,a)}var fp=pi({conv3dTranspose_:cp});function mp(e){let t={x:oi(e,"x","cos","float32")};return Xs.runKernel(Ft,t)}var gp=pi({cos_:mp});function yp(e){let t={x:oi(e,"x","cosh","float32")};return Xs.runKernel(Dt,t)}var bp=pi({cosh_:yp});function xp(e,t=0,n=!1,r=!1){let a={x:oi(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return Xs.runKernel(Mt,a,s)}var wp=pi({cumprod_:xp});function vp(e,t=0,n=!1,r=!1){let a={x:oi(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Xs.runKernel(Ot,a,s)}var kp=pi({cumsum_:vp});function Ip(e,t,n,r=!1){let a=oi(e,"x","denseBincount"),s=oi(t,"weights","denseBincount");Q("int32"===a.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+a.dtype),Q(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),Q(n>=0,()=>`size must be non-negative, but got ${n}.`),Q(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:n,binaryOutput:r};return Xs.runKernel(Pt,i,o)}var Sp=pi({denseBincount_:Ip});function Np(e,t,n="NHWC"){let r=oi(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Q(t>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+t),Q(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),Q(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`),Q(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:n};return Xs.runKernel(zt,o,l)}var Tp=pi({depthToSpace_:Np});function _p(e,t,n,r,a="NHWC",s=[1,1],i){let o=oi(e,"x","depthwiseConv2d","float32"),l=oi(t,"filter","depthwiseConv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=iu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),Q(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let h="NHWC"===a?u.shape[3]:u.shape[1];Q(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),au("depthwiseConv2d",r,i);let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Xs.runKernel(Bt,d,c);return p?iu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Cp=pi({depthwiseConv2d_:_p});function Ep(e){let t={x:oi(e,"x","diag")};return Xs.runKernel(Ut,t)}var Ap=pi({diag_:Ep});function Rp(e,t,n,r,a=[1,1],s="NHWC"){let i=oi(e,"x","dilation2d"),o=oi(t,"filter","dilation2d");Q(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),Q(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),Q("NHWC"===s,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s);let l=i,u=!1;3===i.rank&&(l=iu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),Q(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let p={x:l,filter:o},h={strides:n,pad:r,dilations:a},d=Xs.runKernel(Gt,p,h);return u?iu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var $p=pi({dilation2d_:Rp}),Fp={};function Dp(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Mp(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Op(e,t){let n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)r[n-a-1]=i;else if(1===i)r[n-a-1]=s;else{if(s!==i){let n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}r[n-a-1]=s}}return r}function Lp(e,t){let n=oi(e,"a","equal","string_or_numeric"),r=oi(t,"b","equal","string_or_numeric");[n,r]=Ps(n,r),Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Qt,a)}b(Fp,{assertAndGetBroadcastShape:()=>Op,getBroadcastDims:()=>Dp,getReductionAxes:()=>Mp});var Pp=pi({equal_:Lp});function zp(e,t,n){let r=oi(t,"a","where"),a=oi(n,"b","where"),s=oi(e,"condition","where","bool"),i=Op(Op(s.shape,r.shape),a.shape),o=Wu(s,i),l=Wu(r,i),u=Wu(a,i),p={condition:o,t:l,e:u};return Xs.runKernel(_r,p)}var Bp=pi({where_:zp});function Wp(e){let t={x:oi(e,"x","zerosLike")};return Xs.runKernel(ua,t)}var Vp=pi({zerosLike_:Wp});function Up(e,t){let n=oi(e,"a","div"),r=oi(t,"b","div");[n,r]=Ps(n,r);let a=hl(n,r),s=Vp(a),i=Pp(r,s);return Bp(i,s,a)}var Gp=pi({divNoNan_:Up});function Hp(e,t){let n=oi(e,"t1","dot"),r=oi(t,"t2","dot");Q((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Q(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){let e=iu(n,[1,-1]),t=iu(r,[-1,1]),a=fu(e,t);return iu(a,[])}if(1===n.rank&&2===r.rank){let e=iu(n,[1,-1]),t=iu(r,[r.shape[0],r.shape[1]]),a=fu(e,t);return iu(a,[a.size])}if(2===n.rank&&1===r.rank){let e=iu(r,[-1,1]),t=fu(n,e);return iu(t,[t.size])}{let e=iu(r,[r.shape[0],r.shape[1]]);return fu(n,e)}}var jp=pi({dot_:Hp});function qp(e,...t){let n=t.map((e,t)=>oi(e,"tensors"+t,"einsum")),r={equation:e};return Xs.runKernel(Xt,n,r)}var Kp=pi({einsum_:qp});function Xp(e){let t={x:oi(e,"x","elu","float32")};return Xs.runKernel(Yt,t)}var Yp=pi({elu_:Xp});function Jp(e,t){let n=oi(e,"x","ensureShape","string_or_numeric");if(!ae(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}var Zp=pi({ensureShape_:Jp});function Qp(e){let t=oi(e,"x","erf");Q("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=tl(t,"float32"));let n={x:t};return Xs.runKernel(Zt,n)}var eh=pi({erf_:Qp});function th(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function nh(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function rh(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);let a=t.map(t=>e[t]);return[n,a]}function ah(e,t){let n=t.map(e=>1);return nh(e,n,t)}function sh(e,t,n){Q(th(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function ih(e,t){if(th(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function oh(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function lh(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function uh(e,t=null,n=!1){let r={x:oi(e,"x","max")},a={reductionIndices:t,keepDims:n};return Xs.runKernel(Mn,r,a)}var ph=pi({max_:uh});function hh(e,t=null,n=!1){let r={x:oi(e,"x","min")},a={axis:t,keepDims:n};return Xs.runKernel(Un,r,a)}var dh=pi({min_:hh});function ch(e,t){let n=oi(e,"base","pow"),r=oi(t,"exp","pow");[n,r]=Ps(n,r);let a={a:n,b:r};return Xs.runKernel(sr,a)}var fh=pi({pow_:ch});function mh(e,t){if((ns(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ns(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ci(e,[],[],t)}function gh(e){let t={x:oi(e,"x","sqrt","float32")};return Xs.runKernel(Mr,t)}var yh=pi({sqrt_:gh});function bh(e){let t=oi(e,"x","square"),n={};return Xs.runKernel("Square",{x:t},n)}var xh=pi({square_:bh});function wh(e,t=null,n=!1){let r=oi(e,"x","sum");"bool"===r.dtype&&(r=tl(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Xs.runKernel(Or,a,s)}var vh=pi({sum_:wh});function kh(e,t="euclidean",n=null,r=!1){e=oi(e,"x","norm");let a=Ih(e,t,n),s=a.shape;if(r){let t=ce(n,e.shape);s=ah(a.shape,t)}return iu(a,s)}function Ih(e,t,n=null){if(0===e.rank)return ml(e);if(1!==e.rank&&null===n)return Ih(iu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return vh(ml(e),n);if(t===1/0)return ph(ml(e),n);if(t===-1/0)return dh(ml(e),n);if("euclidean"===t||2===t)return yh(vh(fh(ml(e),mh(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return ph(vh(ml(e),n[0]),n[1]-1);if(t===1/0)return ph(vh(ml(e),n[1]),n[0]);if(t===-1/0)return dh(vh(ml(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return yh(vh(xh(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}var Sh=pi({norm_:kh});function Nh(e,t=null,n=!1){return Sh(e,"euclidean",t,n)}var Th=pi({euclideanNorm_:Nh});function _h(e){let t={x:oi(e,"x","exp")};return Xs.runKernel(en,t)}var Ch=pi({exp_:_h});function Eh(e,t=0){let n=oi(e,"x","expandDims","string_or_numeric");Q(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},a={dim:t};return Xs.runKernel(tn,r,a)}var Ah=pi({expandDims_:Eh});function Rh(e){let t={x:oi(e,"x","expm1")};return Xs.runKernel(nn,t)}var $h=pi({expm1_:Rh});function Fh(e,t){let n=oi(e,"x","tile","string_or_numeric");Q(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},a={reps:t};return Xs.runKernel(ta,r,a)}var Dh=pi({tile_:Fh});function Mh(e,t,n,r="float32"){null==t&&(t=e);let a=Qo([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=iu(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Dh(Ah(i,0),[n[0],1,1]);if(2===n.length)return Dh(Ah(Ah(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Dh(Ah(Ah(Ah(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Oh=pi({eye_:Mh});function Lh(e){let t={x:oi(e,"x","floor","float32")};return Xs.runKernel(on,t)}var Ph=pi({floor_:Lh});function zh(e,t,n=0,r=0){let a=oi(e,"x","gather"),s=oi(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return Xs.runKernel(pn,i,o)}var Bh=pi({gather_:zh});function Wh(e,t){let n=oi(e,"a","greater","string_or_numeric"),r=oi(t,"b","greater","string_or_numeric");[n,r]=Ps(n,r),Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(dn,a)}var Vh=pi({greater_:Wh});function Uh(e,t){let n=oi(e,"a","greaterEqual","string_or_numeric"),r=oi(t,"b","greaterEqual","string_or_numeric");[n,r]=Ps(n,r),Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(cn,a)}var Gh=pi({greaterEqual_:Uh});function Hh(e){let t={input:oi(e,"input","imag")};return Xs.runKernel(gn,t)}var jh=pi({imag_:Hh});function qh(e){let t={x:oi(e,"x","isFinite")};return Xs.runKernel(yn,t)}var Kh=pi({isFinite_:qh});function Xh(e){let t={x:oi(e,"x","isInf")};return Xs.runKernel(bn,t)}var Yh=pi({isInf_:Xh});function Jh(e){let t={x:oi(e,"x","isNaN")};return Xs.runKernel(xn,t)}var Zh=pi({isNaN_:Jh});function Qh(e,t=.2){let n={x:oi(e,"x","leakyRelu")},r={alpha:t};return Xs.runKernel(wn,n,r)}var ed=pi({leakyRelu_:Qh});function td(e,t){let n=oi(e,"a","less","string_or_numeric"),r=oi(t,"b","less","string_or_numeric");[n,r]=Ps(n,r),Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(vn,a)}var nd=pi({less_:td});function rd(e,t){let n=oi(e,"a","lessEqual","string_or_numeric"),r=oi(t,"b","lessEqual","string_or_numeric");[n,r]=Ps(n,r),Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(kn,a)}var ad=pi({lessEqual_:rd});function sd(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return Xs.runKernel(In,{},r)}function id(e,t=5,n=1,r=1,a=.5){let s=oi(e,"x","localResponseNormalization");Q(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),Q(ie(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;3===s.rank&&(o=!0,i=iu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},p=Xs.runKernel($n,l,u);return o?iu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var od=pi({localResponseNormalization_:id});function ld(e){let t={x:oi(e,"x","log","float32")};return Xs.runKernel(Sn,t)}var ud=pi({log_:ld});function pd(e){let t={x:oi(e,"x","log1p")};return Xs.runKernel(Nn,t)}var hd=pi({log1p_:pd});function dd(e){return Q(Te(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=oi(t,"x","tf.grad","string_or_numeric"),a=null!=n?oi(n,"dy","tf.grad"):null;return Xs.tidy(()=>{let{value:t,grads:n}=Xs.gradients(()=>e(r),[r],a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),bd(n),n[0]})}}function cd(e){return Q(Te(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{Q(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=li(t,"args","tf.grads","string_or_numeric"),a=null!=n?oi(n,"dy","tf.grads"):null;return Xs.tidy(()=>{let{value:t,grads:n}=Xs.gradients(()=>e(...r),r,a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),bd(n),n})}}function fd(e){return Q(Te(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{Q(t instanceof Ss,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),Q(null==n||n instanceof Ss,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=Xs.gradients(()=>e(t),[t],n);return bd(r),{grad:r[0],value:a}}}function md(e){return Q(Te(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{Q(Array.isArray(t)&&t.every(e=>e instanceof Ss),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),Q(null==n||n instanceof Ss,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=Xs.gradients(()=>e(...t),t,n);return null!=n&&ee(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),bd(r.grads),r}}function gd(e,t){Q(Te(e),()=>"The f passed in variableGrads(f) must be a function"),Q(null==t||Array.isArray(t)&&t.every(e=>e instanceof Ts),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=null!=t;if(!n){t=[];for(let e in Xs.registeredVariables)t.push(Xs.registeredVariables[e])}let r=n?t.filter(e=>!e.trainable):null,a=t.length;t=t.filter(e=>e.trainable),Q(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=Xs.gradients(e,t,null,s);Q(o.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),Q(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((e,t)=>{null!=o[t]&&(l[e.name]=o[t])}),null!=r&&r.forEach(e=>l[e.name]=null),{value:i,grads:l}}function yd(e){return Xs.customGrad(e)}function bd(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function xd(e){let t={x:oi(e,"x","neg")};return Xs.runKernel(Xn,t)}var wd=pi({neg_:xd});function vd(e){let t={x:oi(e,"x","softplus")};return Xs.runKernel(Dr,t)}var kd=pi({softplus_:vd});function Id(e){let t=oi(e,"x","logSigmoid");return yd(e=>({value:wd(kd(wd(e))),gradFunc:t=>cl(t,gu(wd(e)))}))(t)}var Sd=pi({logSigmoid_:Id});function Nd(e,t){let n=oi(e,"a","sub"),r=oi(t,"b","sub");[n,r]=Ps(n,r);let a={a:n,b:r};return Xs.runKernel(Zr,a)}var Td=pi({sub_:Nd});function _d(e,t=-1){let n=oi(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return yd((e,n)=>{let r=ph(e,t,!0),a=Td(e,r),s=Td(tl(a,"float32"),ud(vh(Ch(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=!0,s=Ch(r);return Td(e,cl(vh(e,t,a),s))}}})(n)}var Cd=pi({logSoftmax_:_d});function Ed(e,t=null,n=!1){let r=oi(e,"x","logSumExp"),a=ce(t,r.shape),s=ph(r,a,!0),i=Td(r,s),o=Ch(i),l=vh(o,a),u=ud(l),p=ol(iu(s,u.shape),u);if(n){let e=ah(p.shape,a);return iu(p,e)}return p}var Ad=pi({logSumExp_:Ed});function Rd(e,t){let n=oi(e,"a","logicalAnd","bool"),r=oi(t,"b","logicalAnd","bool");Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Tn,a)}var $d=pi({logicalAnd_:Rd});function Fd(e){let t={x:oi(e,"x","logicalNot","bool")};return Xs.runKernel(_n,t)}var Dd=pi({logicalNot_:Fd});function Md(e,t){let n=oi(e,"a","logicalOr","bool"),r=oi(t,"b","logicalOr","bool");Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Cn,a)}var Od=pi({logicalOr_:Md});function Ld(e,t){let n=oi(e,"a","logicalXor","bool"),r=oi(t,"b","logicalXor","bool");return Op(n.shape,r.shape),$d(Od(e,t),Dd($d(e,t)))}var Pd=pi({logicalXor_:Ld}),zd=2147483648;function Bd(e,t,n="left"){let r=oi(e,"sortedSequence","searchSorted"),a=oi(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=iu(r,[-1,s]),l=iu(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ne(l.shape)>=zd)throw new Error("values tensor size must less than "+zd);if(o.shape[1]>=zd)throw new Error(`trailing dim_size must less than ${zd} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},p={side:n};return Xs.runKernel(Tr,u,p)}var Wd=pi({searchSorted_:Bd});function Vd(e,t){return Wd(e,t,"left")}function Ud(e,t,n,r,a){let s=oi(e,"x","maxPool"),i=1,o=s,l=!1;3===s.rank&&(l=!0,o=iu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===o.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),Q(tu(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),au("maxPool",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=Xs.runKernel(Ln,u,p);return l?iu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Gd=pi({maxPool_:Ud});function Hd(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=oi(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=iu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),Q("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),au("maxPool3d",r,a);let u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=Xs.runKernel(zn,u,p);return l?iu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var jd=pi({maxPool3d_:Hd});function qd(e,t,n,r,a=!1){let s={x:oi(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Xs.runKernel(Wn,s,i);return{result:o[0],indexes:o[1]}}var Kd=pi({maxPoolWithArgmax_:qd});function Xd(e,t){let n=oi(e,"a","maximum"),r=oi(t,"b","maximum");[n,r]=Ps(n,r),"bool"===n.dtype&&(n=tl(n,"int32"),r=tl(r,"int32")),Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(On,a)}var Yd=pi({maximum_:Xd});function Jd(e,t=null,n=!1){let r={x:oi(e,"x","mean")},a={axis:t,keepDims:n};return Xs.runKernel(Vn,r,a)}var Zd=pi({mean_:Jd});function Qd(e,t="float32"){if(Me(e),"complex64"===t){let t=Qd(e,"float32"),n=Qd(e,"float32");return di(t,n)}let n=Fe(ne(e),t);return Xs.makeTensor(n,e,t)}function ec(e,t="float32"){if(Me(e),"complex64"===t){let t=ec(e,"float32"),n=Qd(e,"float32");return di(t,n)}let n=$e(ne(e),t);return Xs.makeTensor(n,e,t)}function tc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=oi(e,"x","meshgrid",e instanceof Ss?e.dtype:"float32");if(void 0===t)return[r];let a=oi(t,"y","meshgrid",t instanceof Ss?t.dtype:"float32"),s=ne(r.shape),i=ne(a.shape);return"xy"===n?(r=iu(r,[1,-1]),a=iu(a,[-1,1]),[fu(ec([i,1],r.dtype),r),fu(a,ec([1,s],a.dtype))]):(r=iu(r,[-1,1]),a=iu(a,[1,-1]),[fu(r,ec([1,i],r.dtype)),fu(ec([s,1],a.dtype),a)])}function nc(e,t){let n=oi(e,"a","minimum"),r=oi(t,"b","minimum");[n,r]=Ps(n,r),"bool"===n.dtype&&(n=tl(n,"int32"),r=tl(r,"int32")),Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Gn,a)}var rc=pi({minimum_:nc});function ac(e,t,n){Q("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=oi(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Q(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a="reflect"===n?1:0;for(let o=0;o<r.rank;o++)Q(2===t[o].length,()=>"Invalid number of paddings. Must be length of 2 each."),Q(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:n},i={x:r};return Xs.runKernel(Hn,i,s)}var sc=pi({mirrorPad_:ac});function ic(e,t){let n=oi(e,"a","mod"),r=oi(t,"b","mod");[n,r]=Ps(n,r);let a={a:n,b:r};return Xs.runKernel(jn,a)}var oc=pi({mod_:ic});function lc(e,t=null,n=!1){e=oi(e,"x","moments");let r=ce(t,e.shape),a=Zd(e,r,n),s=a.shape;n||(s=ah(a.shape,r));let i=xh(Td(tl(e,"float32"),iu(a,s))),o=Zd(i,r,n);return{mean:a,variance:o}}var uc=pi({moments_:lc});function pc(e,t,n,r){let a=oi(t,"data","multiRNNCell"),s=li(n,"c","multiRNNCell"),i=li(r,"h","multiRNNCell"),o=a,l=[];for(let h=0;h<e.length;h++){let t=e[h](o,s[h],i[h]);l.push(t[0]),l.push(t[1]),o=t[1]}let u=[],p=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),p.push(l[h+1]);return[u,p]}var hc=pi({multiRNNCell_:pc});function dc(e,t,n,r=!1){let a=oi(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();let o={logits:1===i?iu(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Xs.runKernel(qn,o,l);return 1===i?iu(u,[u.size]):u}var cc=pi({multinomial_:dc});function fc(e,t){let n=oi(e,"a","notEqual","string_or_numeric"),r=oi(t,"b","notEqual","string_or_numeric");[n,r]=Ps(n,r),Op(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Yn,a)}var mc=pi({notEqual_:fc});function gc(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);let s={indices:oi(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return Xs.runKernel(tr,s,i)}var yc=pi({oneHot_:gc});function bc(e){let t={x:oi(e,"x","onesLike")};return Xs.runKernel(er,t)}var xc=pi({onesLike_:bc});function wc(e,t){let n=oi(e,"v1","outerProduct"),r=oi(t,"v2","outerProduct");Q(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let a=iu(n,[-1,1]),s=iu(r,[1,-1]);return fu(a,s)}var vc=pi({outerProduct_:wc});function kc(e,t,n=0){let r=oi(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return Xs.runKernel(rr,s,a)}var Ic=pi({pad_:kc});function Sc(e,t,n=0){return Q(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Ic(e,[t],n)}var Nc=pi({pad1d_:Sc});function Tc(e,t,n=0){return Q(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ic(e,t,n)}var _c=pi({pad2d_:Tc});function Cc(e,t,n=0){return Q(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ic(e,t,n)}var Ec=pi({pad3d_:Cc});function Ac(e,t,n=0){return Q(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ic(e,t,n)}var Rc=pi({pad4d_:Ac});function $c(e,t,n){let r=oi(e,"x","spaceToBatchND");Q(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),Q(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),Q(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:r},s={blockShape:t,paddings:n};return Xs.runKernel(Lr,a,s)}var Fc=pi({spaceToBatchND_:$c});function Dc(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=oi(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=iu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(tu(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let p,h=Wl(l.shape,t,s,a,r),d=[h.dilationHeight,h.dilationWidth];p="same"===r?Oc([h.filterHeight,h.filterWidth],d):[[0,0],[0,0]];let c=1===d[0]&&1===d[1],[f,m]=Mc([h.inHeight,h.inWidth],d,p),g=c?r:"valid",y=c?l:Fc(l,d,f),b=("avg"===n?()=>lu(y,t,s,g,i):()=>Gd(y,t,s,g,i))(),x=c?b:Su(b,d,m);return u?iu(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function Mc(e,t,n){let r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]),l=t.map((e,t)=>[r[t],o[t]]),u=t.map((e,t)=>[0,i[t]]);return[l,u]}function Oc(e,t){let n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}var Lc=pi({pool_:Dc});function Pc(e,t){let n=oi(e,"x","prelu"),r=oi(t,"alpha","prelu"),a={x:n,alpha:r};return Xs.runKernel(ir,a)}var zc=pi({prelu_:Pc});function Bc(e,t=null,n=!1){let r=oi(e,"x","prod");"bool"===r.dtype&&(r=tl(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Xs.runKernel(or,a,s)}var Wc=pi({prod_:Bc});function Vc(e,t,n,r){let a=e.map((e,t)=>oi(e,"tensors"+t,"raggedGather","int32")),s=oi(t,"paramsDenseValues","raggedGather"),i=oi(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},l={outputRaggedRank:r},u=Xs.runKernel(lr,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var Uc=pi({raggedGather_:Vc});function Gc(e,t,n){let r=oi(e,"starts","raggedRange"),a=oi(t,"limits","raggedRange",r.dtype),s=oi(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:a,deltas:s},o=Xs.runKernel(ur,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var Hc=pi({raggedRange_:Gc});function jc(e,t,n,r,a){let s=oi(e,"shape","raggedTensorToTensor","int32"),i=oi(t,"values","raggedTensorToTensor"),o=oi(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((e,t)=>oi(e,"tensors"+t,"raggedTensorToTensor","int32")),u={shape:s,values:i,defaultValue:o,rowPartitionTensors:l},p={rowPartitionTypes:a};return Xs.runKernel(pr,u,p)}var qc=pi({raggedTensorToTensor_:jc});function Kc(e,t,n){Me(e);let r=ne(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return Xs.makeTensor(a,e,n)}var Xc=pi({rand_:Kc}),Yc=w($()),Jc={};b(Jc,{TEST_EPSILON_FLOAT16:()=>Qc,createVideoElement:()=>hf,encodeStrings:()=>pf,expectArrayBuffersEqual:()=>uf,expectArraysClose:()=>ef,expectArraysEqual:()=>af,expectNumbersClose:()=>sf,expectPromiseToFail:()=>rf,expectValuesInRange:()=>lf,play:()=>df,testEpsilon:()=>tf});var Zc=.001,Qc=.1;function ef(e,t,n){return null==n&&(n=tf()),nf(e,t,(e,t)=>of(e,t,n))}function tf(){return 32===Xs.backend.floatPrecision()?Zc:Qc}function nf(e,t,n){let r=!0;if((ns(e)||ns(t))&&(r=!1),ns(e)&&ns(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=ai(e),r=ai(t);if(!se(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=ns(e)?e:rs(e),s=ns(t)?t:rs(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let i=0;i<s.length;++i){let e=a[i],t=s[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${a}.\nExpected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function rf(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function af(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ke(e)||ke(e[0])||ke(t)||ke(t[0])?nf(e,n,(e,t)=>e==t):nf(e,t,(e,t)=>of(e,t,0))}function sf(e,t,n){if(null==n&&(n=tf()),!of(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function of(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function lf(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function uf(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function pf(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?pf(n):e[t]=es(n)}return e}function hf(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function df(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var cf=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Yc.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},ff=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Yc.alea(a.toString()),this.randn=new cf(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},mf=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Yc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function gf(e,t,n=1,r="float32",a){if(Me(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);let s=new ff(t,n,r,a),i=Qo(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var yf=pi({randomGamma_:gf});function bf(e,t=0,n=1,r,a){if(Me(e),null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);let s=new cf(t,n,r,!1,a),i=Qo(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var xf=pi({randomNormal_:bf});function wf(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type "+t);return xf(e,0,1,t,n)}var vf=pi({randomStandardNormal_:wf});function kf(e,t=0,n=1,r="float32",a){Me(e);let s=Qo(e,r),i=new mf(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var If=pi({randomUniform_:kf});function Sf(e,t,n,r){return If(e,t,n,"int32",r)}var Nf=pi({randomUniformInt_:Sf});function Tf(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return Xs.runKernel(hr,{},a)}function _f(e){let t={input:oi(e,"input","real")};return Xs.runKernel(dr,t)}var Cf=pi({real_:_f});function Ef(e){let t={x:oi(e,"x","reciprocal")};return Xs.runKernel(cr,t)}var Af=pi({reciprocal_:Ef});function Rf(e){let t={x:oi(e,"x","relu")};return Xs.runKernel(fr,t)}var $f=pi({relu_:Rf});function Ff(e){let t={x:oi(e,"x","relu6")};return Xs.runKernel(wr,t)}var Df=pi({relu6_:Ff});function Mf(e,t){let n={x:oi(e,"x","reverse")},r={dims:t};return Xs.runKernel(vr,n,r)}var Of=pi({reverse_:Mf});function Lf(e){let t=oi(e,"x","reverse");return Q(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Of(t,0)}var Pf=pi({reverse1d_:Lf});function zf(e,t){let n=oi(e,"x","reverse");return Q(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Of(n,t)}var Bf=pi({reverse2d_:zf});function Wf(e,t){let n=oi(e,"x","reverse");return Q(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Of(n,t)}var Vf=pi({reverse3d_:Wf});function Uf(e,t){let n=oi(e,"x","reverse");return Q(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Of(n,t)}var Gf=pi({reverse4d_:Uf});function Hf(e){let t={x:oi(e,"x","round")};return Xs.runKernel(kr,t)}var jf=pi({round_:Hf});function qf(e){let t={x:oi(e,"x","rsqrt","float32")};return Xs.runKernel(Ir,t)}var Kf=pi({rsqrt_:qf});function Xf(e){let t={x:oi(e,"x","selu")};return Xs.runKernel(Cr,t)}var Yf=pi({selu_:Xf});function Jf(e,t,n,r,a,s=[1,1],i="NHWC"){let o=oi(e,"x","separableConv2d"),l=oi(t,"depthwiseFilter","separableConv2d"),u=oi(n,"pointwiseFilter","separableConv2d"),p=o,h=!1;if(3===o.rank&&(h=!0,p=iu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Q(4===p.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),Q(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),Q(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),Q(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),Q(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],c=l.shape[3];Q(u.shape[2]===d*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`);let f=Cp(p,l,r,a,i,s),m=np(f,u,1,"valid",i);return h?iu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Zf=pi({separableConv2d_:Jf});async function Qf(e,t){let n=oi(e,"x","setdiff1d"),r=oi(t,"y","setdiff1d");Q(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),Q(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),Q(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let p=0;p<a.length;p++)i.has(a[p])||o++;let l=new bs([o],n.dtype),u=new bs([o],"int32");for(let p=0,h=0;p<a.length;p++)i.has(a[p])||(l.values[h]=a[p],u.values[h]=p,h++);return[l.toTensor(),u.toTensor()]}var em=Qf;function tm(e){let t={x:oi(e,"x","sign")};return Xs.runKernel($r,t)}var nm=pi({sign_:tm});function rm(e){let t={x:oi(e,"x","sin","float32")};return Xs.runKernel(Ar,t)}var am=pi({sin_:rm});function sm(e){let t={x:oi(e,"x","sinh")};return Xs.runKernel(Rr,t)}var im=pi({sinh_:sm});function om(e,t,n){let r=oi(e,"x","slice1d");return Q(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),bu(r,[t],[n])}var lm=pi({slice1d_:om});function um(e,t,n){let r=oi(e,"x","slice2d");return Q(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),bu(r,t,n)}var pm=pi({slice2d_:um});function hm(e,t,n){let r=oi(e,"x","slice3d");return Q(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),bu(r,t,n)}var dm=pi({slice3d_:hm});function cm(e,t,n){let r=oi(e,"x","slice4d");return Q(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),bu(r,t,n)}var fm=pi({slice4d_:cm});function mm(e,t=-1){let n=oi(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return Xs.runKernel(zr,r,a)}var gm=pi({softmax_:mm});function ym(e){Q("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return Xs.runKernel(rn,t)}var bm=pi({fft_:ym});function xm(e){Q("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return Xs.runKernel(mn,t)}var wm=pi({ifft_:xm});function vm(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=iu(e,[r,n]);t=wm(a)}else{let a=[r,2*(n-1)],s=iu(Cf(e),[r,n]),i=iu(jh(e),[r,n]),o=Of(bu(s,[0,1],[r,n-2]),1),l=cl(Of(bu(i,[0,1],[r,n-2]),1),mh(-1)),u=du([s,o],1),p=du([i,l],1),h=iu(di(u,p),[a[0],a[1]]);t=wm(h)}if(t=Cf(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=iu(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}var km=pi({irfft_:vm});function Im(e,t,n=0){let r={x:oi(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Xs.runKernel(Pr,r,a)}var Sm=pi({split_:Im});function Nm(e,t){Q("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,n=bu(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map(e=>e);a[e.shape.length-1]=t-r,n=du([e,Qd(a)],e.shape.length-1),r=t}else n=e;let s=Vp(n),i=iu(di(n,s),[a,r]),o=bm(i),l=Math.floor(r/2)+1,u=Cf(o),p=jh(o),h=Sm(u,[l,r-l],u.shape.length-1),d=Sm(p,[l,r-l],p.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,iu(di(h[0],d[0]),c)}var Tm=pi({rfft_:Nm});function _m(e,t){let n=oi(e,"a","squaredDifference"),r=oi(t,"b","squaredDifference");[n,r]=Ps(n,r),Op(n.shape,r.shape);let a={a:n,b:r},s={};return Xs.runKernel(Hr,a,s)}var Cm=pi({squaredDifference_:_m});function Em(e,t){let n=oi(e,"x","squeeze","string_or_numeric");return iu(n,fe(n.shape,t).newShape)}var Am=pi({squeeze_:Em});function Rm(e,t=0){let n=li(e,"tensors","stack","string_or_numeric");Q(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&Q(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,a={axis:t};return Xs.runKernel(nr,r,a)}var $m=pi({stack_:Rm});function Fm(e,t=0){let n={x:oi(e,"x","step")},r={alpha:t};return Xs.runKernel(pa,n,r)}var Dm=pi({step_:Fm});function Mm(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:oi(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Xs.runKernel(Kr,u,p)}var Om=pi({stridedSlice_:Mm});function Lm(e){let t={x:oi(e,"x","tan","float32")};return Xs.runKernel(Qr,t)}var Pm=pi({tan_:Lm});function zm(e,t){te(e);let n=ai(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ci(e,null,n,t)}function Bm(e,t,n){if(te(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=ai(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ci(e,t,r,n)}function Wm(e,t,n){if(te(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=ai(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ci(e,t,r,n)}function Vm(e,t,n){if(te(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=ai(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ci(e,t,r,n)}function Um(e,t,n){if(te(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=ai(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ci(e,t,r,n)}function Gm(e,t,n){if(te(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=ai(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,ci(e,t,r,n)}var Hm={};function jm(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function qm(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}jm(n,t,e)}function Km(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let h=a;h<s;++h)i*=n[h];let o=a<1?1:a,l=ne(t.shape)/o,u=[...Ce(n.slice(0,a)),1],p=ne(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:p}}function Xm(e,t,n){let r=oi(e,"tensor","tensorScatterupdate"),a=oi(t,"indices","tensorScatterupdate","int32"),s=oi(n,"updates","tensorScatterupdate");if(qm(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);let i={tensor:r,indices:a,updates:s},o={};return Xs.runKernel(Nr,i,o)}b(Hm,{calculateShapes:()=>Km,validateInput:()=>qm,validateUpdateShape:()=>jm});var Ym=pi({tensorScatterUpdate_:Xm});function Jm(e,t=1,n=!0){let r=oi(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got "+t);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=Xs.runKernel(na,s,i);return{values:o,indices:l}}var Zm=pi({topk_:Jm});function Qm(e,t=0,n=1,r,a){if(Me(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new cf(t,n,r,!0,a),i=Qo(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var eg=pi({truncatedNormal_:Qm});function tg(e,t=0){let n=oi(e,"x","unique","string_or_numeric");Q(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},a={axis:t},[s,i]=Xs.runKernel(sa,r,a);return{values:s,indices:i}}var ng=pi({unique_:tg});function rg(e,t,n){let r=oi(e,"x","unsortedSegmentSum"),a=oi(t,"segmentIds","unsortedSegmentSum","int32");Q(ie(n),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:a},i={numSegments:n};return Xs.runKernel(oa,s,i)}var ag=pi({unsortedSegmentSum_:rg});function sg(e,t=0){let n=oi(e,"x","unstack","string_or_numeric");Q(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},a={axis:t};return Xs.runKernel(ia,r,a)}var ig=pi({unstack_:sg});function og(e,t){return Wd(e,t,"right")}function lg(e,t=!0,n,r){return Xs.makeVariable(e,t,n,r)}function ug(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=Qo(e,"int32"),a=Qo([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let t=r.indexToLoc(n[s]),i=s*e.length;a.values.set(t,i)}return a.toTensor()}async function pg(e){let t=oi(e,"condition","whereAsync","bool"),n=await t.data(),r=ug(t.shape,n);return e!==t&&t.dispose(),r}var hg=pg;async function dg(e,t,n){let r=oi(e,"tensor","boolMask"),a=oi(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Q(i>0,()=>"mask cannot be scalar"),ee(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let u=o.slice(0,s).concat([l],o.slice(s+i)),p=iu(r,u),h=iu(a,[-1]),d=await hg(h),c=Am(d,[1]),f=Bh(p,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),p.dispose(),h.dispose(),d.dispose(),f}var cg=dg;function fg(e,t,n){let r=oi(e,"x","transpose");if(null==t&&(t=r.shape.map((e,t)=>t).reverse()),Q(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(e=>{Q(e>=0&&e<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return"complex64"===r.dtype?Ti(()=>{let e=Cf(r),t=jh(r);return e=Xs.runKernel(aa,{x:e},s),t=Xs.runKernel(aa,{x:t},s),n&&(t=wd(t)),di(e,t)}):Xs.runKernel(aa,a,s)}var mg=pi({transpose_:fg});function gg(e,t,n,r,a=!0){let s=oi(e,"v","movingAverage"),i=oi(t,"x","movingAverage"),o=oi(n,"decay","movingAverage");zs(s,i),Q(se(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=mh(1),u=Td(l,o),p=cl(Td(i,s),u);if(a){Q(null!=r,()=>"When using zeroDebias: true, step is required.");let e=oi(r,"step","movingAverage");p=hl(p,Td(l,fh(o,e)))}return ol(s,p)}var yg=pi({movingAverage_:gg});function bg(e,t,n){Me(n);let r=oi(e,"indices","scatterND","int32"),a=oi(t,"updates","scatterND");qm(a,r,n);let s={indices:r,updates:a},i={shape:n};return Xs.runKernel(Sr,s,i)}var xg=pi({scatterND_:bg});function wg(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function vg(e,t,n,r=0){Me(n);let a=oi(e,"sparseIndices","sparseToDense","int32"),s=oi(t,"sparseValues","sparseToDense","string_or_numeric"),i=oi(r,"defaultValue","sparseToDense",s.dtype);wg(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Xs.runKernel(Gr,o,l)}var kg=pi({sparseToDense_:vg});function Ig(e,t){let n=oi(t,"indices","gatherND","int32"),r={params:oi(e,"x","gatherND","string_or_numeric"),indices:n};return Xs.runKernel(hn,r)}var Sg=pi({gatherND_:Ig});function Ng(e,t){if(null==t)return e.shape.slice();if(se(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}function Tg(e,t,n,r){let a=oi(e,"x","dropout");if(Q("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),Q(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Ss?a.clone():a;let s=Ng(a,n),i=1-t,o=hl(Ph(ol(If(s,0,1,"float32",r),i)),i);return cl(a,o)}var _g=pi({dropout_:Tg});function Cg(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Eg(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return zm(a,"float32")}async function Ag(e,t,n=1){let r=oi(e,"predictions","inTopK"),a=oi(t,"targets","inTopK");Q(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Q(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),ee(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];Q(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],p=me("bool",l);for(let h=0;h<l;h++){let e=h*u,t=i.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),p[h]=0;for(let a=0;a<n;a++)if(r[a].index===o[h]){p[h]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),fi(p,a.shape,"bool")}var Rg=Ag,$g={};function Fg(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=iu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=iu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Q(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),Q(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),Q(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u="NHWC"===s?o.shape[3]:o.shape[1],p="NHWC"===s?l.shape[3]:l.shape[1];Q(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),Q(p===n[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`),au("conv2dDerFilter",a,i);let h={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Xs.runKernel(Ct,h,d)}b($g,{conv2d:()=>Bg,depthwiseConv2d:()=>jg,matMul:()=>Kg});var Dg=pi({conv2DBackpropFilter_:Fg});function Mg(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return cl(e,Dm(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Og(e,t){let n=t,r=Mp(e.shape,t.shape);return r.length>0&&(n=vh(n,r)),iu(n,e.shape)}function Lg(e,t,n,r){if("linear"===t)return e;if("relu"===t)return $f(e);if("elu"===t)return Yp(e);if("relu6"===t)return Df(e);if("prelu"===t)return zc(e,n);if("leakyrelu"===t)return ed(e,r);if("sigmoid"===t)return gu(e);throw new Error(`Unknown fused activation ${t}.`)}var Pg=(e,t)=>!(e>0)||"linear"===t;function zg({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(l=l||"linear",!1===Pg(Xs.state.gradientDepth,l)){Q("NHWC"===a,()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let h=np(e,t,n,r,a,s,i);return null!=o&&(h=ol(h,o)),Lg(h,l,u,p)}let h=oi(e,"x","conv2d","float32"),d=oi(t,"filter","conv2d","float32"),c=h,f=!1;3===h.rank&&(f=!0,c=iu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===c.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),Q(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),au("fused conv2d",r,i);let m="NHWC"===a?c.shape[3]:c.shape[1];Q(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),Q(tu(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let g,y,b=Ul(c.shape,d.shape,n,s,r,i);if(null!=o&&(g=oi(o,"bias","fused conv2d"),[g]=Ps(g,h),"NHWC"===a?Op(b.outShape,g.shape):(Q(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),Q(0===g.shape.length||g.shape[0]===b.outChannels||1===g.shape[0],()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${b.outChannels})`))),null!=u){let e=u.shape;if(Q(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)Q(1===e[0]||e[0]===b.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`);else if(3===e.length)try{Op(e,b.outShape)}catch(k){let t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(t)}y=oi(u,"prelu weights","fused conv2d")}let x=(e,t)=>{Q("NHWC"===a,()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[i,o,u,p]=t,h=Mg(e,u,l);Q(eu(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let d=ip(o.shape,h,i,n,r),c=Dg(o,h,i.shape,n,r),f=[d,c];if(null!=p){let e=Og(p,h);f.push(e)}return f},w={x:c,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?yd((e,t,n)=>{let r=Xs.runKernel(fa,w,v);return n([t,e,r]),f&&(r=iu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(c,d):yd((e,t,n,r)=>{let a=Xs.runKernel(fa,w,v);return r([t,e,a,n]),f&&(a=iu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(c,d,g)}var Bg=pi({fusedConv2d_:zg});function Wg(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=iu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=iu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},p={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Xs.runKernel(Wt,u,p)}var Vg=pi({depthwiseConv2dNativeBackpropFilter_:Wg});function Ug(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=iu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},p={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=Xs.runKernel(Vt,u,p);return l?iu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Gg=pi({depthwiseConv2dNativeBackpropInput_:Ug});function Hg({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(!1===Pg(Xs.state.gradientDepth,l)){let h=Cp(e,t,n,r,a,s,i);return null!=o&&(h=ol(h,o)),Lg(h,l,u,p)}let h=oi(e,"x","depthwiseConv2d","float32"),d=oi(t,"filter","depthwiseConv2d","float32"),c=h,f=!1;3===h.rank&&(f=!0,c=iu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===c.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),Q(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),Q(c.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==s&&(s=[1,1]),Q(tu(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),au("fused depthwiseConv2d",r,i);let m,g,y=Ul(c.shape,d.shape,n,s,r,i,!0);null!=o&&(m=oi(o,"bias","fused conv2d"),[m]=Ps(m,h),Op(y.outShape,m.shape)),null!=u&&(g=oi(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{Q(eu(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[a,o,u,p]=t,h=Mg(e,u,l),d=Gg(o.shape,h,a,n,r,s,i),c=Vg(o,h,a.shape,n,r,s,i);if(null!=p){let e=Og(m,h);return[d,c,e]}return[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?yd((e,t,n)=>{let r=Xs.runKernel(ma,x,w);return n([t,e,r]),f&&(r=iu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(c,d):yd((e,t,n,r)=>{let a=Xs.runKernel(ma,x,w);return r([t,e,a,n]),f&&(a=iu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(c,d,m)}var jg=pi({fusedDepthwiseConv2d_:Hg});function qg({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Pg(Xs.state.gradientDepth,s)){let l=fu(e,t,n,r);return null!=a&&(l=ol(l,a)),Lg(l,s,i,o)}let l=oi(e,"a","fused matMul"),u=oi(t,"b","fused matMul");[l,u]=Ps(l,u);let p=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ne(f),y=ne(m);Q(p===h,()=>`Error in fused matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);let b,x,w=Op(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),v=iu(l,n?[g,p,d]:[g,d,p]),k=iu(u,r?[y,c,h]:[y,h,c]);null!=a&&(b=oi(a,"bias","fused matMul"),[b]=Ps(b,l),Op(w,b.shape)),null!=i&&(x=oi(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,p,h]=t,d=Mg(iu(e,p.shape),p,s);if(n||r?!n&&r?(i=fu(d,u,!1,!1),o=fu(d,l,!0,!1)):n&&!r?(i=fu(u,d,!1,!0),o=fu(l,d,!1,!1)):(i=fu(u,d,!0,!0),o=fu(d,l,!0,!0)):(i=fu(d,u,!1,!0),o=fu(l,d,!0,!1)),null!=a){let e=Og(h,d);return[i,o,e]}return[i,o]},S={a:v,b:k,bias:b,preluActivationWeights:x},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?yd((e,t,n)=>{let r=Xs.runKernel(ca,S,N);return n([e,t,r]),{value:iu(r,w),gradFunc:I}})(v,k):yd((e,t,n,r)=>{let a=Xs.runKernel(ca,S,N);return r([e,t,a,n]),{value:iu(a,w),gradFunc:I}})(v,k,b)}var Kg=pi({fusedMatMul_:qg});function Xg(e){return Eg(e,.54,.46)}var Yg=pi({hammingWindow_:Xg});function Jg(e){return Eg(e,.5,.5)}var Zg=pi({hannWindow_:Jg});function Qg(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(bu(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=du([bu(e,s,t-r),Gu([r],a)]);i.push(o),s+=n}return 0===i.length?Bm([],[0,t]):iu(du(i),[i.length,t])}var ey=pi({frame_:Qg});function ty(e,t,n,r,a=Zg){null==r&&(r=Cg(t));let s=ey(e,t,n),i=cl(s,a(t));return Tm(i,r)}var ny=pi({stft_:ty});function ry(e,t,n,r,a="bilinear",s=0){let i=oi(e,"image","cropAndResize"),o=oi(t,"boxes","cropAndResize","float32"),l=oi(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Q(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),Q(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),Q(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),Q(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),Q(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),Q("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);let p={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return Xs.runKernel(Lt,p,h)}var ay=pi({cropAndResize_:ry});function sy(e){let t=oi(e,"image","flipLeftRight","float32");Q(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return Xs.runKernel(sn,n,{})}var iy=pi({flipLeftRight_:sy});function oy(e){let t=oi(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Q(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),Q(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Dh(t,a)}var ly=pi({grayscaleToRGB_:oy});function uy(e){let t=oi(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];Q(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),Q(3===r,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);let a,s=t.dtype,i=tl(t,"float32"),o=zm([.2989,.587,.114]);switch(t.rank){case 2:a=Kp("ij,j->i",i,o);break;case 3:a=Kp("ijk,k->ij",i,o);break;case 4:a=Kp("ijkl,l->ijk",i,o);break;case 5:a=Kp("ijklm,m->ijkl",i,o);break;case 6:a=Kp("ijklmn,n->ijklm",i,o);break;default:throw new Error("Not a valid tensor rank.")}return a=Ah(a,-1),tl(a,s)}var py=pi({rgbToGrayscale_:uy});function hy(e,t,n=0,r=.5){let a=oi(e,"image","rotateWithOffset","float32");Q(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:n,center:r};return Xs.runKernel(da,s,i)}var dy=pi({rotateWithOffset_:hy});function cy(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),Q(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),Q(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),Q(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),Q(1===t.rank,()=>"scores must be a 1D tensor"),Q(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),Q(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function fy(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=oi(e,"boxes","nonMaxSuppression","float32"),i=oi(t,"scores","nonMaxSuppression","float32"),o=cy(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Xs.runKernel(Jn,{boxes:s,scores:i},l)}var my=pi({nonMaxSuppression_:fy});function gy(e,t,n){let r=yy(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function yy(e,t,n){return xy(e,t,n||by)}function by(e,t){return e>t?1:e<t?-1:0}function xy(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function wy(e,t,n,r,a){return Iy(e,t,n,r,a,0)}function vy(e,t,n,r,a,s){return Iy(e,t,n,r,a,0,!1,s,!0)}function ky(e,t,n,r,a,s){return Iy(e,t,n,r,a,s,!0)}function Iy(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Ty);let p=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let l=h.length-1;l>=i;--l){let n=Sy(e,s,h[l]);if(n>=r){o=!0;break}if(t.score=t.score*Ny(r,p,n),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),d.push(t.score)):t.score>a&&gy(u,t,Ty))}let c=h.length,f=n-c;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function Sy(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(h-u)*(d-p);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,p),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function Ny(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function Ty(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function _y(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=oi(e,"boxes","nonMaxSuppressionAsync"),i=oi(t,"scores","nonMaxSuppressionAsync"),o=cy(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],p=l[1],{selectedIndices:h}=wy(u,p,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),zm(h,"int32")}var Cy=_y;function Ey(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=oi(e,"boxes","nonMaxSuppression"),o=oi(t,"scores","nonMaxSuppression"),l=cy(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},p={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=Xs.runKernel(Qn,u,p);return{selectedIndices:h[0],selectedScores:h[1]}}var Ay=pi({nonMaxSuppressionWithScore_:Ey});async function Ry(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=oi(e,"boxes","nonMaxSuppressionAsync"),o=oi(t,"scores","nonMaxSuppressionAsync"),l=cy(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),p=u[0],h=u[1],{selectedIndices:d,selectedScores:c}=ky(p,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:zm(d,"int32"),selectedScores:zm(c)}}var $y=Ry;function Fy(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=oi(e,"boxes","nonMaxSuppression"),o=oi(t,"scores","nonMaxSuppression"),l=cy(i,o,n,r,a,null),u=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:p,scoreThreshold:h,padToMaxOutputSize:s},f=Xs.runKernel(Zn,d,c);return{selectedIndices:f[0],validOutputs:f[1]}}var Dy=pi({nonMaxSuppressionPadded_:Fy});async function My(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=oi(e,"boxes","nonMaxSuppressionAsync"),o=oi(t,"scores","nonMaxSuppressionAsync"),l=cy(i,o,n,r,a,null),u=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=vy(d,c,u,p,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:zm(f,"int32"),validOutputs:mh(m,"int32")}}var Oy=My;function Ly(e,t,n=!1,r=!1){let a=oi(e,"images","resizeBilinear");Q(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),Q(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),Q(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=iu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Xs.runKernel(br,o,l);return i?iu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Py=pi({resizeBilinear_:Ly});function zy(e,t,n=!1,r=!1){let a=oi(e,"images","resizeNearestNeighbor");Q(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),Q(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),Q("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),Q(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=iu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Xs.runKernel(gr,o,l);return i?iu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var By=pi({resizeNearestNeighbor_:zy});function Wy(e,t="binary",n=!1,r=.5){let a,s,i,o,l=oi(e,"image","threshold"),u=.2989,p=.587,h=.114,d=l.shape[0]*l.shape[1],c=cl(zm([r]),255);if(Q(3===l.rank,()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`),Q(3===l.shape[2]||1===l.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`),Q("int32"===l.dtype||"float32"===l.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`),Q("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===l.shape[2]){[a,s,i]=Sm(l,[1,1,1],-1);let e=cl(a,u),t=cl(s,p),n=cl(i,h);o=ol(ol(e,t),n)}else o=e;if("otsu"===t){let e=Mu(tl(jf(o),"int32"),fi([]),256);c=Vy(e,d)}let f=n?ad(o,c):Vh(o,c);return tl(cl(f,255),"int32")}function Vy(e,t){let n,r,a,s,i,o,l=zm([-1]),u=zm([0]),p=zm([0]);for(let h=0;h<e.size-1;h++){n=bu(e,0,h+1),r=bu(e,h+1),i=hl(vh(n),t),o=hl(vh(r),t);let d=vh(cl(n,Tf(0,n.size)));a=hl(d,vh(n));let c=Gu(r.shape,n.size),f=ol(Tf(0,r.size),c),m=cl(r,f);s=hl(vh(m),vh(r));let g=Td(a,s),y=Td(a,s),b=cl(i,o);p=cl(cl(b,g),y);let x=Vh(p,u);u=Bp(x,p,u),l=Bp(x,zm([h]),l)}return l}var Uy=pi({threshold_:Wy});function Gy(e,t,n="nearest",r="constant",a=0,s){let i=oi(e,"image","transform","float32"),o=oi(t,"transforms","transform","float32");Q(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),Q(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),Q(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Xs.runKernel(ra,l,u)}var Hy=pi({transform_:Gy});function jy(e,t,n){let r=oi(e,"a","bandPart");Q(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let a,s,i=r.shape,[o,l]=r.shape.slice(-2);"number"==typeof t?(Q(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Q(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),a=oi(t<0?o:t,"numLower","bandPart")):(Q("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),a=Bp(nd(t,0),o,rc(t,o))),"number"==typeof n?(Q(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),Q(n<=l,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${l}).`),s=oi(n<0?l:n,"numUpper","bandPart")):(Q("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),s=Bp(nd(n,0),l,rc(n,l)));let u=iu(Tf(0,o,1,"int32"),[-1,1]),p=Tf(0,l,1,"int32"),h=Td(u,p),d=$d(ad(h,a),Gh(h,wd(s))),c=Qd([o,l],r.dtype);return iu($m(ig(iu(r,[-1,o,l])).map(e=>Bp(d,e,c))),i)}var qy=pi({bandPart_:jy});function Ky(e){let t;if(Array.isArray(e)){t=!1,Q(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=e[0].shape[0];for(let t=1;t<e.length;++t)Q(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Sm(e,e.shape[0],0).map(e=>Am(e,[0]));Q(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let a=0;a<e.length;++a)n.push(Xs.tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){let r=cl(vh(cl(n[t],e)),n[t]);e=Td(e,r)}return hl(e,Sh(e,"euclidean"))}));return t?$m(n,0):n}var Xy=pi({gramSchmidt_:Ky});function Yy(e,t=!1){if(Q(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Jy(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=ig(iu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(e=>{let[n,r]=Jy(e,t);a.push(n),s.push(r)});let i=iu($m(a,0),e.shape),o=iu($m(s,0),e.shape);return[i,o]}}function Jy(e,t=!1){return Xs.tidy(()=>{Q(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=Oh(n),s=rl(e),i=Bm([[1]],[1,1]),o=rl(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=Xs.tidy(()=>{let t=bu(s,[e,e],[n-e,1]),l=Sh(t),u=bu(s,[e,e],[1,1]),p=Bp(Vh(u,0),Bm([[-1]]),Bm([[1]])),h=Td(u,cl(p,l)),d=hl(t,h);o=1===d.shape[0]?rl(i):du([i,bu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=wd(hl(fu(p,h),l)),f=bu(s,[e,0],[n-e,r]),m=cl(c,o),g=mg(o);if(0===e)s=Td(f,fu(m,fu(g,f)));else{let t=Td(f,fu(m,fu(g,f)));s=du([bu(s,[0,0],[e,r]),t],0)}let y=mg(m),b=bu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Td(b,fu(fu(b,o),y));else{let t=Td(b,fu(fu(b,o),y));a=du([bu(a,[0,0],[n,e]),t],1)}return[o,s,a]}),_i([t,l,u])}return!t&&n>r&&(a=bu(a,[0,0],[n,r]),s=bu(s,[0,0],[r,r])),[a,s]})}var Zy,Qy=pi({qr_:Yy});function eb(e,t,n=Zy.SUM_BY_NONZERO_WEIGHTS){let r=oi(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=oi(t,"weights","computeWeightedLoss"));let s=null==a?r:cl(r,a);if(n===Zy.NONE)return s;if(n===Zy.SUM)return vh(s);if(n===Zy.MEAN){if(null==a)return Zd(s);{let e=r.size/a.size,t=hl(vh(s),vh(a));return e>1?hl(t,mh(e)):t}}if(n===Zy.SUM_BY_NONZERO_WEIGHTS){if(null==a)return hl(vh(s),mh(r.size));{let e=cl(a,ec(r.shape)),t=tl(vh(mc(e,mh(0))),"float32");return hl(vh(s),t)}}throw Error("Unknown reduction: "+n)}(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Zy||(Zy={}));var tb=pi({computeWeightedLoss_:eb});function nb(e,t,n,r=Zy.SUM_BY_NONZERO_WEIGHTS){let a=oi(e,"labels","absoluteDifference"),s=oi(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=oi(n,"weights","absoluteDifference")),ee(a.shape,s.shape,"Error in absoluteDifference: ");let o=ml(Td(a,s));return tb(o,i,r)}var rb=pi({absoluteDifference_:nb});function ab(e,t,n,r,a=Zy.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"labels","cosineDistance"),i=oi(t,"predictions","cosineDistance"),o=null;null!=r&&(o=oi(r,"weights","cosineDistance")),ee(s.shape,i.shape,"Error in cosineDistance: ");let l=mh(1),u=Td(l,vh(cl(s,i),n,!0));return tb(u,o,a)}var sb=pi({cosineDistance_:ab});function ib(e,t,n,r=Zy.SUM_BY_NONZERO_WEIGHTS){let a=oi(e,"labels","hingeLoss"),s=oi(t,"predictions","hingeLoss"),i=null;null!=n&&(i=oi(n,"weights","hingeLoss")),ee(a.shape,s.shape,"Error in hingeLoss: ");let o=mh(1);a=Td(cl(mh(2),a),o);let l=$f(Td(o,cl(a,s)));return tb(l,i,r)}var ob=pi({hingeLoss_:ib});function lb(e,t,n,r=1,a=Zy.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"labels","huberLoss"),i=oi(t,"predictions","huberLoss"),o=null;null!=n&&(o=oi(n,"weights","huberLoss")),ee(s.shape,i.shape,"Error in huberLoss: ");let l=mh(r),u=ml(Td(i,s)),p=rc(u,l),h=Td(u,p),d=ol(cl(mh(.5),xh(p)),cl(l,h));return tb(d,o,a)}var ub=pi({huberLoss_:lb});function pb(e,t,n,r=1e-7,a=Zy.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"labels","logLoss"),i=oi(t,"predictions","logLoss"),o=null;null!=n&&(o=oi(n,"weights","logLoss")),ee(s.shape,i.shape,"Error in logLoss: ");let l=mh(1),u=mh(r),p=wd(cl(s,ud(ol(i,u)))),h=cl(Td(l,s),ud(ol(Td(l,i),u))),d=Td(p,h);return tb(d,o,a)}var hb=pi({logLoss_:pb});function db(e,t,n,r=Zy.SUM_BY_NONZERO_WEIGHTS){let a=oi(e,"labels","meanSquaredError"),s=oi(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=oi(n,"weights","meanSquaredError")),ee(a.shape,s.shape,"Error in meanSquaredError: ");let o=Cm(a,s);return tb(o,i,r)}var cb=pi({meanSquaredError_:db});function fb(e,t){let n=oi(e,"labels","sigmoidCrossEntropyWithLogits"),r=oi(t,"logits","sigmoidCrossEntropyWithLogits");ee(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=$f(r),s=cl(r,n),i=hd(Ch(wd(ml(r))));return ol(Td(a,s),i)}function mb(e,t,n,r=0,a=Zy.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"multiClassLabels","sigmoidCrossEntropy"),i=oi(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=oi(n,"weights","sigmoidCrossEntropy")),ee(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=mh(r),t=mh(1),n=mh(.5);s=ol(cl(s,Td(t,e)),cl(n,e))}let l=fb(s,i);return tb(l,o,a)}var gb=pi({sigmoidCrossEntropy_:mb});function yb(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return yd((e,t,r)=>{let a=Ad(t,[n],!0),s=Td(tl(t,"float32"),a);r([e,s]);let i=wd(cl(s,e));return{value:vh(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=ah(e.shape,[n]);return[cl(iu(e,s),Td(tl(r,"float32"),Ch(a))),cl(iu(e,s),Td(Ch(a),tl(r,"float32")))]}}})(e,t)}function bb(e,t,n,r=0,a=Zy.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"onehotLabels","softmaxCrossEntropy"),i=oi(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=oi(n,"weights","softmaxCrossEntropy")),ee(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=mh(r),t=mh(1),n=mh(s.shape[1]);s=ol(cl(s,Td(t,e)),hl(e,n))}let l=yb(s,i);return tb(l,o,a)}var xb=pi({softmaxCrossEntropy_:bb});function wb(e,t,n,r){let a=oi(e,"indices","sparseFillEmptyRows","int32"),s=oi(t,"values","sparseFillEmptyRows"),i=oi(n,"denseShape","sparseFillEmptyRows","int32"),o=oi(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+a.shape);if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape "+s.shape);if(1!==i.rank)throw new Error("Dense shape should be Tensor1D but received shape "+i.shape);if(0!==o.rank)throw new Error("Default value should be a scalar but received shape "+o.shape);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=Xs.runKernel(Br,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var vb=pi({sparseFillEmptyRows_:wb});function kb(e,t,n){let r=oi(e,"inputIndices","sparseReshape","int32"),a=oi(t,"inputShape","sparseReshape","int32"),s=oi(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape "+a.shape);if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape "+s.shape);let i={inputIndices:r,inputShape:a,newShape:s},o=Xs.runKernel(Wr,i);return{outputIndices:o[0],outputShape:o[1]}}var Ib=pi({sparseReshape_:kb});function Sb(e,t,n){let r=oi(e,"data","sparseSegmentMean"),a=oi(t,"indices","sparseSegmentMean","int32"),s=oi(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+s.shape);let i={data:r,indices:a,segmentIds:s};return Xs.runKernel(Vr,i)}var Nb=pi({sparseSegmentMean_:Sb});function Tb(e,t,n){let r=oi(e,"data","sparseSegmentSum"),a=oi(t,"indices","sparseSegmentSum","int32"),s=oi(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+s.shape);let i={data:r,indices:a,segmentIds:s};return Xs.runKernel(Ur,i)}var _b=pi({sparseSegmentSum_:Tb});function Cb(e,t,n,r,a,s,i,o){let l=oi(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error("Data must be a vector, saw: "+l.shape);let u=oi(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let p={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=Xs.runKernel(Xr,h,p);return{nGrams:d[0],nGramsSplits:d[1]}}var Eb=pi({stringNGrams_:Cb});function Ab(e,t,n=!0){let r=oi(e,"input","stringSplit","string"),a=oi(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==a.rank)throw new Error("Delimiter should be a scalar but received shape "+a.shape);let s={skipEmpty:n},i={input:r,delimiter:a},o=Xs.runKernel(Yr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var Rb=pi({stringSplit_:Ab});function $b(e,t){let n=oi(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return Xs.runKernel(Jr,a,r)}var Fb=pi({stringToHashBucketFast_:$b});function Db(e,t,n,r=!0){let a=oi(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return Xs.runKernel(qr,{x:a},s)}var Mb=pi({staticRegexReplace_:Db}),Ob={fft:bm,ifft:wm,rfft:Tm,irfft:km},Lb={hammingWindow:Yg,hannWindow:Zg,frame:ey,stft:ny},Pb={flipLeftRight:iy,grayscaleToRGB:ly,resizeNearestNeighbor:By,resizeBilinear:Py,rgbToGrayscale:py,rotateWithOffset:dy,cropAndResize:ay,nonMaxSuppression:my,nonMaxSuppressionAsync:Cy,nonMaxSuppressionWithScore:Ay,nonMaxSuppressionWithScoreAsync:$y,nonMaxSuppressionPadded:Dy,nonMaxSuppressionPaddedAsync:Oy,threshold:Uy,transform:Hy},zb={bandPart:qy,gramSchmidt:Xy,qr:Qy},Bb={absoluteDifference:rb,computeWeightedLoss:tb,cosineDistance:sb,hingeLoss:ob,huberLoss:ub,logLoss:hb,meanSquaredError:cb,sigmoidCrossEntropy:gb,softmaxCrossEntropy:xb},Wb={sparseFillEmptyRows:vb,sparseReshape:Ib,sparseSegmentMean:Nb,sparseSegmentSum:_b},Vb={stringNGrams:Eb,stringSplit:Rb,stringToHashBucketFast:Fb,staticRegexReplace:Mb},Ub={};b(Ub,{Serializable:()=>jb,SerializationMap:()=>qb,getRegisteredName:()=>Xb,registerClass:()=>Kb});var Gb=new Map,Hb=new Map,jb=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},qb=class e{constructor(){this.classNameMap={}}static getMap(){return null==e.instance&&(e.instance=new e),e.instance}static register(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function Kb(e,t,n){Q(null!=e.className,()=>"Class being registered does not have the static className property defined."),Q("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Q(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),"undefined"==typeof t&&(t="Custom"),"undefined"==typeof n&&(n=e.className);let r=n,a=t+">"+r;return qb.register(e),Gb.set(a,e),Hb.set(e,a),e}function Xb(e){return Hb.has(e)?Hb.get(e):e.className}var Yb=class extends jb{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return _i(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return gd(e,t)}dispose(){null!=this.iterations_&&_i(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:mh(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Yb,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Jb=class extends Yb{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Xs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Xs.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:Ti(()=>Vp(r).variable(a))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:Ti(()=>Vp(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Ti(()=>{let e=ol(cl(i,this.rho),cl(xh(s),1-this.rho)),t=cl(hl(yh(ol(o,this.epsilon)),yh(ol(i,this.epsilon))),s),n=ol(cl(o,this.rho),cl(xh(t),1-this.rho));i.assign(e),o.assign(n);let a=ol(cl(t,-this.learningRate),r);r.assign(a)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(_i(this.accumulatedGrads.map(e=>e.variable)),_i(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},Zb=class extends Yb{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Xs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:Ti(()=>Gu(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;Ti(()=>{let e=ol(s,xh(a));s.assign(e);let t=ol(cl(hl(a,yh(ol(e,Xs.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&_i(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Qb=class extends Yb{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ti(()=>{this.accBeta1=mh(t).variable(),this.accBeta2=mh(n).variable()}),null==r&&(this.epsilon=Xs.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Ti(()=>{let n=Td(1,this.accBeta1),r=Td(1,this.accBeta2);t.forEach((t,a)=>{let s=Xs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Ti(()=>Vp(s).variable(i))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:Ti(()=>Vp(s).variable(i))});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,p=ol(cl(l,this.beta1),cl(o,1-this.beta1)),h=ol(cl(u,this.beta2),cl(xh(o),1-this.beta2)),d=hl(p,n),c=hl(h,r);l.assign(p),u.assign(h);let f=ol(cl(hl(d,ol(yh(c),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(cl(this.accBeta1,this.beta1)),this.accBeta2.assign(cl(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&_i(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&_i(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Ti(()=>{this.accBeta1.assign(fh(this.beta1,this.iterations_+1)),this.accBeta2.assign(fh(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},ex=class extends Yb{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ti(()=>{this.iteration=mh(0).variable(),this.accBeta1=mh(t).variable()}),null==r&&(this.epsilon=Xs.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Ti(()=>{let n=Td(1,this.accBeta1),r=hl(-this.learningRate,ol(cl(this.iteration,this.decay),1));t.forEach((t,a)=>{let s=Xs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Vp(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:Vp(s).variable(i)});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,p=ol(cl(l,this.beta1),cl(o,1-this.beta1)),h=cl(u,this.beta2),d=ml(o),c=Yd(h,d);l.assign(p),u.assign(c);let f=ol(cl(hl(r,n),hl(p,ol(c,this.epsilon))),s);s.assign(f)}),this.iteration.assign(ol(this.iteration,1)),this.accBeta1.assign(cl(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&_i(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&_i(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},tx=class extends Yb{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=Xs.registeredVariables[t];Ti(()=>{let e=ol(cl(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ci(mh(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},nx=class extends tx{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=mh(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Xs.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:t+"/momentum",variable:Ti(()=>Vp(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Ti(()=>{let e,t=ol(cl(this.m,a),s);e=this.useNesterov?ol(cl(this.c,ol(s,cl(t,this.m))),r):ol(cl(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&_i(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},rx=class extends Yb{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Xs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Xs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:Ti(()=>Vp(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:Ti(()=>Vp(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:Ti(()=>Vp(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Ti(()=>{let e=ol(cl(i,this.decay),cl(xh(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=ol(cl(t,this.decay),cl(s,1-this.decay)),l=hl(cl(s,this.learningRate),yh(Td(e,ol(xh(a),this.epsilon)))),u=ol(cl(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let p=Td(r,u);r.assign(p)}else{let e=ol(cl(i,this.decay),cl(xh(s),1-this.decay)),t=ol(cl(o,this.momentum),hl(cl(s,this.learningRate),yh(ol(e,this.epsilon))));i.assign(e),o.assign(t);let n=Td(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&_i(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&_i(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&_i(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},ax=[Jb,Zb,Qb,ex,nx,rx,tx];function sx(){for(let e of ax)Kb(e)}var ix={};b(ix,{CompositeArrayBuffer:()=>gi,browserFiles:()=>mx,browserHTTPRequest:()=>Cx,concatenateArrayBuffers:()=>Zi,copyModel:()=>qo,decodeWeights:()=>Wi,decodeWeightsStream:()=>ji,encodeWeights:()=>Bi,fromMemory:()=>$x,fromMemorySync:()=>Fx,getLoadHandlers:()=>fo,getModelArtifactsForJSON:()=>no,getModelArtifactsForJSONSync:()=>to,getModelArtifactsInfoForJSON:()=>ro,getSaveHandlers:()=>co,getWeightSpecs:()=>ao,http:()=>_x,isHTTPScheme:()=>Nx,listModels:()=>Ho,loadWeights:()=>xx,moveModel:()=>Ko,registerLoadRouter:()=>ho,registerSaveRouter:()=>po,removeModel:()=>jo,weightsLoaderFactory:()=>wx,withSaveHandler:()=>Dx,withSaveHandlerSync:()=>Mx});var ox="model",lx=".json",ux=".weights.bin";function px(e){return new Promise(e=>setTimeout(e)).then(e)}var hx=class e{constructor(t){if(!Ge().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(e.URL_SCHEME)&&(t=t.slice(e.URL_SCHEME.length)),(null==t||0===t.length)&&(t=ox),this.modelJsonFileName=t+lx,this.weightDataFileName=t+ux}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=gi.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=eo(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await px(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await px(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ro(e)}}}};hx.URL_SCHEME="downloads://";var dx=class{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error("modelTopology field is missing from file "+this.jsonFile.name));if(null==r.weightsManifest)return void t(new Error("weightManifest field is missing from file "+this.jsonFile.name));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=no(r,e=>this.loadWeights(e));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(a).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(e=>Qi(e.name)),r={};for(let a of e)a.paths.forEach(e=>{let a=Qi(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},cx=e=>Ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hx.URL_SCHEME)?fx(e.slice(hx.URL_SCHEME.length)):null;function fx(e="model"){return new hx(e)}function mx(e){return new dx(e)}function gx(e,t,n,r){i(e),n=null==n?0:n,r=null==r?1:r,o(n,r);let a=0,s=s=>(s.then(s=>{let i=n+ ++a/e.length*(r-n);return t(i),s}),s);function i(e){Q(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}function o(e,t){Q(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),Q(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),Q(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}return Promise.all(e.map(s))}async function yx(e,t){null==t&&(t={});let n=null==t.fetchFunc?Ge().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await gx(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await gx(a,t.onProgress,.5,1)}function bx(e,t){var n;let r,a=null==t.fetchFunc?Ge().platform.fetch:t.fetchFunc,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;s<e.length;){r||(r=(await a(e[s],t.requestInit,{isBinary:!0})).body.getReader());let{done:o,value:l}=await r.read();if(!o)return void n.enqueue(l);s++,r=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,s/e.length)}n.close()}})}async function xx(e,t="",n,r){return wx(e=>yx(e,{requestInit:r}))(e,t,n)}function wx(e){return async(t,n="",r)=>{let a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=mi[l]*ne(e.shape),p=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(p(),i[n]=!0)}):p(),o.push(e.name),n+=u})}),!i.every(e=>e)){let e=r.filter((e,t)=>!i[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});let p=await e(u),h={},d=0;return l.forEach(e=>{let n=t[e].paths.length,r=new gi(p.slice(d,d+n));s[e].forEach(e=>{let t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Wi(t,[e.manifestEntry]);for(let r in n)h[r]=n[r]}),d+=n}),h}}uo.registerSaveRouter(cx);var vx="application/octet-stream",kx="application/json",Ix=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Q("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Ge().platform.fetch,Q(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Q(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=eo(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:kx}),"model.json"),null!=e.weightData){let n=gi.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:vx}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:ro(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(a){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();let e=await this.loadModelJSON();return no(e,e=>this.loadWeights(e))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=ao(e.weightsManifest),r=()=>bx(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:r})}async getWeightUrls(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=Sx(t),a=this.weightPathPrefix||n,s=[],i=[];for(let o of e)for(let e of o.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(a+e+r);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){let t=await this.getWeightUrls(e),n=ao(e),r=await yx(t,this.loadOptions);return[n,r]}};function Sx(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function Nx(e){return null!=e.match(Ix.URL_SCHEME_REGEX)}Ix.URL_SCHEME_REGEX=/^https?:\/\//;var Tx=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Nx(e)):Nx(e),n)return _x(e,t)}return null};function _x(e,t){return new Ix(e,t)}function Cx(e,t){return _x(e,t)}uo.registerSaveRouter(Tx),uo.registerLoadRouter(Tx);var Ex=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},Ax=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},Rx=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function $x(e,t,n,r){let a=arguments;return new Rx(Fx(...a))}function Fx(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Ex(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ex({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ex({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Dx(e){return new Ax(e)}function Mx(e){return new Ax(e)}var Ox={};function Lx(e,t,n){let r=oi(e,"labels","confusionMatrix"),a=oi(t,"predictions","confusionMatrix");Q(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),Q(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),Q(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),Q(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),Q(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);let s=yc(tl(r,"int32"),n),i=yc(tl(a,"int32"),n),o=mg(s),l=fu(o,i);return tl(l,"int32")}b(Ox,{confusionMatrix:()=>Px});var Px=pi({confusionMatrix_:Lx}),zx={};b(zx,{draw:()=>Jx,fromPixels:()=>Zx,fromPixelsAsync:()=>qx,toPixels:()=>Yx});var Bx,Wx=!1;function Vx(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(null!=wa(ha,Xs.backendName)){let n={pixels:e},r={numChannels:t};return Xs.runKernel(ha,n,r)}let l,u,[p,h]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,p,h).data;else if(r||n)l=e.data;else if(s||a||o){if(null==Bx)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Bx=new OffscreenCanvas(1,1).getContext("2d")}else Bx=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Bx.canvas.width=p,Bx.canvas.height=h,Bx.drawImage(e,0,0,p,h),l=Bx.getImageData(0,0,p,h).data}if(4===t)u=new Int32Array(l);else{let e=p*h;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Wm(u,[h,p,t],"int32")}function Ux(e){return null!=e&&e.data instanceof Uint8Array}function Gx(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function Hx(e){return null!=e&&0!==e.width&&0!==e.height}function jx(e){return Gx()&&!(e instanceof ImageBitmap)&&Hx(e)&&!Ux(e)}async function qx(e,t=3){let n=null;if(Ge().getBool("WRAP_TO_IMAGEBITMAP")&&jx(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Vx(n,t)}function Kx(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+t);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function Xx(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function Yx(e,t){let n=oi(e,"img","toPixels");if(!(e instanceof Ss)){let e=n;n=tl(e,"int32"),e.dispose()}Kx(n);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){let e=[0,0,0,255];for(let r=0;r<s;r++){let t=i[u*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}let t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){Wx||null!=wa(qt,Xs.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Wx=!0),t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function Jx(e,t,n){let r=oi(e,"img","draw");if(!(e instanceof Ss)){let e=r;r=tl(e,"int32"),e.dispose()}Kx(r),Xx(null==n?void 0:n.imageOptions);let a={image:r},s={canvas:t,options:n};Xs.runKernel(qt,a,s)}var Zx=pi({fromPixels_:Vx}),Qx={};function ew(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ne(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let h=0;h<a.length-1;++h)i*=a[h];let o=e.shape,l=a.slice();l.pop();let u=1;for(let h=s;h<n;++h)u*=o[h],l.push(o[h]);let p=[...Ce(e.shape).map(e=>e/u),1].slice(0,s);return[l,i,u,p]}b(Qx,{prepareAndValidate:()=>ew});var tw={};b(tw,{assertParamsValid:()=>aw,computeFlatOffset:()=>yw,computeOutShape:()=>iw,getNormalizedAxes:()=>pw,isSliceContinous:()=>gw,maskToAxes:()=>sw,parseSliceParams:()=>bw,sliceInfo:()=>xw,startForAxis:()=>fw,startIndicesWithElidedDims:()=>hw,stopForAxis:()=>mw,stopIndicesWithElidedDims:()=>dw,stridesForAxis:()=>cw,stridesWithElidedDims:()=>ow});var nw=-2,rw=-1;function aw(e,t,n){let r=e.shape.length;Q(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),Q(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)Q(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function sw(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function iw(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function ow(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function lw(e,t,n){return n<=e?n:n-(t-1)}function uw(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function pw(e,t,n,r,a,s,i,o,l){let u=e.length,p=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;p=hw(i,l,u,r,e),h=dw(o,l,u,a,e),d=ow(s,l,u,e)}else for(let c=0;c<u;c++)p[c]=fw(i,r,s,e,c,l),h[c]=mw(o,a,s,e,c,l),d[c]=cw(s,c,l);return{begin:p,end:h,strides:d}}function hw(e,t,n,r,a){let s=[...a],i=uw(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let a=lw(t,n,o),i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function dw(e,t,n,r,a){let s=[...a],i=uw(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let a=lw(t,n,o),i=r[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let o=0;o<s.length;o++){let e=a[o];s[o]<0&&(s[o]+=e),s[o]=q(0,s[o],a[o])}return s}function cw(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function fw(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=q(0,i,l-1),i}function mw(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?q(0,i,l):q(-1,i,l-1),i}function gw(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function yw(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function bw(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{Q(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(Q(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function xw(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)p&&1<<b&o&&h.numAddAxisAfterEllipsis++,1<<b&i&&(p=!0);p||(h.ellipsisMask|=1<<h.dims,h.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};ww(h,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);let t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}let r=[d.beginMask&1<<b,d.endMask&1<<b],a=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];let s=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){let e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=vw(d.begin[b],0,d.strides[b],n,r,a),d.end[b]=vw(d.end[b],1,d.strides[b],n,r,a);let e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;c=c&&e,f=f&&(0===b&&1===d.strides[b]||e)}else c=c&&1===d.strides[b]&&s,f=f&&(0===b&&1===d.strides[b]||s);let i,o=!1;if(d.beginValid&&d.endValid?(i=d.end[b]-d.begin[b],o=!0):t?(i=1,o=!0):s&&n>=0&&(i=d.strides[b]<0?-n:n,o=!0),o){let e;e=0===i||i<0!=d.strides[b]<0?0:Math.trunc(i/d.strides[b])+(i%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){let e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===nw&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>d.finalShapeGatherIndices[t]!==nw),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function ww(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(nw),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(rw),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function vw(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var kw="4.16.0",Iw=class{static sgd(e){return new tx(e)}static momentum(e,t,n=!1){return new nx(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new rx(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Qb(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Jb(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new ex(e,t,n,r,a)}static adagrad(e,t=.1){return new Zb(e,t)}},Sw=Iw,Nw="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Tw(){return new Promise(e=>Nw(()=>e()))}var _w,Cw={};function Ew(e,t){let n=e[0].length;e.forEach((e,t)=>{Q(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),Q(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)Q(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function Aw(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Rw(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function $w(e){let t={FIRST_DIM_SIZE:_w.FIRST_DIM_SIZE,VALUE_ROWIDS:_w.VALUE_ROWIDS,ROW_LENGTHS:_w.ROW_LENGTHS,ROW_SPLITS:_w.ROW_SPLITS,ROW_LIMITS:_w.ROW_LIMITS,ROW_STARTS:_w.ROW_STARTS},n=[];for(let r of e){if(!(r in t))break;n.push(t[r])}return n}function Fw(e){return 0===e.length?0:e[0]===_w.FIRST_DIM_SIZE?e.length-1:e.length}function Dw(e,t){if(null==e||null==t)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}b(Cw,{ERF_A1:()=>jw,ERF_A2:()=>qw,ERF_A3:()=>Kw,ERF_A4:()=>Xw,ERF_A5:()=>Yw,ERF_P:()=>Hw,PARALLELIZE_THRESHOLD:()=>Mw,RowPartitionType:()=>_w,SELU_SCALE:()=>Gw,SELU_SCALEALPHA:()=>Uw,applyActivation:()=>Lg,assertAndGetBroadcastShape:()=>Op,assertAxesAreInnerMostDims:()=>sh,assertParamsConsistent:()=>Ew,assignToTypedArray:()=>nv,axesAreInnerMostDims:()=>th,calculateShapes:()=>Km,checkEinsumDimSizes:()=>hv,checkPadOnDimRoundingMode:()=>au,combineLocations:()=>nh,combineRaggedTensorToTensorShapes:()=>Rw,complexWithEvenIndex:()=>Qw,complexWithOddIndex:()=>ev,computeConv2DInfo:()=>Ul,computeConv3DInfo:()=>Gl,computeDefaultPad:()=>ql,computeDilation2DInfo:()=>Bl,computeOptimalWindowSize:()=>Ow,computeOutAndReduceShapes:()=>rh,computeOutShape:()=>Aw,computePool2DInfo:()=>Wl,computePool3DInfo:()=>Vl,convertConv2DDataFormat:()=>ru,decodeEinsumEquation:()=>uv,eitherStridesOrDilationsAreOne:()=>tu,expandShapeToKeepDim:()=>ah,exponent:()=>av,exponents:()=>rv,fromStringArrayToUint8:()=>Fv,fromUint8ToStringArray:()=>$v,getAxesPermutation:()=>ih,getBroadcastDims:()=>Dp,getComplexWithIndex:()=>tv,getEinsumComputePath:()=>dv,getEinsumPermutation:()=>pv,getFusedBiasGradient:()=>Og,getFusedDyActivation:()=>Mg,getImageCenter:()=>Lw,getInnerMostAxes:()=>lh,getPermuted:()=>zw,getRaggedRank:()=>Fw,getReductionAxes:()=>Mp,getReshaped:()=>Pw,getReshapedPermuted:()=>Bw,getRowPartitionTypesHelper:()=>$w,getSliceBeginCoords:()=>Ww,getSliceSize:()=>Vw,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>gv,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>yv,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>bv,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>vv,getSparseReshapeInputOutputMismatchErrorMessage:()=>Iv,getSparseReshapeInputOutputMultipleErrorMessage:()=>kv,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>xv,getSparseReshapeNegativeOutputDimErrorMessage:()=>wv,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>_v,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Sv,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Nv,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Tv,getUndoAxesPermutation:()=>oh,isIdentityPermutation:()=>cv,log:()=>ya,mergeRealAndImagArrays:()=>Jw,prepareAndValidate:()=>ew,prepareSplitSize:()=>mv,segment_util:()=>Cv,shouldFuse:()=>Pg,slice_util:()=>tw,splitRealAndImagArrays:()=>Zw,stridesOrDilationsArePositive:()=>nu,tupleValuesAreOne:()=>eu,upcastType:()=>Ds,validateDefaultValueShape:()=>Dw,validateInput:()=>qm,validateUpdateShape:()=>jm,warn:()=>ga}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(_w||(_w={}));var Mw=30;function Ow(e){return e<=Mw?e:_e(e,Math.floor(Math.sqrt(e)))}function Lw(e,t,n){let r=n*("number"==typeof e?e:e[0]),a=t*("number"==typeof e?e:e[1]);return[r,a]}function Pw(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function zw(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Bw(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function Ww(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Vw(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Uw=1.7580993408473768,Gw=1.0507009873554805,Hw=.3275911,jw=.254829592,qw=-.284496736,Kw=1.421413741,Xw=-1.453152027,Yw=1.061405429;function Jw(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Zw(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Qw(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function ev(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function tv(e,t){let n=e[2*t],r=e[2*t+1];return{real:n,imag:r}}function nv(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function rv(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function av(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}var sv="->",iv=/->/g,ov=",",lv="...";function uv(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(iv,"").length)/sv.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${sv}").`);let[r,a]=e.split(sv);Q(-1===r.indexOf(lv),()=>`The ellipsis notation ("${lv}") is not supported yet.`);let s=r.split(ov),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<a.length;++d){let e=a[d];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){let e=r[d];-1===o.indexOf(e)&&e!==ov&&o.push(e)}let l=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<s[d].length;++e)l[d].push(o.indexOf(s[d][e]))}let u=o.length,p=a.length,h=[];for(let d=p;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function pv(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function hv(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:Q(r[t[a][n]]===e[n],()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`)}}function dv(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let e=n[i],a=fv(t,e);for(let t of a)-1===s.indexOf(t)&&(r[i].push(t),s.push(t))}return{path:n,steps:r}}function cv(e){return e.every((e,t)=>e===t)}function fv(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function mv(e,t,n=0){let r=[];if("number"==typeof t)Q(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);Q(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(-1!==s){let r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}Q(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function gv(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = "+e}function yv(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function bv(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function xv(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function wv(e,t){return`size ${e} must be non-negative, not ${t}`}function vv(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function kv(e,t){let n=ne(e),r=ne(t);return`Input to reshape is a SparseTensor with ${n}\n  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function Iv(e,t){let n=ne(e),r=ne(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function Sv(){return"segment ids must be >= 0"}function Nv(){return"segment ids are not increasing"}function Tv(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function _v(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Cv={};function Ev(e,t){let n,r=!1;for(e<=Mw?(n=e,r=!0):n=_e(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=_e(e,n+1);return n}function Av(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Rv(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[n],o=[],l=1,u=1,p=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<a;h++)o.push(t.shape[h]);for(let h=n+1;h<s;h++)o.push(e.shape[h]),p*=e.shape[h];return{batchSize:l,sliceSize:p,outerSize:u,dimSize:i,outputShape:o}}function $v(e){try{return e.map(e=>ts(e))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+t)}}function Fv(e){return e.map(e=>es(e))}b(Cv,{collectGatherOpShapeInfo:()=>Rv,computeOutShape:()=>Av,segOpComputeOptimalWindowSize:()=>Ev});var Dv={};b(Dv,{nonMaxSuppressionV3Impl:()=>wy,nonMaxSuppressionV4Impl:()=>vy,nonMaxSuppressionV5Impl:()=>ky,whereImpl:()=>ug}),sx();var Mv={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(e,Dm(tl(n,"float32"),-1))}}},Ov={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=xh(tl(n,"float32")),r=yh(Td(mh(1),t));return wd(hl(e,r))}}}},Lv={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=yh(Td(xh(tl(n,"float32")),1));return hl(e,t)}}}},Pv={kernelName:et,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Op(n.shape,r.shape);return{a:()=>{let t=e,r=Mp(n.shape,a);return r.length>0&&(t=vh(t,r)),iu(t,n.shape)},b:()=>{let t=e,n=Mp(r.shape,a);return n.length>0&&(t=vh(t,n)),iu(t,r.shape)}}}},zv={kernelName:tt,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},Bv={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vp(n)}}},Wv={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vp(n)}}},Vv={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>hl(e,yh(Td(mh(1),xh(tl(n,"float32")))))}}},Uv={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=yh(ol(mh(1),xh(tl(n,"float32"))));return hl(e,t)}}}},Gv={kernelName:pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Op(n.shape,r.shape);return{a:()=>{let t=ol(xh(n),xh(r)),s=cl(e,hl(r,t)),i=Mp(n.shape,a);return i.length>0&&(s=vh(s,i)),iu(s,n.shape)},b:()=>{let t=ol(xh(n),xh(r)),s=wd(cl(e,hl(n,t))),i=Mp(r.shape,a);return i.length>0&&(s=vh(s,i)),iu(s,r.shape)}}}},Hv={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>hl(e,ol(xh(tl(n,"float32")),1))}}},jv={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>hl(e,Td(mh(1),xh(tl(n,"float32"))))}}};function qv(e,t,n,r,a,s){let i=oi(e,"dy","avgPool3dGrad"),o=oi(t,"input","avgPool3dGrad"),l=i,u=o,p=!1;4===o.rank&&(p=!0,l=iu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=iu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Q(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),Q(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),au("avgPool3dGrad",a,s);let h={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=Xs.runKernel(ft,h,d);return p?iu(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Kv=pi({avgPool3dGrad_:qv}),Xv={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Kv(e,r,a,s,i,o)}}};function Yv(e,t,n,r,a){let s=oi(e,"dy","avgPoolGrad"),i=oi(t,"input","avgPoolGrad");Q(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=iu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=iu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),Q(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let p={dy:l,input:o},h={filterSize:n,strides:r,pad:a},d=Xs.runKernel(dt,p,h);return u?iu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Jv=pi({avgPoolGrad_:Yv}),Zv={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Jv(e,r,a,s,i)}}},Qv={kernelName:mt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>fu(e,a,!1,!1),b:()=>fu(e,r,!0,!1)}:s&&!i?{a:()=>fu(a,e,!1,!0),b:()=>fu(r,e,!1,!1)}:{a:()=>fu(a,e,!0,!0),b:()=>fu(e,r,!0,!0)}:{a:()=>fu(e,a,!1,!0),b:()=>fu(r,e,!0,!1)}}},ek={kernelName:gt,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>Fc(e,r,a)}}},tk={kernelName:xt,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(1!==a[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>vh(e,o,!0)}}},nk={kernelName:vt,gradFunc:e=>({x:()=>e.clone()})},rk={kernelName:kt,gradFunc:e=>({x:()=>Vp(e)})},ak={kernelName:It,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Bp($d(Gh(r,a),ad(r,s)),e,Vp(e))}}},sk={kernelName:Nt,inputsToSave:["x"],gradFunc:Mv.gradFunc},ik={kernelName:Tt,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(e=>e.shape),{axis:a}=n,s=ce(a,t[0].shape)[0],i=r.map(e=>e[s]);return Sm(e,i,s).map(e=>()=>e)}},ok={kernelName:_t,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return Q(eu(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>ip(r.shape,e,a,i,o,l),filter:()=>Dg(r,e,a.shape,i,o,l)}}},lk={kernelName:Et,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>np(e,a,s,i,o,1,l),filter:()=>Dg(e,r,a.shape,s,i,o,l)}}};function uk(e,t,n,r,a){let s=e;4===e.rank&&(s=iu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=iu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Q(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),Q(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),Q(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),Q(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),Q(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Xs.runKernel(Rt,o,l)}var pk=pi({conv3DBackpropFilter_:uk}),hk={kernelName:At,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;Q(eu(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>dp(i.shape,e,o,a,s),filter:()=>pk(i,e,o.shape,a,s)}}},dk={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(wd(am(tl(n,"float32"))),e)}}},ck={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(im(tl(n,"float32")),e)}}},fk={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=ih([a],r.rank),n=kp(e,a,s,!i);return null!=t&&(n=mg(n,t)),n}}}},mk={kernelName:Bt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Q(eu(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return Q(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),Q(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),Q(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),Q(tu(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),au("depthwiseConv2d",s,i),{x:()=>Gg(l.shape,e,u,a,s,o,i),filter:()=>Vg(l,e,u.shape,a,s,o,i)}}},gk={kernelName:Gt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Xs.runKernel(Ht,s,n),filter:()=>Xs.runKernel(jt,i,n)}}},yk={kernelName:Yt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>Xs.runKernel(Jt,r)}}},bk={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=cl(Ch(wd(xh(n))),2/Math.sqrt(Math.PI));return{x:()=>cl(e,r)}}},xk={kernelName:en,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(e,n)}}},wk={kernelName:tn,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>iu(e,n.shape)}}},vk={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(e,Ch(n))}}},kk={kernelName:on,gradFunc:e=>({x:()=>Vp(e)})},Ik={kernelName:ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Op(n.shape,r.shape);return{a:()=>{let t=hl(e,tl(r,"float32")),s=Mp(n.shape,a);return s.length>0?iu(vh(t,s),n.shape):t},b:()=>{let t=cl(e,tl(n,"float32")),s=Mp(r.shape,a);s.length>0&&(t=iu(vh(t,s),r.shape));let i=xh(r);return wd(hl(t,tl(i,"float32")))}}}},Sk={kernelName:un,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?mh(1):o,u=Mp(s.shape,a.shape),p=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)p.push(a.shape[e]);p.push(1)}let h=Td(a,s),d=cl(e,l),c=Kf(ol(i,mh(r))),f=cl(cl(cl(c,c),c),mh(-.5));return{x:()=>1===s.rank?iu(cl(cl(e,Dh(iu(c,[1,1,1,s.shape[0]]),p)),l),a.shape):iu(cl(cl(e,c),l),a.shape),mean:()=>{let e=cl(cl(c,mh(-1)),d);return 1===s.rank&&(e=vh(e,u)),iu(e,s.shape)},variance:()=>{let e=cl(cl(f,h),d);return 1===s.rank&&(e=vh(e,u)),iu(e,s.shape)},scale:()=>{let t=cl(h,c),n=cl(e,t);return 1===s.rank&&(n=vh(n,u)),iu(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=vh(t,u)),iu(t,s.shape)}}}},Nk={kernelName:pn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s,batchDims:i}=n,o=ce(s,r.shape)[0],l=(e,t,n)=>()=>{let r=e.shape,a=t.size,i=r.slice(0,o),l=i.length,u=r.slice(s,r.length).slice(1),p=u.length,h=Tk(0,l),d=Tk(l+1,l+1+p),c=_k([i,[a],u]),f=iu(n,c),m=iu(t,[a]),g=_k([[l],h,d]),y=mg(f,g),b=ag(y,m,e.shape[o]),x=oh(g);return b=mg(b,x),b};if(1===i){let t=r.shape[0],n=r.split(t,0);return{x:()=>$m(n.map((t,n)=>l(t,a.slice(n,1),e.slice(n,1))())).reshape(r.shape),indices:()=>a}}return{x:l(r,a,e),indices:()=>a}}};function Tk(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function _k(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Ck={kernelName:cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Vp(n),b:()=>Vp(r)}}},Ek={kernelName:fn,gradFunc:e=>({x:()=>tl(e,"float32")})},Ak={kernelName:yn,gradFunc:e=>({x:()=>Vp(e)})},Rk={kernelName:bn,gradFunc:e=>({x:()=>Vp(e)})},$k={kernelName:xn,gradFunc:e=>({x:()=>Vp(e)})},Fk={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=Vh(r,0);return{x:()=>Bp(s,e,cl(e,a))}}},Dk={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>hl(e,ol(n,1))}}},Mk={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>hl(e,tl(n,"float32"))}}},Ok={kernelName:An,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=Ch(r);return Td(e,cl(vh(e,a,!0),t))}}}};function Lk(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return Xs.runKernel(Fn,o,l)}var Pk=pi({localResponseNormalizationBackprop_:Lk}),zk={kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>Pk(r,a,e,s,i,o,l)}}};function Bk(e,t,n,r){return t.rank<n.rank&&(t=iu(t,ah(t.shape,r))),e.rank<n.rank&&(e=iu(e,ah(e.shape,r))),{x:()=>cl(e,tl(Pp(n,t),e.dtype))}}var Wk={kernelName:Mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=ce(a,s.shape),l=Bk(e,i,s,o);return{x:()=>l.x()}}},Vk={kernelName:On,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>cl(e,tl(Gh(n,r),"float32")),b:()=>cl(e,tl(nd(n,r),"float32"))}}};function Uk(e,t,n,r,a,s,i){let o=oi(e,"dy","maxPool3dGrad"),l=oi(t,"input","maxPool3dGrad"),u=oi(n,"output","maxPool3dGrad"),p=o,h=l,d=u,c=!1;4===l.rank&&(c=!0,p=iu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=iu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=iu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Q(5===p.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),Q(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),Q(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),au("maxPool3dGrad",s,i);let f={dy:p,input:h,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Xs.runKernel(Bn,f,m);return c?iu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var Gk=pi({maxPool3dGrad_:Uk}),Hk={kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Gk(e,r,a,s,i,o,l)}}};function jk(e,t,n,r,a,s,i){let o=oi(e,"dy","maxPoolGrad"),l=oi(t,"input","maxPoolGrad"),u=oi(n,"output","maxPoolGrad");Q(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),Q(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),Q(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),au("maxPoolGrad",s,i);let p={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Xs.runKernel(Pn,p,h)}var qk=pi({maxPoolGrad_:jk}),Kk={kernelName:Ln,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>qk(e,r,a,s,i,o)}}},Xk={kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=ce(a,r.shape),i=rh(r.shape,s)[1],o=ne(i);return{x:()=>{let t=r.shape.slice();s.forEach(e=>{t[e]=1});let n=iu(e,t);return hl(cl(n,ec(r.shape,"float32")),o)}}}},Yk={kernelName:Un,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=ce(a,s.shape),l=Bk(e,i,s,o);return{x:()=>l.x()}}},Jk={kernelName:Gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>cl(e,tl(ad(n,r),"float32")),b:()=>cl(e,tl(Vh(n,r),"float32"))}}},Zk={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>bu(e,s,r.shape)}}},Qk={kernelName:jn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Op(n.shape,r.shape);return{a:()=>{let t=Mp(n.shape,a);return t.length>0?iu(vh(e,t),n.shape):e},b:()=>{let t=cl(e,wd(Ph(hl(n,r)))),s=Mp(r.shape,a);return s.length>0?iu(vh(t,s),r.shape):t}}}},eI={kernelName:Kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Op(n.shape,r.shape);return{a:()=>{let t=cl(e,tl(r,"float32")),s=Mp(n.shape,a);return s.length>0?iu(vh(t,s),n.shape):t},b:()=>{let t=cl(e,tl(n,"float32")),s=Mp(r.shape,a);return s.length>0?iu(vh(t,s),r.shape):t}}}},tI={kernelName:Xn,gradFunc:e=>({x:()=>wd(e)})},nI={kernelName:tr,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Qd(n.shape,"float32")}}},rI={kernelName:er,gradFunc:e=>({x:()=>Vp(e)})},aI={kernelName:nr,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return ig(e,r).map(e=>()=>e)}},sI={kernelName:rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>bu(e,s,r.shape)}}},iI={kernelName:sr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Op(s.shape,i.shape);return{a:()=>{let t=tl(i,"float32"),n=cl(e,cl(t,fh(s,Td(t,mh(1))))),r=Mp(s.shape,o);return r.length>0&&(n=vh(n,r)),iu(n,s.shape)},b:()=>{let t=Vh(s,0),n=Bp(t,ud(s),Vp(s)),r=cl(e,cl(a,n)),l=Mp(i.shape,o);return l.length>0&&(r=vh(r,l)),iu(r,i.shape)}}}},oI={kernelName:ir,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=Vh(n,0);return{x:()=>Bp(a,e,cl(e,r)),alpha:()=>{let t=Bp(a,Vp(e),cl(e,n)),s=Mp(r.shape,e.shape);return s.length>0&&(t=vh(t,s)),iu(t,r.shape)}}}};function lI(e,t,n){let r=e.shape.slice();r[n]=1;let a=iu(t,r),s=wp(e,n,!0,!1),i=wp(e,n,!0,!0),o=cl(s,i);return cl(a,o)}function uI(e,t,n){let r=e.shape.length,a=r-n.length,s=Cw.getAxesPermutation(n,r),i=e;null!=s&&(i=mg(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce((e,t)=>e*t,1);o.push(l);let u=i.reshape(o),p=lI(u,t,a);if(p=p.reshape(i.shape),null!=s){let e=Cw.getUndoAxesPermutation(s);p=mg(p,e)}return p}var pI={kernelName:or,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map((e,t)=>t):"number"==typeof a?[a]:a,{x:()=>uI(r,e,s)}}},hI={kernelName:Kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Op(n.shape,r.shape);return{a:()=>{let t=hl(e,tl(r,"float32")),s=Mp(n.shape,a);return s.length>0?iu(vh(t,s),n.shape):t},b:()=>{let t=cl(e,tl(n,"float32")),s=Mp(r.shape,a);s.length>0&&(t=iu(vh(t,s),r.shape));let i=xh(r);return wd(hl(t,tl(i,"float32")))}}}},dI={kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>hl(e,wd(xh(n)))}}},cI={kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=cl(ad(n,6),Dm(n));return{x:()=>cl(e,tl(r,"float32"))}}},fI={kernelName:fr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(e,tl(Dm(n),"float32"))}}},mI={kernelName:mr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iu(e,n.shape)}}},gI={kernelName:br,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Xs.runKernel(xr,a,n)}}},yI={kernelName:gr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Xs.runKernel(yr,a,n)}}},bI={kernelName:vr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=ce(r,e.shape);return{x:()=>Of(e,a)}}},xI={kernelName:kr,gradFunc:e=>({x:()=>Vp(e)})},wI={kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>wd(hl(e,cl(fh(n,1.5),2)))}}},vI={kernelName:_r,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>tl(Vp(n),"float32"),t:()=>cl(e,tl(n,e.dtype)),e:()=>cl(e,tl(Dd(n),e.dtype))}}},kI={kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Vh(n,mh(0)),r=mh(Uw),a=mh(Gw),s=cl(e,a),i=cl(cl(e,r),Ch(tl(n,"float32")));return Bp(t,s,i)}}}},II={kernelName:Fr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(e,cl(n,Td(mh(1),n)))}}},SI={kernelName:$r,gradFunc:e=>({x:()=>Vp(e)})},NI={kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(gp(tl(n,"float32")),e)}}},TI={kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(bp(tl(n,"float32")),e)}}},_I={kernelName:Er,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=bw(r,a,s),u=[];for(let p=0;p<e.rank;p++)u.push([o[p],i[p]-o[p]-l[p]]);return{x:()=>Ic(e,u)}}},CI={kernelName:zr,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=!0,i=cl(e,r);return{logits:()=>Td(i,cl(vh(i,[a],s),r))}}},EI={kernelName:Dr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(e,gu(n))}}},AI={kernelName:Lr,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>Su(e,r,a)}}},RI={kernelName:Pr,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>du(e,r)}}},$I={kernelName:Mr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>hl(e,cl(yh(tl(n,"float32")),2))}}},FI={kernelName:jr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(e,cl(tl(n,"float32"),2))}}},DI={kernelName:Hr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=mh(2);return{a:()=>cl(e,cl(a,Td(n,r))),b:()=>cl(e,cl(a,Td(r,n)))}}},MI={kernelName:pa,gradFunc:e=>({x:()=>Vp(e)})},OI={kernelName:Zr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Op(n.shape,r.shape);return{a:()=>{let t=e,r=Mp(n.shape,a);return r.length>0&&(t=vh(t,r)),iu(t,n.shape)},b:()=>{let t=e,n=Mp(r.shape,a);return n.length>0&&(t=vh(t,n)),iu(wd(t),r.shape)}}}},LI={kernelName:Or,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;ce(s,r.shape).forEach(e=>{a[e]=1});let i=iu(e,a),o=cl(i,ec(r.shape,"float32"));return{x:()=>o}}},PI={kernelName:Qr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>hl(e,xh(gp(n)))}}},zI={kernelName:ea,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>cl(Td(mh(1),xh(n)),e)}}},BI={kernelName:ta,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Vp(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=ol(t,bu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=ol(t,bu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=ol(t,bu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=ol(t,bu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},WI={kernelName:aa,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=oh(a);return{x:()=>mg(e,s)}}},VI={kernelName:ia,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>$m(e,a)}}},UI={kernelName:oa,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>GI(e,n)}}};function GI(e,t){let n=Yd(t,Vp(t)),r=Bh(e,n),a=Gh(t,mh(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=Ah(a,o+1);a=$d(a,ec(r.shape,"bool"));let i=Vp(r);return Bp(a,r,i)}var HI={kernelName:ua,gradFunc:e=>({x:()=>Vp(e)})},jI=[Mv,Ov,Lv,Pv,zv,Bv,Wv,Vv,Uv,Gv,Hv,jv,Xv,Zv,Qv,ek,tk,nk,rk,ak,sk,ik,lk,ok,hk,dk,ck,fk,mk,gk,hI,yk,bk,xk,wk,vk,Ik,kk,Sk,Nk,Ck,Ek,Ak,Rk,$k,Fk,Dk,Mk,Ok,zk,Wk,Wk,Vk,Hk,Kk,Xk,Yk,Jk,Zk,Qk,eI,tI,nI,rI,aI,sI,sI,iI,oI,pI,dI,cI,fI,mI,gI,yI,bI,xI,wI,vI,kI,II,SI,NI,TI,_I,CI,EI,AI,AI,RI,RI,$I,DI,FI,MI,OI,LI,PI,zI,BI,WI,VI,UI,HI];for(let t of jI)Sa(t);Ns().prototype.abs=function(){return this.throwIfDisposed(),ml(this)},Ns().prototype.acos=function(){return this.throwIfDisposed(),yl(this)},Ns().prototype.acosh=function(){return this.throwIfDisposed(),xl(this)},Ns().prototype.add=function(e){return this.throwIfDisposed(),ol(this,e)},Ns().prototype.all=function(e,t){return this.throwIfDisposed(),Il(this,e,t)},Ns().prototype.any=function(e,t){return this.throwIfDisposed(),Nl(this,e,t)},Ns().prototype.argMax=function(e){return this.throwIfDisposed(),_l(this,e)},Ns().prototype.argMin=function(e){return this.throwIfDisposed(),El(this,e)},Ns().prototype.asScalar=function(){return this.throwIfDisposed(),Q(1===this.size,()=>"The array must have only 1 element."),iu(this,[])},Ns().prototype.asType=function(e){return this.throwIfDisposed(),tl(this,e)},Ns().prototype.as1D=function(){return this.throwIfDisposed(),iu(this,[this.size])},Ns().prototype.as2D=function(e,t){return this.throwIfDisposed(),iu(this,[e,t])},Ns().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),iu(this,[e,t,n])},Ns().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),iu(this,[e,t,n,r])},Ns().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),iu(this,[e,t,n,r,a])},Ns().prototype.asin=function(){return this.throwIfDisposed(),Rl(this)},Ns().prototype.asinh=function(){return this.throwIfDisposed(),Fl(this)},Ns().prototype.atan=function(){return this.throwIfDisposed(),Ml(this)},Ns().prototype.atan2=function(e){return this.throwIfDisposed(),Ll(this,e)},Ns().prototype.atanh=function(){return this.throwIfDisposed(),zl(this)},Ns().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),lu(this,e,t,n,r)},Ns().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Su(this,e,t)},Ns().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),_u(this,e,t,n,r,a)},Ns().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Wu(this,e)},Ns().prototype.cast=function(e){return this.throwIfDisposed(),tl(this,e)},Ns().prototype.ceil=function(){return this.throwIfDisposed(),Uu(this)},Ns().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ju(this,e,t)},Ns().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ss&&(e=[e]),du([this,...e],t)},Ns().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ap(this,e,t,n,r,a,s)},Ns().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),lp(this,e,t,n,r,a)},Ns().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),np(this,e,t,n,r,a,s)},Ns().prototype.cos=function(){return this.throwIfDisposed(),gp(this)},Ns().prototype.cosh=function(){return this.throwIfDisposed(),bp(this)},Ns().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),wp(this,e,t,n)},Ns().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),kp(this,e,t,n)},Ns().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Tp(this,e,t)},Ns().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Cp(this,e,t,n,r,a,s)},Ns().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),$p(this,e,t,n,r,a)},Ns().prototype.divNoNan=function(e){return this.throwIfDisposed(),Gp(this,e)},Ns().prototype.div=function(e){return this.throwIfDisposed(),hl(this,e)},Ns().prototype.dot=function(e){return this.throwIfDisposed(),jp(this,e)},Ns().prototype.elu=function(){return this.throwIfDisposed(),Yp(this)},Ns().prototype.equal=function(e){return this.throwIfDisposed(),Pp(this,e)},Ns().prototype.erf=function(){return this.throwIfDisposed(),eh(this)},Ns().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Th(this,e,t)},Ns().prototype.exp=function(){return this.throwIfDisposed(),Ch(this)},Ns().prototype.expandDims=function(e){return this.throwIfDisposed(),Ah(this,e)},Ns().prototype.expm1=function(){return this.throwIfDisposed(),$h(this)},Ns().prototype.fft=function(){return this.throwIfDisposed(),bm(this)},Ns().prototype.flatten=function(){return this.throwIfDisposed(),iu(this,[this.size])},Ns().prototype.floor=function(){return this.throwIfDisposed(),Ph(this)},Ns().prototype.floorDiv=function(e){return this.throwIfDisposed(),ul(this,e)},Ns().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Bh(this,e,t,n)},Ns().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Gh(this,e)},Ns().prototype.greater=function(e){return this.throwIfDisposed(),Vh(this,e)},Ns().prototype.ifft=function(){return this.throwIfDisposed(),wm(this)},Ns().prototype.irfft=function(){return this.throwIfDisposed(),km(this)},Ns().prototype.isFinite=function(){return this.throwIfDisposed(),Kh(this)},Ns().prototype.isInf=function(){return this.throwIfDisposed(),Yh(this)},Ns().prototype.isNaN=function(){return this.throwIfDisposed(),Zh(this)},Ns().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ed(this,e)},Ns().prototype.lessEqual=function(e){return this.throwIfDisposed(),ad(this,e)},Ns().prototype.less=function(e){return this.throwIfDisposed(),nd(this,e)},Ns().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),od(this,e,t,n,r)},Ns().prototype.logSigmoid=function(){return this.throwIfDisposed(),Sd(this)},Ns().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Cd(this,e)},Ns().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ad(this,e,t)},Ns().prototype.log=function(){return this.throwIfDisposed(),ud(this)},Ns().prototype.log1p=function(){return this.throwIfDisposed(),hd(this)},Ns().prototype.logicalAnd=function(e){return this.throwIfDisposed(),$d(this,e)},Ns().prototype.logicalNot=function(){return this.throwIfDisposed(),Dd(this)},Ns().prototype.logicalOr=function(e){return this.throwIfDisposed(),Od(this,e)},Ns().prototype.logicalXor=function(e){return this.throwIfDisposed(),Pd(this,e)},Ns().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),fu(this,e,t,n)},Ns().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Gd(this,e,t,n,r)},Ns().prototype.max=function(e,t){return this.throwIfDisposed(),ph(this,e,t)},Ns().prototype.maximum=function(e){return this.throwIfDisposed(),Yd(this,e)},Ns().prototype.mean=function(e,t){return this.throwIfDisposed(),Zd(this,e,t)},Ns().prototype.min=function(e,t){return this.throwIfDisposed(),dh(this,e,t)},Ns().prototype.minimum=function(e){return this.throwIfDisposed(),rc(this,e)},Ns().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),sc(this,e,t)},Ns().prototype.mod=function(e){return this.throwIfDisposed(),oc(this,e)},Ns().prototype.mul=function(e){return this.throwIfDisposed(),cl(this,e)},Ns().prototype.neg=function(){return this.throwIfDisposed(),wd(this)},Ns().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Sh(this,e,t,n)},Ns().prototype.notEqual=function(e){return this.throwIfDisposed(),mc(this,e)},Ns().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),yc(this,e,t,n)},Ns().prototype.onesLike=function(){return this.throwIfDisposed(),xc(this)},Ns().prototype.pad=function(e,t){return this.throwIfDisposed(),Ic(this,e,t)},Ns().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Lc(this,e,t,n,r,a,s)},Ns().prototype.pow=function(e){return this.throwIfDisposed(),fh(this,e)},Ns().prototype.prelu=function(e){return this.throwIfDisposed(),zc(this,e)},Ns().prototype.prod=function(e,t){return this.throwIfDisposed(),Wc(this,e,t)},Ns().prototype.reciprocal=function(){return this.throwIfDisposed(),Af(this)},Ns().prototype.relu=function(){return this.throwIfDisposed(),$f(this)},Ns().prototype.relu6=function(){return this.throwIfDisposed(),Df(this)},Ns().prototype.reshapeAs=function(e){return this.throwIfDisposed(),iu(this,e.shape)},Ns().prototype.reshape=function(e){return this.throwIfDisposed(),iu(this,e)},Ns().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Py(this,e,t,n)},Ns().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),By(this,e,t,n)},Ns().prototype.reverse=function(e){return this.throwIfDisposed(),Of(this,e)},Ns().prototype.rfft=function(){return this.throwIfDisposed(),Tm(this)},Ns().prototype.round=function(){return this.throwIfDisposed(),jf(this)},Ns().prototype.rsqrt=function(){return this.throwIfDisposed(),Kf(this)},Ns().prototype.selu=function(){return this.throwIfDisposed(),Yf(this)},Ns().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Zf(this,e,t,n,r,a,s)},Ns().prototype.sigmoid=function(){return this.throwIfDisposed(),gu(this)},Ns().prototype.sign=function(){return this.throwIfDisposed(),nm(this)},Ns().prototype.sin=function(){return this.throwIfDisposed(),am(this)},Ns().prototype.sinh=function(){return this.throwIfDisposed(),im(this)},Ns().prototype.slice=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},Ns().prototype.softmax=function(e){return this.throwIfDisposed(),gm(this,e)},Ns().prototype.softplus=function(){return this.throwIfDisposed(),kd(this)},Ns().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Fc(this,e,t)},Ns().prototype.split=function(e,t){return this.throwIfDisposed(),Sm(this,e,t)},Ns().prototype.sqrt=function(){return this.throwIfDisposed(),yh(this)},Ns().prototype.square=function(){return this.throwIfDisposed(),xh(this)},Ns().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Cm(this,e)},Ns().prototype.squeeze=function(e){return this.throwIfDisposed(),Am(this,e)},Ns().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ss?[this,e]:[this,...e];return $m(n,t)},Ns().prototype.step=function(e){return this.throwIfDisposed(),Dm(this,e)},Ns().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Om(this,e,t,n,r,a,s,i,o)},Ns().prototype.sub=function(e){return this.throwIfDisposed(),Td(this,e)},Ns().prototype.sum=function(e,t){return this.throwIfDisposed(),vh(this,e,t)},Ns().prototype.tan=function(){return this.throwIfDisposed(),Pm(this)},Ns().prototype.tanh=function(){return this.throwIfDisposed(),wu(this)},Ns().prototype.tile=function(e){return this.throwIfDisposed(),Dh(this,e)},Ns().prototype.toBool=function(){return this.throwIfDisposed(),tl(this,"bool")},Ns().prototype.toFloat=function(){return this.throwIfDisposed(),tl(this,"float32")},Ns().prototype.toInt=function(){return this.throwIfDisposed(),tl(this,"int32")},Ns().prototype.topk=function(e,t){return this.throwIfDisposed(),Zm(this,e,t)},Ns().prototype.transpose=function(e){return this.throwIfDisposed(),mg(this,e)},Ns().prototype.unique=function(e){return this.throwIfDisposed(),ng(this,e)},Ns().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ag(this,e,t)},Ns().prototype.unstack=function(e){return this.throwIfDisposed(),ig(this,e)},Ns().prototype.where=function(e,t){return this.throwIfDisposed(),Bp(e,this,t)},Ns().prototype.zerosLike=function(){return this.throwIfDisposed(),Vp(this)};var qI=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},KI=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},XI=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},YI=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},JI=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},ZI=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function QI(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function eS(e,t){if(!e)throw new JI(t)}function tS(e,t){let n=0;for(let r of e)r===t&&n++;return n}function nS(e){return 1===e.length?e[0]:e}function rS(e){return Array.isArray(e)?e:[e]}function aS(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function sS(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var iS={};function oS(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function lS(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>lS(e));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?lS(t):e[n]=t.value)}}}function uS(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in iS)a=iS[s];else if(a=t[s],null==a)throw new XI(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new XI(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in iS?[i,o]=iS.className:l in t&&([i,o]=t[l]),null==i)throw new XI(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let n of Object.keys(iS))e[n]=iS[n];for(let a of Object.keys(n))e[a]=n[a];let t=s.config;t.customObjects=e;let r=Object.assign({},iS);for(let a of Object.keys(n))iS[a]=n[a];lS(s.config);let l=o(i,s.config,n,a);return iS=Object.assign({},r),l}{let e=Object.assign({},iS);for(let r of Object.keys(n))iS[r]=n[r];let t=new i(s.config);return iS=Object.assign({},e),t}}}function pS(e,t){return e<t?-1:e>t?1:0}function hS(e,t){return-1*pS(e,t)}function dS(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function cS(e){if(null==e)throw new XI("Invalid value in obj: "+JSON.stringify(e));for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function fS(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new XI(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function mS(e,t,n=0,r=1/0){return eS(n>=0),eS(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function gS(e,t){Array.isArray(e)?(Ea.assert(e.length>0,()=>t+" is unexpectedly an empty array."),e.forEach((e,n)=>gS(e,`element ${n+1} of ${t}`))):Ea.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${yS(e)}.`)}function yS(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>yS(e)).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}function bS(e,t,n){let r,a=null!=n?n():Ea.now();return(...s)=>{let i=null!=n?n():Ea.now();return i-a<t||(a=i,r=e(...s)),r}}function xS(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var wS=0;function vS(){return wS++}var kS={};function IS(e=""){return e in kS||(kS[e]=0),kS[e]+=1,e+kS[e].toString()}var SS=["channelsFirst","channelsLast"],NS=["nearest","bilinear"],TS=["valid","same","causal"],_S=["max","avg"],CS=["sum","mul","concat","ave"],ES=new Map;function AS(e){fS(SS,"DataFormat",e)}function RS(e){fS(NS,"InterpolationFormat",e)}function $S(e){fS(TS,"PaddingMode",e)}function FS(e){fS(_S,"PoolMode",e)}var DS=[],MS="/";function OS(e,t){DS.push(e);try{let e=t();return DS.pop(),e}catch(n){throw DS.pop(),n}}function LS(){return 0===DS.length?"":DS.join(MS)+MS}function PS(e){if(!VS(e))throw new Error("Not a valid tensor name: '"+e+"'");return LS()+e}function zS(e){if(!VS(e))throw new Error("Not a valid tensor name: '"+e+"'");ES.has(e)||ES.set(e,0);let t=ES.get(e);if(ES.set(e,ES.get(e)+1),t>0){let n=`${e}_${t}`;return ES.set(n,1),n}return e}var BS,WS=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function VS(e){return!!e.match(WS)}function US(e){return e===parseInt(e.toString(),10)}function GS(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function HS(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function jS(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function qS(e,t){if(t<e)throw new XI(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function KS(){return null==BS&&(BS=Li().epsilon()),BS}function XS(){return"channelsLast"}function YS(e,t){return tl(e,t)}function JS(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),iu(e,n)}function ZS(e,t){return Ti(()=>{if(2!==e.shape.length)throw new XI(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=JS(e,1);return iN(n,[1,t,1])})}function QS(e){let t=[GS(e.shape)];return iu(e,t)}function eN(e){if(e.rank<=1)throw new XI(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],GS(e.shape,1)];return iu(e,t)}function tN(e,t,n){return Ti(()=>{switch(e.rank){case 1:return lm(e,t,n);case 2:return pm(e,[t,0],[n,e.shape[1]]);case 3:return dm(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return fm(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return bu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return bu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new XI("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}})}function nN(e,t,n){return Ti(()=>{switch(e.rank){case 1:return lm(e,t,n);case 2:return pm(e,[0,t],[e.shape[0],n]);case 3:return dm(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return fm(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new XI("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function rN(e,t,n,r){return Ti(()=>{switch(e.rank){case 1:return lm(e,t,n);case 2:switch(r){case 1:return tN(e,t,n);case 2:return nN(e,t,n);default:throw new XI("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return tN(e,t,n);case 2:return dm(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return nN(e,t,n);default:throw new XI("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return tN(e,t,n);case 2:return fm(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return fm(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return nN(e,t,n);default:throw new XI("The axis is not within the rank of the tensor "+r)}default:throw new XI("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function aN(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),du(e,t)}function sN(e,t){switch(e.rank){case 1:return Ku([e,t]);case 2:return Yu([e,t],0);case 3:return Zu([e,t],0);case 4:return ep([e,t],0);default:throw new XI("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function iN(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new XI(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Dh(e,t)}function oN(e,t=0,n=1,r,a){return xf(e,t,n,r,a)}function lN(e,t,n,r){if(e.rank<2||t.rank<2)throw new YI(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let n=e.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(n!==r)throw new YI(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return $g.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?hN(e.rank,r,XS()):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=iu(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],p=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=iu(mg(t,p),[l,-1]);let h=[...a,...u];return iu($g.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?hN(e.rank,r,XS()):null,activation:n}),h)}}function uN(e,t,n){return Ti(()=>(t=Array.isArray(t)?zm(t,"int32"):tl(t,"int32"),Bh(e,t,n)))}function pN(e){return cl(e,e)}function hN(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new XI(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?iu(t,[1,r[0],1,1,1]):iu(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?iu(t,[1,1,1,1,r[0]]):iu(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?iu(t,[1,r[0],1,1]):iu(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?iu(t,[1,1,1,r[0]]):iu(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?iu(t,[1,r[0],1]):iu(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?iu(t,[1,1,r[0]]):iu(t,[1].concat(r))}else if(e<3)return t;throw new XI("Unsupported input rank by biasAdd: "+t.rank)}function dN(e,t,n){return Ti(()=>(null==n&&(n=XS()),AS(n),ol(e,hN(e.rank,t,n))))}function cN(e,t=1){if(1!==t)throw new YI(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Yp(e)}function fN(e){return Ti(()=>hl(e,ol(ml(e),1)))}function mN(e,t,n,r){return Ti(()=>_g(e,t,n,r))}function gN(e){return Ti(()=>{let t=ol(.5,cl(.2,e));return ju(t,0,1)})}function yN(e,t,n=!1){return n?e():t()}var bN=["fanIn","fanOut","fanAvg"],xN=["normal","uniform","truncatedNormal"];function wN(e){fS(bN,"FanMode",e)}function vN(e){fS(xN,"Distribution",e)}var kN=class extends Ub.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},IN=class extends kN{apply(e,t){return Qd(e,t)}};IN.className="Zeros",Ub.registerClass(IN);var SN=class extends kN{apply(e,t){return ec(e,t)}};SN.className="Ones",Ub.registerClass(SN);var NN=class extends kN{constructor(e){if(super(),"object"!=typeof e)throw new XI("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new XI("config must have value set but got "+e);this.value=e.value}apply(e,t){return Ti(()=>cl(mh(this.value),ec(e,t)))}getConfig(){return{value:this.value}}};NN.className="Constant",Ub.registerClass(NN);var TN=class extends kN{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return If(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};TN.className="RandomUniform",Ub.registerClass(TN);var _N=class extends kN{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new YI(`randomNormal does not support dType ${t}.`);return oN(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};_N.className="RandomNormal",Ub.registerClass(_N);var CN=class extends kN{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new YI(`truncatedNormal does not support dType ${t}.`);return eg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};CN.className="TruncatedNormal",Ub.registerClass(CN);var EN=class extends kN{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Ti(()=>{if(2!==e.length||e[0]!==e[1])throw new XI("Identity matrix initializer can only be used for 2D square matrices.");return cl(this.gain,Oh(e[0]))})}getConfig(){return{gain:this.gain}}};function AN(e,t="channelsLast"){let n,r;if(AS(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=GS(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=GS(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=GS(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}EN.className="Identity",Ub.registerClass(EN);var RN=class extends kN{constructor(e){if(super(),e.scale<0)throw new XI("scale must be a positive float. Got: "+e.scale);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,wN(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,vN(this.distribution),this.seed=e.seed}apply(e,t){let n=AN(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new YI(`${this.getClassName()} does not support dType ${t}.`);return eg(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return If(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};RN.className="VarianceScaling",Ub.registerClass(RN);var $N=class extends RN{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return RN.className}};$N.className="GlorotUniform",Ub.registerClass($N);var FN=class extends RN{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return RN.className}};FN.className="GlorotNormal",Ub.registerClass(FN);var DN=class extends RN{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return RN.className}};DN.className="HeNormal",Ub.registerClass(DN);var MN=class extends RN{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return RN.className}};MN.className="HeUniform",Ub.registerClass(MN);var ON=class extends RN{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return RN.className}};ON.className="LeCunNormal",Ub.registerClass(ON);var LN=class extends RN{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return RN.className}};LN.className="LeCunUniform",Ub.registerClass(LN);var PN=class extends kN{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Ti(()=>{if(e.length<2)throw new YI("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);t=t;let n=Ea.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=[Math.max(r,n),Math.min(r,n)],i=oN(s,0,1,t,this.seed),o=zb.qr(i,!1),l=o[0],u=o[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return l=cl(l,u.sign()),n<r&&(l=l.transpose()),cl(mh(this.gain),l.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}};PN.className="Orthogonal",Ub.registerClass(PN);var zN={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function BN(e,t={}){return uS(e,Ub.SerializationMap.getMap().classNameMap,t,"initializer")}function WN(e){return oS(e)}function VN(e){if("string"==typeof e){let t=e in zN?zN[e]:e;if("GlorotNormal"===t)return new FN;if("GlorotUniform"===t)return new $N;if("HeNormal"===t)return new DN;if("HeUniform"===t)return new MN;if("LeCunNormal"===t)return new ON;if("LeCunUniform"===t)return new LN;{let e={};return e.className=t,e.config={},BN(e)}}return e instanceof kN?e:BN(e)}function UN(e){return Array.isArray(e)&&Array.isArray(e[0])}function GN(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function HN(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new XI("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function jN(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e=e,e[0];throw new XI("Expected exactly 1 Shape; got "+e.length)}return e}function qN(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}var KN="Variable",XN=class{constructor(e,t="float32",n=KN,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=vS(),n=null==n?KN:n,this.originalName=PS(n),this.name=zS(this.originalName),this.trainable_=r,this.constraint=a,this.val=lg(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),YN(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function YN(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function JN(e){return e.map(e=>e.read())}function ZN(e){e.forEach(e=>{e[0].write(e[1])})}var QN=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},eT=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=vS(),null!=s&&(this.originalName=PS(s),this.name=zS(this.originalName)),this.rank=t.length}},tT=0,nT=class{constructor(e,t){this.callArgs=t,this.id=tT++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},rT=0,aT=class extends Ub.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=rT++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=aS(e)+"_"+IS(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new KI(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new XI(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return nS(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return nS(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qI(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new qI(`Layer ${this.name} is not connected, no input to return.`);return nS(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new qI(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new qI(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return nS(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=rS(e);if(null==this.inputSpec||0===this.inputSpec.length)return;let n=rS(this.inputSpec);if(t.length!==n.length)throw new XI(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){let e=t[r],a=n[r];if(null==a)continue;let s=e.rank;if(null!=a.ndim&&s!==a.ndim)throw new XI(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new XI(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new XI(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&e.dtype!==a.dtype)throw new XI(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${e.dtype}.`);if(a.axes){let t=e.shape;for(let e in a.axes){let n=Number(e),s=a.axes[e],i=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(i))throw new XI(`Input ${r} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){let n=a.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new XI(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=rS(e),r=lT(e),a=uT(e);if(r===a)throw new XI("Arguments to apply() must be all SymbolicTensors or all Tensors");return OS(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of rS(e))t.push(n.shape);this.build(nS(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);let a=rS(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=nS(s),null!=this.activityRegularizer)throw new YI("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=sT(e),a=this.computeOutputShape(r),s=iT(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((n,r)=>new eT(s,n,this,rS(e),t,this.name,r)):new eT(s,a,this,rS(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new YI("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new qI(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new qI(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new KI(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return qN(this.weights)}build(e){this.built=!0}getWeights(e=!1){return JN(e?this.trainableWeights:this.weights)}setWeights(e){Ti(()=>{let t=this.weights;if(t.length!==e.length)throw new XI(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=JN(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!Ea.arraysEqual(s.shape,o.shape))throw new XI(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ZN(n)})}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new XI(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():VN("zeros"));let l=r.apply(t,n),u=new XN(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=rS(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let r=this.computeMask(e,n),a=rS(t),s=rS(r);if(a.length!==s.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let i=0;i<a.length;i++)a[i].kerasMask=s[i]}addInboundNode(e,t,n,r,a,s,i=null){let o=rS(e);t=rS(t),n=rS(n),r=rS(r),a=GN(a),s=GN(s);let l=[],u=[],p=[];for(let h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),p.push(h.tensorIndex);new nT({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:p,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function sT(e){e=rS(e);let t=[];for(let n of e)t.push(n.shape);return nS(t)}function iT(e){return"float32"}function oT(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=e.inputTensors[n],a=e.inboundLayers[n],s=e.nodeIndices[n],i=oT(r,a,s);for(let e of i)-1===t.indexOf(e)&&t.push(e)}return t}}}function lT(e){let t=!0;for(let n of rS(e))if(!(n instanceof eT)){t=!1;break}return t}function uT(e){let t=!0;for(let n of rS(e))if(n instanceof eT){t=!1;break}return t}var pT=class extends aT{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:IS("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new XI("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new XI("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new XI("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new eT(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new nT({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new XI("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function hT(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new XI("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new pT({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function dT(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return tl(t,e.dtype)}catch(n){throw new XI(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}pT.className="InputLayer",Ub.registerClass(pT);var cT=class e{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof e)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(let e of t)this.add(e.key,e.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new XI(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=dT(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof eT){if(null==this.id2Value[e.id])throw new XI("Nonexistent key: "+e.name);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new XI("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof eT){if(null==this.id2Value[e.id])throw new XI("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new XI("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&_i(this.id2Mask)}},fT=new ZI,mT=new ZI;function gT(e){null!=fT&&fT.setMaxEntries(e),null!=mT&&mT.setMaxEntries(e)}function yT(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(e=>e.name),l=[],u=t.names();for(let f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let p,h=o.join(",")+"|"+t.names().sort().join(","),d=fT.get(h);if(null==d){let e=bT(i,t);d=e.sorted,p=e.recipientCounts,fT.put(h,d),mT.put(h,p)}p={},a||Object.assign(p,mT.get(h));let c=new cT(t);for(let f=0;f<d.length;++f){if(null!=r){let e=Si().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let e=d[f],s=e.sourceLayer;if(s instanceof pT)continue;let i=[],u=[],h=[],m=!1;for(let n of e.inputs){let e=c.getValue(n),r=c.getMask(n);i.push(e),u.push(r),null!=r&&(m=!0),a||(p[n.name]--,0===p[n.name]&&!t.hasKey(n)&&-1===o.indexOf(n.name)&&!e.isDisposed&&!0!==n.sourceLayer.stateful&&h.push(e))}m&&(n=n||{},n.mask=u[0]);let g=rS(s.apply(i,n)),y=null;s.supportsMasking&&(y=s.computeMask(i,u));let b=vT(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){c.hasKey(x[t])||c.add(x[t],g[t],Array.isArray(y)?y[0]:y);let e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}a||_i(h)}return c.disposeMasks(),s?l:l[0]}function bT(e,t){Ea.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){let a=wT(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=wT(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let t in i)null==r[t]&&(r[t]=new Set),i[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:xT(r)}}function xT(e){let t={};for(let n in e)t[n]=e[n].size;return t}function wT(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function vT(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var kT=Ge();kT.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,gT);var IT={};function ST(e,t){return Ti(()=>yh(vh(cl(e,e),t,!0)))}b(IT,{maxNorm:()=>DT,minMaxNorm:()=>LT,nonNeg:()=>OT,unitNorm:()=>MT});var NT=class extends Ub.Serializable{getConfig(){return{}}},TT=class extends NT{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ti(()=>{let t=ST(e,this.axis),n=ju(t,0,this.maxValue);return cl(e,hl(n,ol(KS(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};TT.className="MaxNorm",Ub.registerClass(TT);var _T=class extends NT{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ti(()=>hl(e,ol(KS(),ST(e,this.axis))))}getConfig(){return{axis:this.axis}}};_T.className="UnitNorm",Ub.registerClass(_T);var CT=class extends NT{apply(e){return $f(e)}};CT.className="NonNeg",Ub.registerClass(CT);var ET=class extends NT{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ti(()=>{let t=ST(e,this.axis),n=ol(cl(this.rate,ju(t,this.minValue,this.maxValue)),cl(1-this.rate,t));return cl(e,hl(n,ol(KS(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};ET.className="MinMaxNorm",Ub.registerClass(ET);var AT={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function RT(e){return oS(e)}function $T(e,t={}){return uS(e,Ub.SerializationMap.getMap().classNameMap,t,"constraint")}function FT(e){if(null==e)return null;if("string"==typeof e){let t={className:e in AT?AT[e]:e,config:{}};return $T(t)}return e instanceof NT?e:$T(e)}function DT(e){return new TT(e)}function MT(e){return new _T(e)}function OT(){return new CT}function LT(e){return new ET(e)}var PT={};function zT(){return new IN}function BT(){return new SN}function WT(e){return new NN(e)}function VT(e){return new TN(e)}function UT(e){return new _N(e)}function GT(e){return new CN(e)}function HT(e){return new EN(e)}function jT(e){return new RN(e)}function qT(e){return new $N(e)}function KT(e){return new FN(e)}function XT(e){return new DN(e)}function YT(e){return new MN(e)}function JT(e){return new ON(e)}function ZT(e){return new LN(e)}function QT(e){return new PN(e)}b(PT,{constant:()=>WT,glorotNormal:()=>KT,glorotUniform:()=>qT,heNormal:()=>XT,heUniform:()=>YT,identity:()=>HT,leCunNormal:()=>JT,leCunUniform:()=>ZT,ones:()=>BT,orthogonal:()=>QT,randomNormal:()=>UT,randomUniform:()=>VT,truncatedNormal:()=>GT,varianceScaling:()=>jT,zeros:()=>zT});var e_,t_={};async function n_(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];_i(r)}}function r_(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}b(t_,{Layer:()=>aT,RNN:()=>tA,RNNCell:()=>nA,activation:()=>GR,add:()=>QR,alphaDropout:()=>U$,average:()=>e$,averagePooling1d:()=>u$,averagePooling2d:()=>d$,averagePooling3d:()=>m$,avgPool1d:()=>p$,avgPool2d:()=>c$,avgPool3d:()=>g$,avgPooling1d:()=>h$,avgPooling2d:()=>f$,avgPooling3d:()=>y$,batchNormalization:()=>i$,bidirectional:()=>M$,categoryEncoding:()=>K$,centerCrop:()=>j$,concatenate:()=>t$,conv1d:()=>MR,conv2d:()=>OR,conv2dTranspose:()=>LR,conv3d:()=>PR,conv3dTranspose:()=>zR,convLstm2d:()=>R$,convLstm2dCell:()=>$$,cropping2D:()=>WR,dense:()=>HR,depthwiseConv2d:()=>UR,dot:()=>s$,dropout:()=>jR,elu:()=>ER,embedding:()=>ZR,flatten:()=>KR,gaussianDropout:()=>V$,gaussianNoise:()=>W$,globalAveragePooling1d:()=>b$,globalAveragePooling2d:()=>x$,globalMaxPool1d:()=>L$,globalMaxPool2d:()=>P$,globalMaxPooling1d:()=>w$,globalMaxPooling2d:()=>v$,gru:()=>N$,gruCell:()=>T$,input:()=>JC,inputLayer:()=>CR,layerNormalization:()=>o$,leakyReLU:()=>RR,lstm:()=>_$,lstmCell:()=>C$,masking:()=>G$,maxPool1d:()=>z$,maxPool2d:()=>B$,maxPooling1d:()=>k$,maxPooling2d:()=>I$,maxPooling3d:()=>S$,maximum:()=>n$,minimum:()=>r$,multiply:()=>a$,permute:()=>JR,prelu:()=>$R,randomWidth:()=>X$,reLU:()=>AR,repeatVector:()=>XR,rescaling:()=>H$,reshape:()=>YR,resizing:()=>q$,rnn:()=>F$,separableConv2d:()=>BR,simpleRNN:()=>E$,simpleRNNCell:()=>A$,softmax:()=>FR,spatialDropout1d:()=>qR,stackedRNNCells:()=>D$,thresholdedReLU:()=>DR,timeDistributed:()=>O$,upSampling2d:()=>VR,zeroPadding2d:()=>l$}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(e_||(e_={}));var a_=125,s_=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},i_=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},o_=class extends s_{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let r in t){let e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;let a=Ti(()=>ol(this.totals[r],cl(e,n)));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Ti(()=>{let e=cl(hl(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Ci(t[n])}))}},l_=class extends s_{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let r=this.history[a];for(let s=0;s<r.length;++s)if("number"!=typeof r[s]){let i=r[s];e.push(i.data()),t.push(a),n.push(s)}}let r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},u_=class extends s_{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Tw,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=a_),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ea.isNumber(this.yieldEvery)&&(this.maybeWait=bS(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await n_(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await n_(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await n_(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await n_(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await n_(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ea.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await n_(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await n_(e),await this.trainEnd(e))}};function p_(e,t){return null==e&&(e={}),e instanceof s_?[e]:Array.isArray(e)&&e[0]instanceof s_?e:rS(e).map(e=>new u_(e,t))}var h_=class e{constructor(){}static registerCallbackConstructor(t,n){Ea.assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),e.checkForDuplicate(n),null==e.constructors[t]&&(e.constructors[t]=[]),e.constructors[t].push(n)}static checkForDuplicate(t){for(let n in e.constructors)e.constructors[+n].forEach(e=>{if(e===t)throw new XI("Duplicate callback constructor.")})}static clear(){e.constructors={}}static createCallbacks(t){let n=[];for(let r in e.constructors){let a=+r;t>=a&&n.push(...e.constructors[a])}return n.map(e=>new e)}};function d_(e,t,n,r,a,s,i,o,l){let u=new l_,p=[new o_,...h_.createCallbacks(t)];null!=e&&p.push(...e),p.push(u);let h=new i_(p);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function c_(e,t={},n=!1){return uS(e,Ub.SerializationMap.getMap().classNameMap,t,"layer",n)}function f_(e,t){return Ti(()=>{"float32"!==e.dtype&&(e=tl(e,"float32"));let n=vh(pN(e),t,!0),r=Gu(n.shape,KS()),a=yh(Yd(n,r));return hl(e,a)})}function m_(e,t){return Ti(()=>Zd(pN(Td(t,e)),-1))}function g_(e,t){return Ti(()=>Zd(ml(Td(t,e)),-1))}function y_(e,t){return Ti(()=>{let n=Td(e,t),r=ju(ml(e),KS(),Number.MAX_VALUE),a=ml(hl(n,r));return cl(100,Zd(a,-1))})}function b_(e,t){return Ti(()=>{let n=ju(t,KS(),Number.MAX_VALUE),r=ud(ol(1,n)),a=ju(e,KS(),Number.MAX_VALUE),s=ud(ol(1,a));return Zd(pN(Td(r,s)),-1)})}function x_(e,t){return Ti(()=>{let n=Yd(0,Td(1,cl(e,t)));return Zd(pN(n),-1)})}function w_(e,t){return Ti(()=>{let n=Yd(0,Td(1,cl(e,t)));return Zd(n,-1)})}function v_(e,t){return Ti(()=>{let n=vh(cl(e,t),-1),r=ph(cl(Td(1,e),t),-1);return Yd(0,ol(1,Td(r,n)))})}function k_(e,t){return Ti(()=>{let n=Math.log(2),r=Td(t,e),a=Td(ol(r,kd(cl(-2,r))),n);return Zd(a,-1)})}function I_(e,t,n=!1){return Ti(()=>{if(n)t=gm(t);else{let e=vh(t,t.shape.length-1,!0);t=hl(t,e)}return t=ju(t,KS(),1-KS()),wd(vh(cl(tl(e,"float32"),ud(t)),t.shape.length-1))})}function S_(e,t,n=!1){return Ti(()=>{let r=tl(Ph(QS(e)),"int32");t=ju(t,KS(),1-KS());let a=t.shape,s=iu(yc(r,a[a.length-1]),a);return I_(s,t,n)})}function N_(e,t){if(!Ea.arraysEqual(e.shape,t.shape))throw new XI(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Ti(()=>{let n=$f(t),r=wd(ml(t));return ol(Td(n,cl(t,e)),hd(Ch(r)))})}function T_(e,t){return Ti(()=>{let n;return n=ju(t,KS(),1-KS()),n=ud(hl(n,Td(1,n))),Zd(N_(e,n),-1)})}function __(e,t){return Ti(()=>{let n=ju(e,KS(),1),r=ju(t,KS(),1);return vh(cl(e,ud(hl(n,r))),-1)})}function C_(e,t){return Ti(()=>{let n=ud(ol(KS(),t));return Zd(Td(t,cl(e,n)),-1)})}function E_(e,t){return Ti(()=>{let n=f_(e,-1),r=f_(t,-1),a=cl(n,r);return wd(vh(a,-1))})}h_.constructors={};var A_={meanSquaredError:m_,meanAbsoluteError:g_,meanAbsolutePercentageError:y_,meanSquaredLogarithmicError:b_,squaredHinge:x_,hinge:w_,categoricalHinge:v_,logcosh:k_,categoricalCrossentropy:I_,sparseCategoricalCrossentropy:S_,binaryCrossentropy:T_,kullbackLeiblerDivergence:__,poisson:C_,cosineProximity:E_};function R_(e){if("string"==typeof e){if(e in A_)return A_[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new XI(t)}return e}function $_(e,t){return Ti(()=>{let n=cl(.5,xc(t)),r=YS(Vh(t,n),e.dtype);return Zd(Pp(e,r),-1)})}function F_(e,t){return Ti(()=>YS(Pp(_l(e,-1),_l(t,-1)),"float32"))}function D_(e,t){return Ti(()=>tl(vh($d(Pp(e,1),Pp(t,1))),"float32"))}function M_(e,t){return Ti(()=>tl(vh($d(Pp(e,1),Pp(t,0))),"float32"))}function O_(e,t){return Ti(()=>tl(vh($d(Pp(e,0),Pp(t,1))),"float32"))}function L_(e,t){return Ti(()=>{let n=D_(e,t),r=O_(e,t),a=ol(n,r);return tl(Bp(Vh(a,0),hl(n,a),0),"float32")})}function P_(e,t){return Ti(()=>{let n=D_(e,t),r=M_(e,t),a=ol(n,r);return tl(Bp(Vh(a,0),hl(n,a),0),"float32")})}function z_(e,t){return T_(e,t)}function B_(e,t){return e.rank===t.rank&&(e=Am(e,[e.rank-1])),t=_l(t,-1),t.dtype!==e.dtype&&(t=tl(t,e.dtype)),tl(Pp(e,t),"float32")}var W_=m_,V_=m_,U_=g_,G_=g_,H_=y_,j_=y_,q_=I_,K_=E_,X_=S_,Y_={binaryAccuracy:$_,categoricalAccuracy:F_,precision:L_,categoricalCrossentropy:q_,sparseCategoricalCrossentropy:X_,mse:W_,MSE:V_,mae:U_,MAE:G_,mape:H_,MAPE:j_,cosine:K_};function J_(e){if("string"==typeof e&&e in Y_)return Y_[e];if("string"!=typeof e&&null!=e)return e;throw new XI("Unknown metric "+e)}function Z_(e){if(eS(null!==e,"Unknown LossOrMetricFn "+e),"string"==typeof e)return e;{let t;for(let n of Object.keys(A_))if(A_[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(Y_))if(Y_[n]===e){t=n;break}return void 0!==t?t:e.name}}function Q_(e){let t={Adagrad:()=>Sw.adagrad(.01),Adadelta:()=>Sw.adadelta(1,.95,KS()),Adam:()=>Sw.adam(.001,.9,.999,KS()),Adamax:()=>Sw.adamax(.002,.9,.999,KS(),0),RMSProp:()=>Sw.rmsprop(.001,.9,0,KS()),SGD:()=>Sw.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new XI("Unknown Optimizer "+e)}function eC(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!tC(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function tC(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!tC(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!tC(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function nC(e,t,n,r=console.log){let a,s=aC(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),sC(i,n,r),r("=".repeat(t));let o=e.layers;for(let p=0;p<o.length;++p)s?iC(o[p],n,r):oC(o[p],n,a,r),r((p===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=rC(e),u=qN(e.nonTrainableWeights);r("Total params: "+(l+u)),r("Trainable params: "+l),r("Non-trainable params: "+u),r("_".repeat(t))}function rC(e){let t;return t=null!=e.collectedTrainableWeights?qN(e.collectedTrainableWeights):qN(e.trainableWeights),t}function aC(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let e=!1;for(let n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function sC(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function iC(e,t,n){let r,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(l){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(l){r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,r,e.countParams().toString()];sC(o,t,n)}function oC(e,t,n,r){let a,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(h){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(h){a="multiple"}let i=[];for(let d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){let t=d.inboundLayers[e].name,n=d.nodeIndices[e],r=d.tensorIndices[e];i.push(`${t}[${n}][${r}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0],p=[`${o} (${l})`,s,a,e.countParams().toString(),u];sC(p,t,r);for(let d=1;d<i.length;++d)sC(["","","","",i[d]],t,r)}function lC(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function uC(e,t){if(null===e)return null;if("string"==typeof e)return sS(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];lC(t,a,r)?n.push(r):n.push(uC(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=sS(n);t[e]=uC(r,e)}}return t}}function pC(e,t){if(null==e)return null;if("string"==typeof e)return aS(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];lC(t,a,r)?n.push(r):n.push(pC(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=aS(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?pC(r,n):r}return t}}var hC="4.16.0",dC=e=>{let t=Object.keys(e);if(0===t.length)return!1;let n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))},cC=class e extends aT{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=IS(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],dS(this.inputs).length!==this.inputs.length)throw new XI("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(e=>e.name));dS(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(e=>e.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;eS(0===n,"input layer has >1 nodes"),eS(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e];if(!(n instanceof pT))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);let n={},r={},a={},s={},i={},o=[],l=(t,n,r,a,s,u)=>{(null==a||null==s||null==u)&&(a=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);let p=a.inboundNodes[s];if(-1!==r.indexOf(p))throw new KI(`The tensor ${t.name} at layer "${a.name}" is part of a cycle.`);if(-1!==n.indexOf(p))return;this.containerNodes.add(e.nodeKey(a,s)),a.id in i||(i[a.id]=Object.keys(i).length),-1===r.indexOf(p)&&r.push(p);let h=p.inboundLayers.length;for(let e=0;e<h;e++){let t=p.inputTensors[e],a=p.inboundLayers[e],s=p.nodeIndices[e],i=p.tensorIndices[e];l(t,n,r,a,s,i)}for(n.push(p);r.indexOf(p)>=0;)r.splice(r.indexOf(p),1);o.push(p)},u=[],p=[];for(let e of this.outputs)l(e,u,p);let h=o.slice().reverse();for(let e of h){r[e.id]=e,e.id in n||(n[e.id]=0);let t=n[e.id],i=null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id];t=Math.max(t,i),a[e.outboundLayer.id]=t,s[e.outboundLayer.id]=e.outboundLayer,n[e.id]=t;for(let a=0;a<e.inboundLayers.length;a++){let s=e.inboundLayers[a],i=e.nodeIndices[a],o=s.inboundNodes[i],l=null==n[o.id]?0:n[o.id];n[o.id]=Math.max(t+1,l),r[o.id]=o}}let d={};for(let e in n){let t=n[e];t in d||(d[t]=[]),d[t].push(r[e])}let c={};for(let e in a){let t=a[e];t in c||(c[t]=[]),c[t].push(s[e])}let f=Object.keys(c).map(e=>parseInt(e,10)).sort(hS);this.layers=[];for(let b of f){let t=c[b];t.sort((e,t)=>{let n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0});for(let n of t)n instanceof e&&this.internalContainerRefs.push(n),this.layers.push(n)}this.layersByDepth=c,f=Object.keys(d).map(e=>parseInt(e,10)).sort(hS);let m=this.inputs.slice(),g=[];for(let e of f)for(let t of d[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===m.indexOf(n))throw new KI(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(let e of t.outputTensors)m.push(e);g.push(e.name)}}this.nodesByDepth=d;let y=this.layers.map(e=>e.name);for(let e of y){let t=y.filter(t=>t===e).length;if(1!==t)throw new KI(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new nT({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new XI("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0,a=dC(e);a&&this.parseWeights(e);for(let i of this.layers)for(let[e,t]of i.weights.entries()){let s=a?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[s])throw new XI("Duplicate weight name: "+s);n[s]=t,r++}let s=[];for(let i in e){let r=i;if(null==n[i]){let e=i.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[i]]);else if(t)throw new XI("Provided weight data has no target variable: "+i);delete n[r]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new XI(`${e.length} of ${r} weights are not set: ${e}`)}ZN(s)}parseWeights(e){for(let t in Object.keys(e)){let n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!r.includes(e)).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers "+hC,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=pC(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Ti(()=>{e=rS(e);let n=new cT;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return yT(this.outputs,n,t)})}computeMask(e,t){return Ti(()=>{let n;return e=rS(e),n=null==t?QI(null,e.length):rS(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=GN(e);if(t.length!==this.inputLayers.length)throw new XI(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let e=this.inputLayers[i],r=t[i],a=e.name+"_0_0";n[a]=r}let r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(hS);if(r.length>1)for(let i of r){let e=this.nodesByDepth[i];for(let t of e){let e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;let r=[];for(let o=0;o<t.inboundLayers.length;o++){let e=t.inboundLayers[o],a=t.nodeIndices[o],s=t.tensorIndices[o],i=`${e.name}_${a}_${s}`,l=n[i];r.push(l)}let a=e.computeOutputShape(nS(r)),s=GN(a),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){let r=`${e.name}_${i}_${t}`;n[r]=s[t]}}}let a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){let e=s[i];eS(e in n),a.push(n[e])}return nS(a)}runInternalGraph(e,t){null==t&&(t=QI(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let r=this.inputs[o],a=e[o],s=t[o];n[r.id]=[a,s]}let r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(hS);for(let o of r){let e=this.nodesByDepth[o];for(let t of e){let e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(let t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){let[t,n]=s[0];null==u.mask&&(u.mask=n),o=rS(e.call(t,u)),l=rS(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map(e=>e[0]),i=s.map(e=>e[1]),null==u.mask&&(u.mask=i),o=rS(e.call(r,u)),l=rS(e.computeMask(r,i));if(e.activityRegularizer)throw new YI("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let o of this.outputs){eS(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[e,t]=n[o.id];i.push(e.shape),a.push(e),s.push(t)}return[a,s,i]}buildNodeConversionMap(t){let n,r={};for(let a of this.layers){n=a instanceof e?1:0;for(let t=0;t<a.inboundNodes.length;t++){let s=e.nodeKey(a,t);this.containerNodes.has(s)&&(r[s]=n,n+=1)}}return r}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new XI("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(let n of this.layers)if(n.name===e)return n;throw new XI("No such layer: "+e)}findLayer(e){if(this.layers.length<=e)throw new XI(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Ti(()=>{let t=[];for(let n of this.layers)for(let r=0;r<n.inboundNodes.length;++r){let a=e.nodeKey(n,r);this.containerNodes.has(a)&&t.push(...n.calculateLosses())}return t})}getConfig(){let t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[];for(let o of this.layers){let t=o.getClassName(),a=o.getConfig(),s=[];for(let r=0;r<o.inboundNodes.length;r++){let t=o.inboundNodes[r],a=e.nodeKey(o,r),l={};if(this.containerNodes.has(a)){if(t.callArgs)try{JSON.stringify(t.callArgs),l=t.callArgs}catch(i){console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${t.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),l={}}if(t.inboundLayers.length>0){let r=[];for(let a=0;a<t.inboundLayers.length;a++){let s=t.inboundLayers[a],i=t.nodeIndices[a],o=t.tensorIndices[a],u=e.nodeKey(s,i),p=n[u];null==p&&(p=0),r.push([s.name,p,o,l])}s.push(r)}}}let l={};l.name=o.name,l.className=t,l.config=a,l.inboundNodes=s,r.push(l)}t.layers=r;let a=[];for(let o=0;o<this.inputLayers.length;o++){let t=this.inputLayers[o],r=this.inputLayersNodeIndices[o],s=e.nodeKey(t,r);if(!this.containerNodes.has(s))continue;let i=n[s];null==i&&(i=0);let l=this.inputLayersTensorIndices[o];a.push([t.name,i,l])}t.inputLayers=a;let s=[];for(let o=0;o<this.outputLayers.length;o++){let t=this.outputLayers[o],r=this.outputLayersNodeIndices[o],a=e.nodeKey(t,r);if(!this.containerNodes.has(a))continue;let i=n[a];null==i&&(i=0);let l=this.outputLayersTensorIndices[o];s.push([t.name,i,l])}return t.outputLayers=s,t}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let p=a[o];if(p.inboundNodes.length<=l)return void i(e,t);let h=p.inboundNodes[l];r.push(h.outputTensors[u])}r.length>0&&e.apply(nS(r),n)}function l(e){let n=e.name,s=c_(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new XI("Corrupted configuration, expected array for nodeData: "+e);i(s,e)})}let u=t.name,p=t.layers;for(let m of p)l(m);for(;!cS(s);)for(let e of p){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let h=[],d=[],c=t.inputLayers;for(let m of c){let e=m[0],t=m[1],n=m[2];eS(e in a);let r=a[e].inboundNodes[t].outputTensors;h.push(r[n])}let f=t.outputLayers;for(let m of f){let e=m[0],t=m[1],n=m[2];eS(e in a);let r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new XI("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Ti(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function fC(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function mC(e,t){return fC(e,t,"classWeight")}async function gC(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=Ti(()=>{if(1===e.shape.length)return rl(e);if(2===e.shape.length){if(e.shape[1]>1)return _l(e,1);if(1===e.shape[1])return iu(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());_i(t);let a=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),zm(a,"float32")}return null}function yC(e,t){return cl(e,t)}var bC=32;function xC(e,t){let n,r,a=t;n=a.xs,r=a.ys,Ea.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t);let s=wC("input",e.inputNames,n),i=wC("output",e.outputNames,r),o=s[0].shape[0];Ea.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),Ea.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)Ea.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)Ea.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function wC(e,t,n){if(n instanceof Ss)return[n];if(Array.isArray(n))return Ea.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(null==n[a])throw new XI(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function vC(e){if(3===e.length)throw new YI("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function kC(e,t,n){let r=null!=n.batchesPerEpoch;if(Ea.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),Ea.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),Ea.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),Ea.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),Ea.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(SC(n.validationData))Ea.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{let e=vC(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map(e=>"val_"+e)):u.slice();let p=p_(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=d_(p,h,n.epochs,null,null,IC(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let p=0,h=0;for(r||(m=await t.iterator());!r||p<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${p} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=xC(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);let i=[];if(null!=n.classWeight){let t=mC(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await gC(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);_i(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,Ci(n)}await d.onBatchEnd(h,s),r_(s),h++,p++}if(r?p>=n.batchesPerEpoch:t.done){if(i){let t;t=SC(n.validationData)?rS(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):rS(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?bC:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function IC(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function SC(e){return"function"==typeof e.iterator}function NC(e){return"function"==typeof e.next}async function TC(e,t,n){n=n||{};let r=null!=n.batches,a=e.testFunction,s=[];if(n.verbose>0)throw new YI("Verbose mode is not implemented yet.");Ea.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));let i=NC(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=Ti(()=>{if(t.value){let{xs:n,ys:r}=xC(e,t.value),i=n.concat(r),u=Ti(()=>a(i));if(_i(i),0===l)for(let e=0;e<u.length;++e)s.push(mh(0));let p=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=Ti(()=>ol(s[e],cl(p,t))),l>0&&_i(n)}_i(u),o+=p,++l}return s}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let e=s[u];s[u]=hl(s[u],o),_i(e)}return nS(s)}function _C(e){Ea.assert(e>0&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got "+e)}function CC(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>tN(e,t,n-t)):tN(e,t,n-t)}function EC(e,t){return Ti(()=>null==e?null:Array.isArray(e)?e.map(e=>EC(e,t)):uN(e,"int32"===t.dtype?t:tl(t,"int32")))}function AC(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function RC(e){let t=[];e instanceof Ss&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(JS(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function $C(e,t){if(null==e)return;let n=[];if(t instanceof Ss)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(let a in t){let e=t[a];n.push(e.id)}let r=[];if(e instanceof Ss)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(let a in e){let t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function FC(e){return e instanceof Ss}function DC(e){return Array.isArray(e)}function MC(e){return!FC(e)&&!DC(e)}function OC(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(DC(e)&&e.length>0)t=!0;else if(MC(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new XI(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let s;if(MC(e)){e=e,s=[];for(let n of t){if(null==e[n])throw new XI(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(DC(e)){if(e=e,e.length!==t.length)throw new XI(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new XI(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=RC(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let e=s[i];if(e.shape.length!==n[i].length)throw new XI(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!r)continue;let s=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&s!==o)throw new XI(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return s}function LC(e,t,n){let r=dS(e.map(e=>e.shape[0]));r.sort();let a=dS(t.map(e=>e.shape[0]));if(a.sort(),r.length>1)throw new XI("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(e=>e.shape)));if(a.length>1)throw new XI("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(e=>e.shape)));if(r.length>0&&a.length>0&&!Ea.arraysEqual(r,a))throw new XI(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function PC(e,t,n){let r=[m_,T_,I_];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===I_&&1===s.shape[s.shape.length-1])throw new XI(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new XI(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function zC(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new XI(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new XI(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let e=s[i];if(e.shape.length!==n[i].length)throw new XI(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;let o=e.shape[s],l=n[i][s];if(null!=l&&l!==o)throw new XI(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}function BC(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map(e=>n);{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}var WC="layers-model",VC=class extends cC{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new XI("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");nC(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=Q_(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Yb))throw new XI("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new XI(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>R_(e))}else{let n=R_(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new XI(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(R_(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],OS("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});let r=BC(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};OS("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=r[e];(t=>{let n,r,s,i="";for(let o of t){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===T_?-1!==["accuracy","acc"].indexOf(o)?r=$_:-1!==["crossentropy","ce"].indexOf(o)&&(r=z_):this.lossFunctions[e]===S_?-1!==["accuracy","acc"].indexOf(o)?r=B_:-1!==["crossentropy","ce"].indexOf(o)&&(r=X_):-1!==["accuracy","acc"].indexOf(o)?r=F_:-1!==["crossentropy","ce"].indexOf(o)&&(r=q_),-1!==["accuracy","acc"].indexOf(o)?t="acc":-1!==["crossentropy","ce"].indexOf(o)&&(t="ce"),s=r,n=i+t}else s=J_(o),n=i+Z_(o);let t;OS(n,()=>{t=s}),a(e,n,t)}})(t)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;_C(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,o=this.testLoop(i,s,r,n.verbose,n.steps);return nS(o)}finally{$C(a[0],e),$C(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),TC(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new XI(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new XI(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new XI("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new cT;if(e instanceof Ss&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new XI(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let o of this.inputs){let t=e[o.name];if(null==t)throw new XI("No value is provided for the model's input "+o.name);s.add(o,t)}let i=yT(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=QI(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new XI("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return Ti(()=>{let r=this.checkNumSamples(e);if(n)throw new YI("Verbose predictLoop() is not implemented yet.");let a=AC(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t)Ti(()=>{let n=a[t][0],r=a[t][1],s=CC(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new cT(i);return yT(this.outputs,o)}).forEach((e,t)=>s[t].push(e));return nS(s.map(e=>du(e,0)))})}predict(e,t={}){let n=RC(e);zC(n,this.inputNames,this.feedInputShapes,!1);try{let r=null==t.batchSize?32:t.batchSize;return _C(r),this.predictLoop(n,r)}finally{$C(n,e)}}predictOnBatch(e){zC(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new KI("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let e=this.feedOutputShapes[s];this.feedLossFns[s]===S_?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(e=OC(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=OC(t,this.feedOutputNames,a,!1,"target"),LC(e,t,null),PC(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new XI(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=mC(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await gC(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return Ti(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new YI("Verbose mode is not implemented yet.");if(null!=a)throw new YI("steps mode in testLoop() is not implemented yet");{let r=AC(s,n),a=zm(qS(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=tN(a,s,o-s),u=EC(t,l),p=e(u);if(0===n)for(let e=0;e<p.length;++e)i.push(mh(0));for(let e=0;e<p.length;++e){let t=p[e];i[e]=ol(i[e],cl(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=hl(i[e],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(tS(e,r)>1){let t=tS(e.slice(0,n),r);a+="_"+t}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new cT(e),l=yT(this.outputs,o,{training:!0});for(let n=0;n<this.lossFunctions.length;++n){let e=this.lossFunctions[n],s=e(r[n],l[n]);null!=a[n]&&(s=yC(s,a[n]));let o=Zd(s);t.push(o),i=0===n?s:ol(i,s)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{let t=this.metricsTensors[n][0],a=this.metricsTensors[n][1];e=Zd(t(r[a],l[a]))}Ci(e),s.push(e)}return i=Zd(i),this.calculateLosses().forEach(e=>{i=ol(i,e)}),i},o=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(i,!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>Ti(()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new cT(s),o=yT(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=Zd(r(a[e],o[e]));t=0===e?s:ol(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Zd(t(a[r],o[r]));n.push(s)}return n})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,s,i,o,l,u,p,h;this.isTraining=!0;try{let d=null==n.batchSize?32:n.batchSize;_C(d);let c=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,d);r=c[0],a=c[1],h=c[2];let f,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new YI("validationData including sample weights is not supported yet."):new XI(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];let e=await this.standardizeUserData(o,l,null,null,!0,d);u=e[0],p=e[1],f=u.concat(p)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;let e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=CC(r,e,t),s=r,r=CC(r,0,e),p=CC(a,e,t),i=a,a=CC(a,0,e),f=u.concat(p)}else null!=n.validationSteps&&(m=!0);let g=r.concat(a).concat(h);this.checkTrainableWeightsConsistency();let y,b,x=this.makeTrainFunction(),w=this.getDedupedMetricsNames();m?(this.makeTestFunction(),y=this.testFunction,b=w.slice().concat(w.map(e=>"val_"+e))):(y=null,f=[],b=w.slice());let v=p_(n.callbacks,n.yieldEvery);return await this.fitLoop(x,g,w,d,n.epochs,n.verbose,v,y,f,n.shuffle,b,n.initialEpoch,null,null)}finally{this.isTraining=!1,$C(r,e),$C(a,t),$C(s,e),$C(i,t),$C(u,o),$C(p,l),null!=h&&_i(h)}}async fitLoop(e,t,n,r,a,s,i,o,l,u,p,h,d,c){null==r&&(r=32),null==a&&(a=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=c&&(f=!0,null==d))throw new XI("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let m,g=this.checkNumSamples(t,r,d,"steps_per_epoch");null!=g&&(m=qS(0,g)),null==s&&(s=1);let{callbackList:y,history:b}=d_(i,s,a,h,g,d,r,f,p);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<a;++x){await y.onEpochBegin(x);let a={};if(null!=d)throw new YI("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new YI("batch shuffling is not implemneted yet");u&&Ea.shuffle(m);let s=zm(m),i=AC(g,r);for(let u=0;u<i.length;++u){let p={};if(await y.onBatchBegin(u,p),Ti(()=>{let h=i[u][0],d=i[u][1],c=tN(s,h,d-h);p.batch=u,p.size=d-h;let m=EC(t,c),g=e(m);for(let e=0;e<n.length;++e){let t=n[e],r=g[e];p[t]=r,Ci(r)}if(u===i.length-1&&f){let e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){let r=n[t],s=e[t];Ci(s),a["val_"+r]=s}}}),await y.onBatchEnd(u,p),r_(p),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(x,a),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return kC(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let e=await o.data();i.push(e[0])}return _i(s),$C(n[0],e),$C(n[1],t),nS(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=Si().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Si().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=aS(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>aS(e))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=aS(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[aS(Z_(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>aS(Z_(e)));{let e={};for(let t in this.metrics)e[t]=aS(Z_(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=uC(e.optimizer_config),a=c_(r);if("string"==typeof e.loss)t=sS(e.loss);else if(Array.isArray(e.loss))t=e.loss.map(e=>sS(e));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=sS(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map(e=>sS(e));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=sS(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:a})}async save(e,t){if("string"==typeof e){let t=ix.getSaveHandlers(e);if(0===t.length)throw new XI(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new XI(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new XI("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await ix.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:WC,generatedBy:"TensorFlow.js tfjs-layers v"+hC,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await ix.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=ix.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(eC(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){eC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};VC.className="Model",Ub.registerClass(VC);var UC=class extends VC{};async function GC(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=uC(n),a=c_(r,t);if(null!=e.weightsManifest){let t=await ix.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(e=>e.originalName)),n={};for(let e of a.weights)n[e.originalName]=t[e.originalName];a.loadWeights(n),_i(t)}return a}async function HC(e,t){if(null==t&&(t={}),"string"==typeof e){let n=ix.getLoadHandlers(e,t);if(0===n.length)n.push(ix.browserHTTPRequest(e,t));else if(n.length>1)throw new XI(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return jC(e,void 0,t)}async function jC(e,t,n){if(null==n&&(n={}),null==e.load)throw new XI("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=c_(uC(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new XI("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=qC(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),_i(e),_i(t.map(e=>e.tensor))}return o}function qC(e,t){let n=ix.decodeWeights(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}UC.className="Functional",Ub.registerClass(UC);var KC=class e extends VC{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:IS("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new XI(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let n,r=t instanceof e||t instanceof VC;if(r){if(n=t,1!==n.outputs.length)throw new XI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new XI("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new XI("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let e=hT({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(r)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new XI(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new XI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=oT(this.outputs[0])}this.inboundNodes=[],new nT({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:QI(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{let e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(jN(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new VC({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new KI("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new KI("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new KI("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new KI("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(t,n,r={},a=!1){let s,i={};if(n instanceof Array){if(null==n[0].className||"Merge"===n[0].className)throw new XI("Legacy serialization format not supported yet.");s=n}else Ea.assert(null!=n.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=n.layers,delete n.layers,i=n;let o=new t(i);if(!(o instanceof e))throw new YI("Sequential.fromConfig called on non-Sequential input: "+o);for(let e of s){let t=c_(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new XI("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new XI("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function XC(e){return new VC(e)}function YC(e){return new KC(e)}function JC(e){return hT(e)}function ZC(e,t){h_.registerCallbackConstructor(e,t)}KC.className="Sequential",Ub.registerClass(KC);var QC=class extends Ub.Serializable{getConfig(){return{}}},eE=class extends QC{apply(e,t=1){return cN(e,t)}};eE.className="elu",Ub.registerClass(eE);var tE=class extends QC{apply(e){return Yf(e)}};tE.className="selu",Ub.registerClass(tE);var nE=class extends QC{apply(e){return $f(e)}};nE.className="relu",Ub.registerClass(nE);var rE=class extends QC{apply(e){return Ti(()=>rc(6,$f(e)))}};rE.className="relu6",Ub.registerClass(rE);var aE=class extends QC{apply(e){return e}};aE.className="linear",Ub.registerClass(aE);var sE=class extends QC{apply(e){return gu(e)}};sE.className="sigmoid",Ub.registerClass(sE);var iE=class extends QC{apply(e){return gN(e)}};iE.className="hardSigmoid",Ub.registerClass(iE);var oE=class extends QC{apply(e){return kd(e)}};oE.className="softplus",Ub.registerClass(oE);var lE=class extends QC{apply(e){return fN(e)}};lE.className="softsign",Ub.registerClass(lE);var uE=class extends QC{apply(e){return wu(e)}};uE.className="tanh",Ub.registerClass(uE);var pE=class extends QC{apply(e,t=-1){return gm(e,t)}};pE.className="softmax",Ub.registerClass(pE);var hE=class extends QC{apply(e,t=-1){return Cd(e,t)}};hE.className="logSoftmax",Ub.registerClass(hE);var dE=class extends QC{apply(e,t=1){return Ti(()=>cl(gu(cl(e,t)),e))}};dE.className="swish",Ub.registerClass(dE);var cE=class extends QC{apply(e){return Ti(()=>cl(e,wu(kd(e))))}};function fE(e){return e.getClassName()}function mE(e,t={}){return uS(e,Ub.SerializationMap.getMap().classNameMap,t,"activation")}function gE(e){if(null==e){let e={className:"linear",config:{}};return mE(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},mE(t)}return e instanceof QC?e:mE(e)}function yE(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}cE.className="mish",Ub.registerClass(cE);var bE=class extends Ub.Serializable{},xE=class extends bE{constructor(e){super(),yE(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Ti(()=>{let t=Qd([1]);return this.hasL1&&(t=ol(t,vh(cl(this.l1,ml(e))))),this.hasL2&&(t=ol(t,vh(cl(this.l2,pN(e))))),iu(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};function wE(e){return yE(e),new xE({l1:null!=e?e.l1:null,l2:0})}function vE(e){return yE(e),new xE({l2:null!=e?e.l2:null,l1:0})}xE.className="L1L2",Ub.registerClass(xE);var kE={l1l2:"L1L2"};function IE(e){return oS(e)}function SE(e,t={}){return uS(e,Ub.SerializationMap.getMap().classNameMap,t,"regularizer")}function NE(e){if(null==e)return null;if("string"==typeof e){let t={className:e in kE?kE[e]:e,config:{}};return SE(t)}return e instanceof bE?e:SE(e)}var TE=class extends aT{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=HN(e);let n=$f(e);return null!=this.maxValue&&(n=ju(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};TE.className="ReLU",Ub.registerClass(TE);var _E=class extends aT{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=HN(e);return ed(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};_E.className="LeakyReLU",Ub.registerClass(_E);var CE=class extends aT{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=VN(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=NE(e.alphaRegularizer),this.alphaConstraint=FT(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new XI("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){e=jN(e);let t=e.slice(1);if(null!=this.sharedAxes)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new QN({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=HN(e),zc(e,this.alpha.read())}getConfig(){let e={alphaInitializer:WN(this.alphaInitializer),alphaRegularizer:IE(this.alphaRegularizer),alphaConstraint:RT(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};CE.className="PReLU",Ub.registerClass(CE);var EE=class extends aT{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new YI(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=HN(e);return Yp(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};EE.className="ELU",Ub.registerClass(EE);var AE=class extends aT{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=HN(e);return cl(n,tl(Vh(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};AE.className="ThresholdedReLU",Ub.registerClass(AE);var RE=class extends aT{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new pE).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Ti(()=>{let n=HN(e),r=t.mask;if(null!=r){let e=cl(Td(ec(n.shape),tl(r,n.dtype)),mh(-1e9));n=ol(n,e)}return this.axis instanceof Array?this.axis.length>1?Ch(Td(n,Ad(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function $E(e,t,n){if("number"==typeof e)return QI(e,t);if(e.length!==t)throw new XI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!US(a))throw new XI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function FE(e,t,n,r,a=1){if(null==e)return e;let s,i=t+(t-1)*(a-1);return s="same"===n?e:e-i+1,Math.floor((s+r-1)/r)}function DE(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+jS([n-t,0]);else{if("same"!==r)throw new XI(`Unsupport padding mode: ${r}.`);e*=t}return e}function ME(e,t){return Ti(()=>(AS(t),"channelsFirst"===t?mg(e,[0,2,3,1]):e))}function OE(e,t){return Ti(()=>(AS(t),"channelsFirst"===t?mg(e,[0,2,3,4,1]):e))}function LE(e,t,n,r=1,a="valid",s,i=1){return Ti(()=>{if(null==s&&(s=XS()),AS(s),3!==e.shape.length)throw new XI(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new XI(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new XI(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=mg(e,[0,2,1])),"causal"===a)throw new YI("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ap(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=dN(o,n)),o})}function PE(e,t,n,r=[1,1],a="valid",s,i,o=null){return Ti(()=>{if(null==s&&(s=XS()),AS(s),3!==e.rank&&4!==e.rank)throw new XI(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new XI(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=ME(e,s);if("causal"===a)throw new YI("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=$g.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=mg(l,[0,3,1,2])),l})}function zE(e,t,n,r=[1,1,1],a="valid",s,i){return Ti(()=>{if(null==s&&(s=XS()),AS(s),4!==e.rank&&5!==e.rank)throw new XI(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new XI(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=OE(e,s);if("causal"===a)throw new YI("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=pp(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=dN(o,n)),"channelsFirst"===s&&(o=mg(o,[0,4,1,2,3])),o})}RE.className="Softmax",Ub.registerClass(RE);var BE=class e extends aT{constructor(t,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.verifyArgs(n),this.rank=t,gS(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new YI(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=$E(n.kernelSize,t,"kernelSize"),this.strides=$E(null==n.strides?1:n.strides,t,"strides"),this.padding=null==n.padding?"valid":n.padding,$S(this.padding),this.dataFormat=null==n.dataFormat?"channelsLast":n.dataFormat,AS(this.dataFormat),this.activation=gE(n.activation),this.useBias=null==n.useBias||n.useBias,this.biasInitializer=VN(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=FT(n.biasConstraint),this.biasRegularizer=NE(n.biasRegularizer),this.activityRegularizer=NE(n.activityRegularizer),this.dilationRate=$E(null==n.dilationRate?1:n.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new XI("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new XI("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new XI("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(eS("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!mS(e.kernelSize,"number",1,3))throw new XI(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:fE(this.activation),useBias:this.useBias,biasInitializer:WN(this.biasInitializer),biasRegularizer:IE(this.biasRegularizer),activityRegularizer:IE(this.activityRegularizer),biasConstraint:RT(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},WE=class e extends BE{constructor(t,n){super(t,n),this.kernel=null,e.verifyArgs(n),this.filters=n.filters,gS(this.filters,"filters"),this.kernelInitializer=VN(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=FT(n.kernelConstraint),this.kernelRegularizer=NE(n.kernelRegularizer)}build(e){e=jN(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new XI("The channel dimension of the input should be defined. Found "+e[t]);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Ti(()=>{e=HN(e);let t,n=null==this.bias?null:this.bias.read(),r=xS(this.activation.getClassName());if(null!=r&&2===this.rank)t=PE(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=LE(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=PE(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new YI("convolutions greater than 3D are not implemented yet.");t=zE(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=jN(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){let e=FE(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:WN(this.kernelInitializer),kernelRegularizer:IE(this.kernelRegularizer),kernelConstraint:RT(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new XI("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}},VE=class e extends WE{constructor(t){super(2,t),e.verifyArgs(t)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!mS(e.kernelSize,"number",1,2))throw new XI(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};VE.className="Conv2D",Ub.registerClass(VE);var UE=class e extends WE{constructor(t){super(3,t),e.verifyArgs(t)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new XI(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};UE.className="Conv3D",Ub.registerClass(UE);var GE=class extends VE{constructor(e){if(super(e),this.inputSpec=[new QN({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new XI("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(e=jN(e),4!==e.length)throw new XI("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new XI("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new QN({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Ti(()=>{let t=HN(e);if(4!==t.shape.length)throw new XI("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],p=this.strides[0],h=this.strides[1],d=DE(i,p,l,this.padding),c=DE(o,h,u,this.padding),f=[s,d,c,this.filters];"channelsLast"!==this.dataFormat&&(t=mg(t,[0,2,3,1]));let m=lp(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=mg(m,[0,3,1,2])),null!=this.bias&&(m=dN(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(e){e=jN(e);let t,n,r,a=e.slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=DE(a[n],o,s,this.padding),a[r]=DE(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};GE.className="Conv2DTranspose",Ub.registerClass(GE);var HE=class extends UE{constructor(e){if(super(e),this.inputSpec=[new QN({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new XI("Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(e=jN(e),5!==e.length)throw new XI("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new XI("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new QN({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Ti(()=>{let t=HN(e);if(5!==t.shape.length)throw new XI("Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],p=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=DE(o,c,p,this.padding),y=DE(l,f,h,this.padding),b=DE(u,m,d,this.padding),x=[i,g,y,b,this.filters];"channelsLast"!==this.dataFormat&&(t=mg(t,[0,2,3,4,1]));let w=fp(t,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(w=mg(w,[0,4,1,2,3])),null!==this.bias&&(w=dN(w,this.bias.read(),this.dataFormat)),null!==this.activation&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=jN(e);let t,n,r,a,s=e.slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],p=this.strides[1],h=this.strides[2];return s[t]=this.filters,s[n]=DE(s[n],u,i,this.padding),s[r]=DE(s[r],p,o,this.padding),s[a]=DE(s[a],h,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};HE.className="Conv3DTranspose",Ub.registerClass(HE);var jE=class extends WE{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new XI("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new XI("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new XI(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=VN(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=NE(t.depthwiseRegularizer),this.depthwiseConstraint=FT(t.depthwiseConstraint),this.pointwiseInitializer=VN(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=NE(t.pointwiseRegularizer),this.pointwiseConstraint=FT(t.pointwiseConstraint)}build(e){if(e=jN(e),e.length<this.rank+2)throw new XI(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new XI("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new QN({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Ti(()=>{let t;if(e=HN(e),1===this.rank)throw new YI("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=mg(e,[0,2,3,1])),t=Zf(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=dN(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=mg(t,[0,3,1,2])),t})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=WN(this.depthwiseInitializer),e.pointwiseInitializer=WN(this.pointwiseInitializer),e.depthwiseRegularizer=IE(this.depthwiseRegularizer),e.pointwiseRegularizer=IE(this.pointwiseRegularizer),e.depthwiseConstraint=RT(this.depthwiseConstraint),e.pointwiseConstraint=RT(this.pointwiseConstraint),e}};jE.className="SeparableConv";var qE=class extends jE{constructor(e){super(2,e)}};qE.className="SeparableConv2D",Ub.registerClass(qE);var KE=class e extends WE{constructor(t){super(1,t),e.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!mS(e.kernelSize,"number",1,1))throw new XI(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};KE.className="Conv1D",Ub.registerClass(KE);var XE=class extends aT{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Ti(()=>{if(e=HN(e),"channelsLast"===this.dataFormat){let t=rN(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return rN(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=rN(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return rN(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};XE.className="Cropping2D",Ub.registerClass(XE);var YE=class extends aT{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,AS(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,RS(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Ti(()=>{let t=HN(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=mg(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?Pb.resizeNearestNeighbor(t,[e,r]):Pb.resizeBilinear(t,[e,r]);return mg(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Pb.resizeNearestNeighbor(t,[e,r]):Pb.resizeBilinear(t,[e,r])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};function JE(e,t,n=[1,1],r="valid",a,s){return Ti(()=>{null==a&&(a=XS()),AS(a);let i=ME(e,a);if(4!==e.rank)throw new XI(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new XI(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Cp(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=mg(i,[0,3,1,2])),i})}YE.className="UpSampling2D",Ub.registerClass(YE);var ZE=class extends BE{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=VN(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=FT(e.depthwiseConstraint),this.depthwiseRegularizer=NE(e.depthwiseRegularizer)}build(e){if(e=jN(e),e.length<4)throw new XI(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new XI(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ti(()=>{e=HN(e);let t=JE(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=dN(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=jN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=FE(t,this.kernelSize[0],this.padding,this.strides[0]),s=FE(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=WN(this.depthwiseInitializer),e.depthwiseRegularizer=IE(this.depthwiseRegularizer),e.depthwiseConstraint=RT(this.depthwiseRegularizer),e}};function QE(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new XI("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function eA(e,t,n,r=!1,a,s,i=!1,o=!1){return Ti(()=>{let l=t.shape.length;if(l<3)throw new XI(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(qS(2,l));if(t=mg(t,u),null!=s)throw new YI("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=tl(tl(a,"bool"),"float32"),a.rank===l-1&&(a=Ah(a,-1)),a=mg(a,u)),r&&(t=Of(t,0),null!=a&&(a=Of(a,0)));let p,h,d,c=[],f=n,m=t.shape[0],g=ig(t);null!=a&&(h=ig(a));for(let t=0;t<m;++t){let n=g[t],r=Ti(()=>e(n,f));if(null==a)p=r[0],f=r[1];else{let e=Ti(()=>{let e=h[t],n=Td(xc(e),e),a=ol(cl(r[0],e),cl(f[0],n)),s=f.map((t,a)=>ol(cl(r[1][a],e),cl(t,n)));return{output:a,newStates:s}});p=e.output,f=e.newStates}o&&c.push(p)}return o&&(d=$m(c,1)),[p,d,f]})}ZE.className="DepthwiseConv2D",Ub.registerClass(ZE);var tA=class e extends aT{constructor(e){let t;if(super(e),null==e.cell)throw new XI("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new uA({cells:e.cell}):e.cell,null==t.stateSize)throw new XI("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new QN({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return qS(0,e).map(e=>null)}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){UN(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return Ti(()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new YI("Constants support is not implemented in RNN yet.");UN(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new QN({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Ea.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),r))throw new XI(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(e=>new QN({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Ti(()=>{if(!this.stateful)throw new qI("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new XI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Qd([n,e])):this.states_=[Qd([n,this.cell.stateSize])];else if(null==e)_i(this.states_),null!=this.keptStates&&(_i(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Qd([n,e])):this.states_[0]=Qd([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new XI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):_i(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!Ea.arraysEqual(r.shape,s))throw new XI(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>Ci(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=QE(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new QN({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof eT){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Ti(()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=HN(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new XI(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=eA((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],p=o[2];this.stateful&&this.resetStates(p,r);let h=this.returnSequences?u:l;return this.returnState?[h].concat(p):h})}getInitialState(e){return Ti(()=>{let t=Qd(e.shape);return t=vh(t,[1,2]),t=JS(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?iN(t,[1,e]):t):this.cell.stateSize>1?[iN(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(n.numConstants=this.numConstants);let r=this.cell.getConfig();return this.getClassName()===e.className&&(n.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),t),n)}static fromConfig(e,t,n={}){let r=t.cell,a=c_(r,n);return new e(Object.assign(t,{cell:a}))}};tA.className="RNN",Ub.registerClass(tA);var nA=class extends aT{},rA=class extends nA{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gS(this.units,"units"),this.activation=gE(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=VN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=VN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=VN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=NE(e.kernelRegularizer),this.recurrentRegularizer=NE(e.recurrentRegularizer),this.biasRegularizer=NE(e.biasRegularizer),this.kernelConstraint=FT(e.kernelConstraint),this.recurrentConstraint=FT(e.recurrentConstraint),this.biasConstraint=FT(e.biasConstraint),this.dropout=HS([1,jS([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=HS([1,jS([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=jN(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ti(()=>{if(e=e,2!==e.length)throw new XI(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pA({ones:()=>xc(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pA({ones:()=>xc(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=lN(null!=s?cl(e,s):e,this.kernel.read()),null!=this.bias&&(a=dN(a,this.bias.read())),null!=i&&(n=cl(n,i));let o=ol(a,lN(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:fE(this.activation),useBias:this.useBias,kernelInitializer:WN(this.kernelInitializer),recurrentInitializer:WN(this.recurrentInitializer),biasInitializer:WN(this.biasInitializer),kernelRegularizer:IE(this.kernelRegularizer),recurrentRegularizer:IE(this.recurrentRegularizer),biasRegularizer:IE(this.biasRegularizer),activityRegularizer:IE(this.activityRegularizer),kernelConstraint:RT(this.kernelConstraint),recurrentConstraint:RT(this.recurrentConstraint),biasConstraint:RT(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};rA.className="SimpleRNNCell",Ub.registerClass(rA);var aA=class extends tA{constructor(e){e.cell=new rA(e),super(e)}call(e,t){return Ti(()=>{null!=this.cell.dropoutMask&&(_i(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_i(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}};aA.className="SimpleRNN",Ub.registerClass(aA);var sA=class extends nA{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new XI("GRUCell does not support reset_after parameter set to true.");this.units=e.units,gS(this.units,"units"),this.activation=gE(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=gE(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=VN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=VN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=VN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=NE(e.kernelRegularizer),this.recurrentRegularizer=NE(e.recurrentRegularizer),this.biasRegularizer=NE(e.biasRegularizer),this.kernelConstraint=FT(e.kernelConstraint),this.recurrentConstraint=FT(e.recurrentConstraint),this.biasConstraint=FT(e.biasConstraint),this.dropout=HS([1,jS([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=HS([1,jS([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=jN(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ti(()=>{if(e=e,2!==e.length)throw new XI(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pA({ones:()=>xc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pA({ones:()=>xc(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=cl(e,o[0]));let u=lN(e,this.kernel.read());this.useBias&&(u=dN(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=cl(r,l[0]));let p=this.recurrentKernel.read(),[h,d]=Sm(p,[2*this.units,this.units],p.rank-1),c=lN(r,h),[f,m,g]=Sm(u,3,u.rank-1),[y,b]=Sm(c,2,c.rank-1);a=this.recurrentActivation.apply(ol(f,y)),s=this.recurrentActivation.apply(ol(m,b));let x=lN(cl(s,r),d);i=this.activation.apply(ol(g,x));let w=ol(cl(a,r),cl(ol(1,wd(a)),i));return[w,w]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:fE(this.activation),recurrentActivation:fE(this.recurrentActivation),useBias:this.useBias,kernelInitializer:WN(this.kernelInitializer),recurrentInitializer:WN(this.recurrentInitializer),biasInitializer:WN(this.biasInitializer),kernelRegularizer:IE(this.kernelRegularizer),recurrentRegularizer:IE(this.recurrentRegularizer),biasRegularizer:IE(this.biasRegularizer),activityRegularizer:IE(this.activityRegularizer),kernelConstraint:RT(this.kernelConstraint),recurrentConstraint:RT(this.recurrentConstraint),biasConstraint:RT(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};sA.className="GRUCell",Ub.registerClass(sA);var iA=class extends tA{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new sA(e),super(e)}call(e,t){return Ti(()=>{null!=this.cell.dropoutMask&&(_i(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_i(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};iA.className="GRU",Ub.registerClass(iA);var oA=class extends nA{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gS(this.units,"units"),this.activation=gE(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=gE(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=VN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=VN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=VN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=NE(e.kernelRegularizer),this.recurrentRegularizer=NE(e.recurrentRegularizer),this.biasRegularizer=NE(e.biasRegularizer),this.kernelConstraint=FT(e.kernelConstraint),this.recurrentConstraint=FT(e.recurrentConstraint),this.biasConstraint=FT(e.biasConstraint),this.dropout=HS([1,jS([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=HS([1,jS([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=jN(e);let n,r=e[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new(t=class extends kN{apply(t,n){let a=e.apply([r]),s=(new SN).apply([r]),i=e.apply([2*r]);return sN(sN(a,s),i)}},t.className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Ti(()=>{let n=null!=t.training&&t.training;if(e=e,3!==e.length)throw new XI(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pA({ones:()=>xc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pA({ones:()=>xc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,p=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=cl(e,u[0]));let h=lN(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=cl(r,p[0])),h=ol(h,lN(r,this.recurrentKernel.read())),this.useBias&&(h=dN(h,this.bias.read()));let[d,c,f,m]=Sm(h,4,h.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=ol(cl(i,a),cl(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=cl(l,this.activation.apply(o));return[g,g,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:fE(this.activation),recurrentActivation:fE(this.recurrentActivation),useBias:this.useBias,kernelInitializer:WN(this.kernelInitializer),recurrentInitializer:WN(this.recurrentInitializer),biasInitializer:WN(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:IE(this.kernelRegularizer),recurrentRegularizer:IE(this.recurrentRegularizer),biasRegularizer:IE(this.biasRegularizer),activityRegularizer:IE(this.activityRegularizer),kernelConstraint:RT(this.kernelConstraint),recurrentConstraint:RT(this.recurrentConstraint),biasConstraint:RT(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};oA.className="LSTMCell",Ub.registerClass(oA);var lA=class extends tA{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new oA(e),super(e)}call(e,t){return Ti(()=>{null!=this.cell.dropoutMask&&(_i(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_i(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};lA.className="LSTM",Ub.registerClass(lA);var uA=class extends nA{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Ti(()=>{e=e;let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)})}build(e){let t;UN(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{OS("RNNCell_"+r,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),n)}static fromConfig(e,t,n={}){let r=[];for(let a of t.cells)r.push(c_(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return JN(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}ZN(t)}};function pA(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):mN(t(),n),o=()=>yN(i,t,r);return!a||a<=1?Ci(o().clone()):Array(a).fill(void 0).map(o).map(e=>Ci(e.clone()))}uA.className="StackedRNNCells",Ub.registerClass(uA);var hA=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n},dA=class extends tA{constructor(e){if(e.unroll)throw new YI("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new YI("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new QN({ndim:5})]}call(e,t){return Ti(()=>{if(null!=this.cell.dropoutMask&&(_i(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_i(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new XI("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Ti(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=Qd(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){Ti(()=>{if(!this.stateful)throw new qI("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new XI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Qd(a)):this.states_=[Qd(a)];else if(null==e)_i(this.states_),null!=this.keptStates&&(_i(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Qd(a)):this.states_[0]=Qd(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new XI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):_i(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!Ea.arraysEqual(n.shape,r))throw new XI(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>Ci(e.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],p=FE(l,r[0],a,s[0],i[0]),h=FE(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,p,h]:[p,h,n]]}};dA.className="ConvRNN2D";var cA=class extends oA{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,gS(this.filters,"filters"),this.kernelSize=$E(n,2,"kernelSize"),this.kernelSize.forEach(e=>gS(e,"kernelSize")),this.strides=$E(r||1,2,"strides"),this.strides.forEach(e=>gS(e,"strides")),this.padding=a||"valid",$S(this.padding),this.dataFormat=s||"channelsLast",AS(this.dataFormat),this.dilationRate=$E(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>gS(e,"dilationRate"))}build(e){var t;e=jN(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new XI("The channel dimension of the input should be defined. Found "+e[n]);let r=e[n],a=4,s=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new(t=class extends kN{apply(e,t){let a=n.apply([r]),s=ec([r]),i=n.apply([2*r]);return aN([a,s,i])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Ti(()=>{if(3!==e.length)throw new XI(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pA({ones:()=>xc(r),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?cl(t[n],e):e,u=l(r,o,0),p=l(r,o,1),h=l(r,o,2),d=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pA({ones:()=>xc(a),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,f=l(a,c,0),m=l(a,c,1),g=l(a,c,2),y=l(a,c,3),b=3,[x,w,v,k]=Sm(this.kernel.read(),i,b),[I,S,N,T]=this.useBias?Sm(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,I,this.padding),p=this.inputConv(p,w,S,this.padding),h=this.inputConv(h,v,N,this.padding),d=this.inputConv(d,k,T,this.padding);let[_,C,E,A]=Sm(this.recurrentKernel.read(),i,b);f=this.recurrentConv(f,_),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E),y=this.recurrentConv(y,A);let R=this.recurrentActivation.apply(ol(u,f)),$=this.recurrentActivation.apply(ol(p,m)),F=ol(cl($,s),cl(R,this.activation.apply(ol(h,g)))),D=cl(this.recurrentActivation.apply(ol(d,y)),this.activation.apply(F));return[D,D,F]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=hA(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){let a=np(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?dN(a,n,this.dataFormat):a}recurrentConv(e,t){return np(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};cA.className="ConvLSTM2DCell",Ub.registerClass(cA);var fA=class extends dA{constructor(e){let t=new cA(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};fA.className="ConvLSTM2D",Ub.registerClass(fA);var mA=class extends aT{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Ti(()=>{this.invokeCallHook(e,t);let n=HN(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return yN(()=>mN(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};mA.className="Dropout",Ub.registerClass(mA);var gA=class extends mA{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};gA.className="SpatialDropout1D",Ub.registerClass(gA);var yA=class extends aT{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,gS(this.units,"units"),this.activation=gE(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=VN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=VN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=FT(e.kernelConstraint),this.biasConstraint=FT(e.biasConstraint),this.kernelRegularizer=NE(e.kernelRegularizer),this.biasRegularizer=NE(e.biasRegularizer),this.activityRegularizer=NE(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=jN(e);let t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=jN(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Ti(()=>{this.invokeCallHook(e,t);let n,r=HN(e),a=xS(this.activation.getClassName());return null!=a?n=lN(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=lN(r,this.kernel.read()),null!=this.bias&&(n=dN(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n})}getConfig(){let e={units:this.units,activation:fE(this.activation),useBias:this.useBias,kernelInitializer:WN(this.kernelInitializer),biasInitializer:WN(this.biasInitializer),kernelRegularizer:IE(this.kernelRegularizer),biasRegularizer:IE(this.biasRegularizer),activityRegularizer:IE(this.activityRegularizer),kernelConstraint:RT(this.kernelConstraint),biasConstraint:RT(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};yA.className="Dense",Ub.registerClass(yA);var bA=class extends aT{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=jN(e);for(let t of e.slice(1))if(null==t)throw new XI(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],GS(e,1)]}call(e,t){return Ti(()=>{this.invokeCallHook(e,t);let n=HN(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=mg(n,e)}return eN(n)})}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};bA.className="Flatten",Ub.registerClass(bA);var xA=class extends aT{constructor(e){super(e),this.supportsMasking=!0,this.activation=gE(e.activation)}call(e,t){return Ti(()=>{this.invokeCallHook(e,t);let n=HN(e);return this.activation.apply(n)})}getConfig(){let e={activation:fE(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};xA.className="Activation",Ub.registerClass(xA);var wA=class extends aT{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Ti(()=>(e=HN(e),ZS(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};wA.className="RepeatVector",Ub.registerClass(wA);var vA=class extends aT{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let o=0;o<r.length;++o){let e=r[o];if(this.isUnknown(e)){if(null!==s)throw new XI("Can only specifiy one unknown dimension.");s=o}else a*=e}let i=GS(e);if(null!==s){if(0===a||i%a!==0)throw new XI(n);r[s]=i/a}else if(i!==a)throw new XI(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Ti(()=>{this.invokeCallHook(e,t);let n=HN(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return iu(n,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};vA.className="Reshape",Ub.registerClass(vA);var kA=class extends aT{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=qS(1,e.dims.length+1);if(!Ea.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new QN({ndim:this.dims.length+1})]}computeOutputShape(e){e=jN(e);let t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return mg(HN(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};kA.className="Permute",Ub.registerClass(kA);var IA=class extends aT{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=HN(e);return Nl(mc(n,this.maskValue),-1)}call(e,t){return Ti(()=>{this.invokeCallHook(e,t);let n=HN(e),r=Nl(mc(n,this.maskValue),-1,!0);return cl(n,tl(r,n.dtype))})}};IA.className="Masking",Ub.registerClass(IA);var SA=class extends aT{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(rS(e.inputLength))}this.inputDim=e.inputDim,gS(this.inputDim,"inputDim"),this.outputDim=e.outputDim,gS(this.outputDim,"outputDim"),this.embeddingsInitializer=VN(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=NE(e.embeddingsRegularizer),this.activityRegularizer=NE(e.activityRegularizer),this.embeddingsConstraint=FT(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Ti(()=>this.maskZero?(e=HN(e),mc(e,Vp(e))):null)}computeOutputShape(e){if(e=jN(e),null==this.inputLength)return[...e,this.outputDim];let t=rS(this.inputLength);if(t.length!==e.length-1)throw new XI(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new XI(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Ti(()=>{this.invokeCallHook(e,t);let n=HN(e);"int32"!==n.dtype&&(n=YS(n,"int32"));let r=uN(this.embeddings.read(),iu(n,[n.size]));return iu(r,jN(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:WN(this.embeddingsInitializer),embeddingsRegularizer:IE(this.embeddingsRegularizer),activityRegularizer:IE(this.activityRegularizer),embeddingsConstraint:RT(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};SA.className="Embedding",Ub.registerClass(SA);var NA=class extends aT{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new YI}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new XI("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[jN(e)]),e=e,e.length<2)throw new XI(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=dS(t),t.length>1)throw new XI(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){let t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}let r=e.map(e=>e.length);-1===e.indexOf(null)&&1===dS(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Ti(()=>{if(e=e,this.reshapeRequired){let t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){let r=jS(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=JS(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let s of e){let e=s.rank;if(null==e){let e=s.shape,r=e[0],a=e.slice(1).concat([r]),i=iu(s,[r].concat(GS(e.slice(1))));i=mg(i,[1,0]),i=iu(i,a),t.push(i),n=!0}else if(e>1){let r=qS(1,e).concat([0]);t.push(mg(s,r)),n=!0}else t.push(s)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e.length,n=e[t-1],a=[n].concat(e.slice(0,e.length-1));r=iu(mg(iu(r,[-1,n]),[1,0]),a)}else if(a>1){let e=[a-1].concat(qS(0,a-1));r=mg(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;e=e,t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){let n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(let r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=dS(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Ti(()=>{if(null==t)return null;if(!Array.isArray(t))throw new XI("`mask` should be an Array");if(!Array.isArray(e))throw new XI("`inputs` should be an Array");if(t.length!==e.length)throw new XI(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;t=t.map(e=>null==e?e:Ah(e,0));let n=t[0];for(let e=1;e<t.length-1;++e)n=$d(n,t[e]);return n})}},TA=class extends NA{constructor(e){super(e)}mergeFunction(e){return Ti(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ol(t,e[n]);return t})}};TA.className="Add",Ub.registerClass(TA);var _A=class extends NA{constructor(e){super(e)}mergeFunction(e){return Ti(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=cl(t,e[n]);return t})}};_A.className="Multiply",Ub.registerClass(_A);var CA=class extends NA{constructor(e){super(e)}mergeFunction(e){return Ti(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ol(t,e[n]);return cl(1/e.length,t)})}};CA.className="Average",Ub.registerClass(CA);var EA=class extends NA{constructor(e){super(e)}mergeFunction(e){return Ti(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Yd(t,e[n]);return t})}};EA.className="Maximum",Ub.registerClass(EA);var AA=class extends NA{constructor(e){super(e)}mergeFunction(e){return Ti(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=rc(t,e[n]);return t})}};AA.className="Minimum",Ub.registerClass(AA);var RA=class extends NA{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new XI("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(null!=r){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let t=e[r].slice();t.splice(this.axis,1);let a=!1;for(let e of n)if(Ea.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new XI("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Ti(()=>aN(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new XI("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new XI("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new XI("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new XI(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Ti(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;let r=[];for(let s=0;s<e.length;++s)null==t[s]?r.push(tl(xc(e[s]),"bool")):t[s].rank<e[s].rank?r.push(Ah(t[s],-1)):r.push(t[s]);let a=du(r,this.axis);return Il(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function $A(e,t){for(;e<0;)e+=t;return e}function FA(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new YI("batchDot is not implemented for tensors of 4D or higher rank yet");if(Ea.assert(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length),Ea.assert(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new YI("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return Ti(()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=iu(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=iu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?vh(cl(e,t),s[0]):vh(cl(mg(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=fu(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=Am(i,t)}return 1===i.shape.length&&(i=Ah(i,1)),i})}RA.className="Concatenate",Ub.registerClass(RA);var DA=class extends NA{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Ea.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new YI("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new XI(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new XI(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>$A(t,e[n].shape.length)):[$A(this.axes,n.shape.length),$A(this.axes,r.shape.length)],this.normalize&&(n=f_(n,t[0]),r=f_(r,t[1])),FA(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[$A(this.axes,e.length),$A(this.axes,t.length)],n}computeOutputShape(e){Ea.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new YI("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};DA.className="Dot",Ub.registerClass(DA);var MA=class extends aT{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Ti(()=>{this.invokeCallHook(e,t);let n=HN(e);return yN(()=>ol(oN(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};MA.className="GaussianNoise",Ub.registerClass(MA);var OA=class extends aT{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ti(()=>{this.invokeCallHook(e,t);let n=HN(e);return this.rate>0&&this.rate<1?yN(()=>{let e=Math.sqrt(this.rate/(1-this.rate));return cl(n,oN(n.shape,1,e))},()=>n,t.training||!1):n})}};OA.className="GaussianDropout",Ub.registerClass(OA);var LA=class extends aT{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||HN(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ti(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return yN(()=>{let t=HN(e),r=-1.7580993408473766,a=Gh(If(n),this.rate);a=YS(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=ol(cl(t,a),cl(ol(a,-1),r));return ol(cl(o,s),i)},()=>HN(e),t.training||!1)}return e})}};function PA(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=Eu(e,t,n,r,a,s);else if(3===e.rank)i=Ru(e,t,n,r,a,s);else{if(4!==e.rank)throw new YI(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Fu(e,t,n,r,a,s)}return i}function zA(e,t,n,r,a=.001){return Ti(()=>{let s=uc(e,r),i=s.mean,o=s.variance;return[PA(e,i,o,n,t,a),i,o]})}function BA(e,t,n,r,a=.001){return Ti(()=>{let s=uc(e,r),i=s.mean,o=s.variance,l=[];for(let t of qS(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=iu(i,l),p=iu(o,l),h=null==t?null:iu(t,l),d=null==n?null:iu(n,l);return[PA(e,u,p,d,h,a),i,o]})}function WA(e,t,n,r,a=.001){return Ea.arraysEqual(r.slice().sort(),qS(0,e.rank-1))?zA(e,t,n,r,a):BA(e,t,n,r,a)}LA.className="AlphaDropout",Ub.registerClass(LA);var VA=class extends aT{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=VN(e.betaInitializer||"zeros"),this.gammaInitializer=VN(e.gammaInitializer||"ones"),this.movingMeanInitializer=VN(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=VN(e.movingVarianceInitializer||"ones"),this.betaConstraint=FT(e.betaConstraint),this.gammaConstraint=FT(e.gammaConstraint),this.betaRegularizer=NE(e.betaRegularizer),this.gammaRegularizer=NE(e.gammaRegularizer)}build(e){e=jN(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new XI(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new QN({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Ti(()=>{let n=null!=t.training&&t.training,r=HN(e),a=r.shape,s=a.length,i=qS(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=QI(1,s);l[o]=a[o];let u=i.slice();u.sort();let p=!Ea.arraysEqual(u,qS(0,s).slice(0,s-1)),h=()=>{if(p){let e=iu(this.movingMean.read(),l),t=iu(this.movingVariance.read(),l),n=this.center?iu(this.beta.read(),l):null,a=this.scale?iu(this.gamma.read(),l):null;return PA(r,e,t,n,a,this.epsilon)}return PA(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return h();let[d,c,f]=WA(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{Ti(()=>{let r=1-n,a=e.read(),s=cl(Td(a,t),r);e.write(Td(a,s))})};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:WN(this.betaInitializer),gammaInitializer:WN(this.gammaInitializer),movingMeanInitializer:WN(this.movingMeanInitializer),movingVarianceInitializer:WN(this.movingVarianceInitializer),betaRegularizer:IE(this.betaRegularizer),gammaRegularizer:IE(this.gammaRegularizer),betaConstraint:RT(this.betaConstraint),gammaConstraint:RT(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};VA.className="BatchNormalization",Ub.registerClass(VA);var UA=class extends aT{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(let e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=VN(e.betaInitializer||"zeros"),this.gammaInitializer=VN(e.gammaInitializer||"ones"),this.betaRegularizer=NE(e.betaRegularizer),this.gammaRegularizer=NE(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=jN(e);let t=e.length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error("Invalid axis: "+a);if(this.axis.length!==dS(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);let n=this.axis.map(t=>e[t]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=HN(e),r=n.shape,a=r.length;return Ti(()=>{let{mean:e,variance:t}=uc(n,this.axis,!0),s=QI(1,a);for(let n of this.axis)s[n]=r[n];let i=e=>null!=e&&e.shape.length!==a?iu(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],p=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),p.push(1)):(u.push(1),p.push(r[n]));return e=Dh(e,u),t=Dh(t,u),null!=o&&(o=Dh(o,p)),null!=l&&(l=Dh(l,p)),PA(n,e,t,l,o,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:WN(this.betaInitializer),gammaInitializer:WN(this.gammaInitializer),betaRegularizer:IE(this.betaRegularizer),gammaRegularizer:IE(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};function GA(e,t,n){return Ti(()=>{if(4!==e.rank)throw new XI(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new XI("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=XS()),"channelsLast"!==n&&"channelsFirst"!==n)throw new XI(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],Ic(e,r)})}UA.className="LayerNormalization",Ub.registerClass(UA);var HA=class extends aT{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?XS():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new XI(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new XI(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new XI(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new QN({ndim:4})]}computeOutputShape(e){let t,n;return e=jN(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Ti(()=>GA(HN(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function jA(e,t,n,r,a,s){return Ti(()=>{AS(a),FS(s),$S(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a=XS()),null==s&&(s="max"),e=ME(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Gd(e,t,n,o):lu(e,t,n,o),"channelsFirst"===a&&(i=mg(i,[0,3,1,2])),i})}function qA(e,t,n,r,a,s){return Ti(()=>{AS(a),FS(s),$S(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a=XS()),null==s&&(s="max"),e=OE(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?jd(e,t,n,o):pu(e,t,n,o),"channelsFirst"===a&&(i=mg(i,[0,4,1,2,3])),i})}HA.className="ZeroPadding2D",Ub.registerClass(HA);var KA=class extends aT{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new XI("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(gS(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new XI("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}gS(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,$S(this.padding),this.inputSpec=[new QN({ndim:3})]}computeOutputShape(e){e=jN(e);let t=FE(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Ti(()=>{this.invokeCallHook(e,t),e=JS(HN(e),2);let n=this.poolingFunction(HN(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Am(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},XA=class extends KA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return AS(a),$S(r),jA(e,t,n,r,a,"max")}};XA.className="MaxPooling1D",Ub.registerClass(XA);var YA=class extends KA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return AS(a),$S(r),jA(e,t,n,r,a,"avg")}};YA.className="AveragePooling1D",Ub.registerClass(YA);var JA=class extends aT{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new XI(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];gS(this.poolSize,"poolSize"),gS(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,AS(this.dataFormat),$S(this.padding),this.inputSpec=[new QN({ndim:4})]}computeOutputShape(e){e=jN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=FE(t,this.poolSize[0],this.padding,this.strides[0]),n=FE(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Ti(()=>(this.invokeCallHook(e,t),this.poolingFunction(HN(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ZA=class extends JA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return AS(a),$S(r),jA(e,t,n,r,a,"max")}};ZA.className="MaxPooling2D",Ub.registerClass(ZA);var QA=class extends JA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return AS(a),$S(r),jA(e,t,n,r,a,"avg")}};QA.className="AveragePooling2D",Ub.registerClass(QA);var eR=class extends aT{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new XI(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];gS(this.poolSize,"poolSize"),gS(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,AS(this.dataFormat),$S(this.padding),this.inputSpec=[new QN({ndim:5})]}computeOutputShape(e){e=jN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=FE(t,this.poolSize[0],this.padding,this.strides[0]),n=FE(n,this.poolSize[1],this.padding,this.strides[1]),r=FE(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Ti(()=>(this.invokeCallHook(e,t),this.poolingFunction(HN(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},tR=class extends eR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return AS(a),$S(r),qA(e,t,n,r,a,"max")}};tR.className="MaxPooling3D",Ub.registerClass(tR);var nR=class extends eR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return AS(a),$S(r),qA(e,t,n,r,a,"avg")}};nR.className="AveragePooling3D",Ub.registerClass(nR);var rR=class extends aT{constructor(e){super(e),this.inputSpec=[new QN({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new YI}},aR=class extends rR{constructor(e){super(e||{})}call(e,t){return Ti(()=>{let t=HN(e);return Zd(t,1)})}};aR.className="GlobalAveragePooling1D",Ub.registerClass(aR);var sR=class extends rR{constructor(e){super(e||{})}call(e,t){return Ti(()=>{let t=HN(e);return ph(t,1)})}};sR.className="GlobalMaxPooling1D",Ub.registerClass(sR);var iR=class extends aT{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,AS(this.dataFormat),this.inputSpec=[new QN({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new YI}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},oR=class extends iR{call(e,t){return Ti(()=>{let t=HN(e);return"channelsLast"===this.dataFormat?Zd(t,[1,2]):Zd(t,[2,3])})}};oR.className="GlobalAveragePooling2D",Ub.registerClass(oR);var lR=class extends iR{call(e,t){return Ti(()=>{let t=HN(e);return"channelsLast"===this.dataFormat?ph(t,[1,2]):ph(t,[2,3])})}};lR.className="GlobalMaxPooling2D",Ub.registerClass(lR);var uR=class extends aT{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,a=c_(r,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},pR=class extends uR{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=jN(e),e.length<3)throw new XI("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=jN(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Ti(()=>(e=HN(e),eA((e,n)=>[HN(this.layer.call(e,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};function hR(e){fS(CS,"BidirectionalMergeMode",e)}pR.className="TimeDistributed",Ub.registerClass(pR);var dR="concat",cR=class extends uR{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=c_(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=c_(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?dR:e.mergeMode,hR(this.mergeMode),e.weights)throw new YI("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState&&(r=a.slice(1)),t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):nS(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=QE(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new XI("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map(e=>new QN({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new YI("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof eT;for(let l of s)if(l instanceof eT!==o)throw new XI("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Ti(()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=Of(r,1)),"concat"===this.mergeMode?s=aN([n,r]):"sum"===this.mergeMode?s=ol(n,r):"ave"===this.mergeMode?s=cl(.5,ol(n,r)):"mul"===this.mergeMode?s=cl(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){OS(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),OS(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=c_(t.layer);if(delete t.layer,null!=t.numConstants)throw new YI("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};cR.className="Bidirectional",Ub.registerClass(cR);var fR=class extends aT{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ti(()=>(e=HN(e),"float32"!==e.dtype&&(e=YS(e,"float32")),ol(cl(e,this.scale),this.offset)))}};fR.className="Rescaling",Ub.registerClass(fR);var{resizeBilinear:mR,cropAndResize:gR}=Pb,yR=class extends aT{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return Ti(()=>{let l,u=!1,p=t/s,h=n/i,d=(r+t)/s,c=(a+n)/i,f=[p,h,d,c],m=[];3===e.rank?(u=!0,l=$m([e])):l=e;for(let e=0;e<l.shape[0];e++)m.push(f);let g=fi(m,[m.length,4]),y=Tf(0,m.length,1,"int32"),b=gR(l,g,y,[r,a],"nearest");return YS(u?HN(ig(b)):b,o)})}upsize(e,t,n,r){return Ti(()=>{let a=mR(e,[t,n]);return YS(a,r)})}call(e,t){return Ti(()=>{let t=HN(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2],i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=jN(e);let t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};function bR(e,t,n,r){let a=HN(e);if("int32"!==a.dtype&&(a=YS(a,"int32")),"int"===t)return a;let s=a.shape;if(0===a.rank&&(a=Ah(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=Ah(a,-1)),a.rank>2)throw new XI(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i,o=["multiHot","oneHot"].includes(t),l=a;if(i=Sp(l,"undefined"!=typeof r&&"count"===t?r:[],n,o),"tfIdf"!==t)return i;if(r)return cl(i,r);throw new XI("When outputMode is 'tfIdf', weights must be provided.")}yR.className="CenterCrop",Ub.registerClass(yR);var xR=class extends aT{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=jN(e),null==e?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Ti(()=>{let n;if(e=HN(e),"int32"!==e.dtype&&(e=YS(e,"int32")),"undefined"!=typeof t.countWeights){if("count"!==this.outputMode)throw new XI("countWeights is not used when outputMode !== count.\n              Received countWeights="+t.countWeights);n=HN(t.countWeights)}let r=ph(e),a=dh(e),s=Vh(this.numTokens,r).bufferSync().get(0),i=Gh(a,0).bufferSync().get(0);if(!s||!i)throw new XI("Input values must be between 0 < values <= numTokens with numTokens="+this.numTokens);return bR(e,this.outputMode,this.numTokens,n)})}};xR.className="CategoryEncoding",Ub.registerClass(xR);var wR=["bilinear","nearest"],vR=new Set(wR),kR=class extends aT{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!vR.has(e.interpolation))throw new XI(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=jN(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ti(()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return Pb.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Pb.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...vR]} are supported`)})}};kR.className="Resizing",Ub.registerClass(kR);var IR=class{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}};IR.className="RandomSeed";var SR=class extends aT{constructor(e){super(e),this.randomGenerator=new IR(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}};SR.className="BaseRandomLayer";var NR=["bilinear","nearest"],TR=new Set(NR),_R=class extends SR{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new XI(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new XI("factor must have values larger than -1. Got: "+this.factor);if(this.widthUpper<this.widthLower)throw new XI(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!TR.has(n))throw new XI(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=jN(e);let t=e[2];return[this.imgHeight,-1,t]}call(e,t){return Ti(()=>{let t=HN(e);this.imgHeight=t.shape[t.shape.length-3];let n=t.shape[t.shape.length-2];this.widthFactor=If([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);let a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return Pb.resizeBilinear(e,a);case"nearest":return Pb.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...TR]} are supported`)}})}};function CR(e){return new pT(e)}function ER(e){return new EE(e)}function AR(e){return new TE(e)}function RR(e){return new _E(e)}function $R(e){return new CE(e)}function FR(e){return new RE(e)}function DR(e){return new AE(e)}function MR(e){return new KE(e)}function OR(e){return new VE(e)}function LR(e){return new GE(e)}function PR(e){return new UE(e)}function zR(e){return new HE(e)}function BR(e){return new qE(e)}function WR(e){return new XE(e)}function VR(e){return new YE(e)}function UR(e){return new ZE(e)}function GR(e){return new xA(e)}function HR(e){return new yA(e)}function jR(e){return new mA(e)}function qR(e){return new gA(e)}function KR(e){return new bA(e)}function XR(e){return new wA(e)}function YR(e){return new vA(e)}function JR(e){return new kA(e)}function ZR(e){return new SA(e)}function QR(e){return new TA(e)}function e$(e){return new CA(e)}function t$(e){return new RA(e)}function n$(e){return new EA(e)}function r$(e){return new AA(e)}function a$(e){return new _A(e)}function s$(e){return new DA(e)}function i$(e){return new VA(e)}function o$(e){return new UA(e)}function l$(e){return new HA(e)}function u$(e){return new YA(e)}function p$(e){return u$(e)}function h$(e){return u$(e)}function d$(e){return new QA(e)}function c$(e){return d$(e)}function f$(e){return d$(e)}function m$(e){return new nR(e)}function g$(e){return m$(e)}function y$(e){return m$(e)}function b$(e){return new aR(e)}function x$(e){return new oR(e)}function w$(e){return new sR(e)}function v$(e){return new lR(e)}function k$(e){return new XA(e)}function I$(e){return new ZA(e)}function S$(e){return new tR(e)}function N$(e){return new iA(e)}function T$(e){return new sA(e)}function _$(e){return new lA(e)}function C$(e){return new oA(e)}function E$(e){return new aA(e)}function A$(e){return new rA(e)}function R$(e){return new fA(e)}function $$(e){return new cA(e)}function F$(e){return new tA(e)}function D$(e){return new uA(e)}function M$(e){return new cR(e)}function O$(e){return new pR(e)}_R.className="RandomWidth",Ub.registerClass(_R);var L$=w$,P$=v$,z$=k$,B$=I$;function W$(e){return new MA(e)}function V$(e){return new OA(e)}function U$(e){return new LA(e)}function G$(e){return new IA(e)}function H$(e){return new fR(e)}function j$(e){return new yR(e)}function q$(e){return new kR(e)}function K$(e){return new xR(e)}function X$(e){return new _R(e)}var Y$={};function J$(e,t){return $_(e,t)}function Z$(e,t){return z_(e,t)}function Q$(e,t){return B_(e,t)}function eF(e,t){return F_(e,t)}function tF(e,t){return q_(e,t)}function nF(e,t){return L_(e,t)}function rF(e,t){return P_(e,t)}function aF(e,t){return E_(e,t)}function sF(e,t){return g_(e,t)}function iF(e,t){return y_(e,t)}function oF(e,t){return y_(e,t)}function lF(e,t){return y_(e,t)}function uF(e,t){return m_(e,t)}function pF(e,t){return m_(e,t)}function hF(e,t){return m_(e,t)}b(Y$,{MAPE:()=>oF,MSE:()=>pF,binaryAccuracy:()=>J$,binaryCrossentropy:()=>Z$,categoricalAccuracy:()=>eF,categoricalCrossentropy:()=>tF,cosineProximity:()=>aF,mape:()=>lF,meanAbsoluteError:()=>sF,meanAbsolutePercentageError:()=>iF,meanSquaredError:()=>uF,mse:()=>hF,precision:()=>nF,recall:()=>rF,sparseCategoricalAccuracy:()=>Q$});var dF={};b(dF,{modelFromJSON:()=>GC});var cF={};function fF(e){return new xE(e)}function mF(e){return wE(e)}function gF(e){return vE(e)}b(cF,{l1:()=>mF,l1l2:()=>fF,l2:()=>gF});var yF=class extends s_{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof VC))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function bF(e,t){return e<t}function xF(e,t){return e>t}var wF=class extends yF{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new YI("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=bF:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=xF:this.monitorFunc=bF,this.monitorFunc===bF&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===bF?1/0:-1/0}async onEpochEnd(e,t){await n_(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function vF(e){return new wF(e)}var kF,IF,SF={earlyStopping:vF},NF=Ge();NF.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(kF||(kF={})),function(e){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(IF||(IF={}));var TF={};function _F(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};TF[e]=n}function CF(e){return TF[e]}function EF(e){delete TF[e]}function AF(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return RF(t.inputNames[o],n,r,a);if("tensors"===s.type){let s=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)}).map(e=>RF(e,n,r,a))}let l=RF(t.inputNames[o],n,r,a),u=l.dataSync();return"number"===s.type?u[0]:Ea.toNestedArray(l.shape,u)}let i=t.attrParams[e];return i&&i.value}function RF(e,t,n,r){let[a,s]=MF(e,n);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find(e=>!!t[DF(a,e)]);return void 0!==i?t[DF(a,i)][s]:void 0}function $F(e,t,n){return t[DF(e,n.currentContextId)]}function FF(e,t){let[n,r,a]=MF(e,t);return[DF(n,t&&t.currentContextId),r,a]}function DF(e,t){return t?`${e}-${t}`:e}function MF(e,t){if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let n=t.parseNodeNameCache.get(e);if(null!=n)return n}let r,a=e.split(":");if(1===a.length)r=[e,0,void 0];else{let e=a[0],t=3===a.length?a[1]:void 0,n=Number(a[a.length-1]);r=[e,n,t]}return n&&t.parseNodeNameCache.set(e,r),r}function OF(e,t,n){let r=AF("pad",e,t,n);if("explicit"===r){r=AF("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function LF(e){return e.kept?e:rl(e)}var PF={};b(PF,{json:()=>zF});var zF=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],BF={};b(BF,{json:()=>WF});var WF=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VF={};b(VF,{json:()=>UF});var UF=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],GF={};b(GF,{json:()=>HF});var HF=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],jF={};b(jF,{json:()=>qF});var qF=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],KF={};b(KF,{json:()=>XF});var XF=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],YF={};b(YF,{json:()=>JF});var JF=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],ZF={};b(ZF,{json:()=>QF});var QF=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],eD={};b(eD,{json:()=>tD});var tD=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],nD={};b(nD,{json:()=>rD});var rD=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],aD={};b(aD,{json:()=>sD});var sD=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],iD={};b(iD,{json:()=>oD});var oD=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],lD={};b(lD,{json:()=>uD});var uD=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],pD={};b(pD,{json:()=>hD});var hD=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],dD={};b(dD,{json:()=>cD});var cD=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],fD={};b(fD,{json:()=>mD});var mD=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],gD={};b(gD,{json:()=>yD});var yD=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],bD={};b(bD,{json:()=>xD});var xD=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],wD={};b(wD,{json:()=>vD});var vD=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],kD=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[PF,BF,VF,GF,jF,KF,YF,ZF,eD,nD,aD,iD,lD,pD,dD,fD,gD,bD,wD],t=[].concat(...e.map(e=>e.json));this.opMappers=t.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e),{}),o=[],l=[],u={},p={};null!=t&&(u=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach(e=>{let t=i[e];t.inputNames.forEach((e,n)=>{let[r,,a]=FF(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(p).length?h.forEach(e=>{let t=i[e];0===t.children.length&&l.push(t)}):Object.keys(p).forEach(e=>{let[t]=FF(e),n=i[t];null!=n&&(n.signatureKey=p[e],l.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{let[t]=FF(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))}):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=CF(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=ND(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ND(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=MD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=MD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=_D(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=_D(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=DD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=DD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=TD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=TD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=LD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=LD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=FD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=FD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=OD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=OD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=AD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=AD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=RD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=RD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=ED(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ED(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],a={};null!=t&&(a=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e),{}));let s=[],i=[];e.signature.inputArg.forEach(e=>{let[t]=FF(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:CD(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),a[t]=n}),Object.keys(a).forEach(e=>{let t=a[e];t.inputNames.forEach((e,n)=>{let[r,,s]=FF(e),i=a[r];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)})});let o=e.ret;e.signature.outputArg.forEach(e=>{let[t,n]=FF(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,i.push(r))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function ID(e){let t=Ge().global;if("undefined"!=typeof t.atob)return t.atob(e);if("undefined"!=typeof i)return new i(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function SD(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):ID(e);return t?n:n.toLowerCase()}function ND(e,t,n,r=!1){let a=e[t];return null!=a?SD(a.s,r):n}function TD(e,t,n){let r=e[t];return r?r.b:n}function _D(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function CD(e){switch("string"==typeof e&&(e=kF[e]),e){case kF.DT_FLOAT:case kF.DT_HALF:return"float32";case kF.DT_INT32:case kF.DT_INT64:case kF.DT_INT8:case kF.DT_UINT8:return"int32";case kF.DT_BOOL:return"bool";case kF.DT_DOUBLE:return"float32";case kF.DT_STRING:return"string";case kF.DT_COMPLEX64:case kF.DT_COMPLEX128:return"complex64";default:return null}}function ED(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function AD(e,t,n){let r=e[t];return r&&r.type?CD(r.type):n}function RD(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>CD(e)):n}function $D(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function FD(e,t,n){let r=e[t];return r&&r.shape?$D(r.shape):n}function DD(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function MD(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>SD(e,r)):n}function OD(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>$D(e)):n}function LD(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var PD=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return RF(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return RF(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return _D(this.node.rawAttrs,e,t);if(null!=n.s)return ND(this.node.rawAttrs,e,t);if(null!=n.b)return TD(this.node.rawAttrs,e,t);if(null!=n.shape)return FD(this.node.rawAttrs,e,t);if(null!=n.type)return AD(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return DD(this.node.rawAttrs,e,t);if(null!=n.list.s)return MD(this.node.rawAttrs,e,t);if(null!=n.list.shape)return OD(this.node.rawAttrs,e,t);if(null!=n.list.b)return LD(this.node.rawAttrs,e,t);if(null!=n.list.type)return RD(this.node.rawAttrs,e,t)}return t}},zD={};b(zD,{OP_SCOPE_SUFFIX:()=>ui,abs:()=>ml,acos:()=>yl,acosh:()=>xl,add:()=>ol,addN:()=>vl,all:()=>Il,any:()=>Nl,argMax:()=>_l,argMin:()=>El,asin:()=>Rl,asinh:()=>Fl,atan:()=>Ml,atan2:()=>Ll,atanh:()=>zl,avgPool:()=>lu,avgPool3d:()=>pu,basicLSTMCell:()=>ku,batchNorm:()=>_u,batchNorm2d:()=>Eu,batchNorm3d:()=>Ru,batchNorm4d:()=>Fu,batchToSpaceND:()=>Su,bincount:()=>Mu,bitwiseAnd:()=>Lu,booleanMaskAsync:()=>cg,broadcastArgs:()=>zu,broadcastTo:()=>Wu,buffer:()=>Qo,cast:()=>tl,ceil:()=>Uu,clipByValue:()=>ju,clone:()=>rl,complex:()=>di,concat:()=>du,concat1d:()=>Ku,concat2d:()=>Yu,concat3d:()=>Zu,concat4d:()=>ep,conv1d:()=>ap,conv2d:()=>np,conv2dTranspose:()=>lp,conv3d:()=>pp,conv3dTranspose:()=>fp,cos:()=>gp,cosh:()=>bp,cosineWindow:()=>Eg,cumprod:()=>wp,cumsum:()=>kp,denseBincount:()=>Sp,depthToSpace:()=>Tp,depthwiseConv2d:()=>Cp,diag:()=>Ap,dilation2d:()=>$p,div:()=>hl,divNoNan:()=>Gp,dot:()=>jp,dropout:()=>_g,einsum:()=>Kp,elu:()=>Yp,enclosingPowerOfTwo:()=>Cg,ensureShape:()=>Zp,equal:()=>Pp,erf:()=>eh,euclideanNorm:()=>Th,exp:()=>Ch,expandDims:()=>Ah,expm1:()=>$h,eye:()=>Oh,fft:()=>bm,fill:()=>Gu,floor:()=>Ph,floorDiv:()=>ul,fused:()=>$g,gather:()=>Bh,gatherND:()=>Sg,greater:()=>Vh,greaterEqual:()=>Gh,ifft:()=>wm,imag:()=>jh,image:()=>Pb,inTopKAsync:()=>Rg,irfft:()=>km,isFinite:()=>Kh,isInf:()=>Yh,isNaN:()=>Zh,leakyRelu:()=>ed,less:()=>nd,lessEqual:()=>ad,linalg:()=>zb,linspace:()=>sd,localResponseNormalization:()=>od,log:()=>ud,log1p:()=>hd,logSigmoid:()=>Sd,logSoftmax:()=>Cd,logSumExp:()=>Ad,logicalAnd:()=>$d,logicalNot:()=>Dd,logicalOr:()=>Od,logicalXor:()=>Pd,losses:()=>Bb,lowerBound:()=>Vd,matMul:()=>fu,max:()=>ph,maxPool:()=>Gd,maxPool3d:()=>jd,maxPoolWithArgmax:()=>Kd,maximum:()=>Yd,mean:()=>Zd,meshgrid:()=>tc,min:()=>dh,minimum:()=>rc,mirrorPad:()=>sc,mod:()=>oc,moments:()=>uc,movingAverage:()=>yg,mul:()=>cl,multiRNNCell:()=>hc,multinomial:()=>cc,neg:()=>wd,norm:()=>Sh,notEqual:()=>mc,oneHot:()=>yc,ones:()=>ec,onesLike:()=>xc,op:()=>pi,outerProduct:()=>vc,pad:()=>Ic,pad1d:()=>Nc,pad2d:()=>_c,pad3d:()=>Ec,pad4d:()=>Rc,pool:()=>Lc,pow:()=>fh,prelu:()=>zc,print:()=>al,prod:()=>Wc,raggedGather:()=>Uc,raggedRange:()=>Hc,raggedTensorToTensor:()=>qc,rand:()=>Xc,randomGamma:()=>yf,randomNormal:()=>xf,randomStandardNormal:()=>vf,randomUniform:()=>If,randomUniformInt:()=>Nf,range:()=>Tf,real:()=>Cf,reciprocal:()=>Af,relu:()=>$f,relu6:()=>Df,reshape:()=>iu,reverse:()=>Of,reverse1d:()=>Pf,reverse2d:()=>Bf,reverse3d:()=>Vf,reverse4d:()=>Gf,rfft:()=>Tm,round:()=>jf,rsqrt:()=>Kf,scalar:()=>mh,scatterND:()=>xg,searchSorted:()=>Wd,selu:()=>Yf,separableConv2d:()=>Zf,setdiff1dAsync:()=>em,sigmoid:()=>gu,sign:()=>nm,signal:()=>Lb,sin:()=>am,sinh:()=>im,slice:()=>bu,slice1d:()=>lm,slice2d:()=>pm,slice3d:()=>dm,slice4d:()=>fm,softmax:()=>gm,softplus:()=>kd,spaceToBatchND:()=>Fc,sparse:()=>Wb,sparseToDense:()=>kg,spectral:()=>Ob,split:()=>Sm,sqrt:()=>yh,square:()=>xh,squaredDifference:()=>Cm,squeeze:()=>Am,stack:()=>$m,step:()=>Dm,stridedSlice:()=>Om,string:()=>Vb,sub:()=>Td,sum:()=>vh,tan:()=>Pm,tanh:()=>wu,tensor:()=>fi,tensor1d:()=>zm,tensor2d:()=>Bm,tensor3d:()=>Wm,tensor4d:()=>Vm,tensor5d:()=>Um,tensor6d:()=>Gm,tensorScatterUpdate:()=>Ym,tile:()=>Dh,topk:()=>Zm,transpose:()=>mg,truncatedNormal:()=>eg,unique:()=>ng,unsortedSegmentSum:()=>ag,unstack:()=>ig,upperBound:()=>og,variable:()=>lg,where:()=>Bp,whereAsync:()=>hg,zeros:()=>Qd,zerosLike:()=>Vp});var BD=(e,t,n,r=zD)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(AF("a",e,t,n),AF("b",e,t,n))];case"AddN":return[r.addN(AF("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(AF("a",e,t,n),AF("b",e,t,n))];case"Mul":return[r.mul(AF("a",e,t,n),AF("b",e,t,n))];case"RealDiv":case"Div":return[r.div(AF("a",e,t,n),AF("b",e,t,n))];case"DivNoNan":return[r.divNoNan(AF("a",e,t,n),AF("b",e,t,n))];case"FloorDiv":return[r.floorDiv(AF("a",e,t,n),AF("b",e,t,n))];case"Sub":return[r.sub(AF("a",e,t,n),AF("b",e,t,n))];case"Minimum":return[r.minimum(AF("a",e,t,n),AF("b",e,t,n))];case"Maximum":return[r.maximum(AF("a",e,t,n),AF("b",e,t,n))];case"Pow":return[r.pow(AF("a",e,t,n),AF("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(AF("a",e,t,n),AF("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},WD=(e,t,n,r=zD)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(AF("x",e,t,n))];case"Acos":return[r.acos(AF("x",e,t,n))];case"Acosh":return[r.acosh(AF("x",e,t,n))];case"Asin":return[r.asin(AF("x",e,t,n))];case"Asinh":return[r.asinh(AF("x",e,t,n))];case"Atan":return[r.atan(AF("x",e,t,n))];case"Atan2":return[r.atan2(AF("x",e,t,n),AF("y",e,t,n))];case"Atanh":return[r.atanh(AF("x",e,t,n))];case"Ceil":return[r.ceil(AF("x",e,t,n))];case"Complex":return[r.complex(AF("real",e,t,n),AF("imag",e,t,n))];case"Cos":return[r.cos(AF("x",e,t,n))];case"Cosh":return[r.cosh(AF("x",e,t,n))];case"Elu":return[r.elu(AF("x",e,t,n))];case"Erf":return[r.erf(AF("x",e,t,n))];case"Exp":return[r.exp(AF("x",e,t,n))];case"Expm1":return[r.expm1(AF("x",e,t,n))];case"Floor":return[r.floor(AF("x",e,t,n))];case"Log":return[r.log(AF("x",e,t,n))];case"Log1p":return[r.log1p(AF("x",e,t,n))];case"Imag":return[r.imag(AF("x",e,t,n))];case"Neg":return[r.neg(AF("x",e,t,n))];case"Reciprocal":return[r.reciprocal(AF("x",e,t,n))];case"Real":return[r.real(AF("x",e,t,n))];case"Relu":return[r.relu(AF("x",e,t,n))];case"Round":return[r.round(AF("x",e,t,n))];case"Selu":return[r.selu(AF("x",e,t,n))];case"Sigmoid":return[r.sigmoid(AF("x",e,t,n))];case"Sin":return[r.sin(AF("x",e,t,n))];case"Sign":return[r.sign(AF("x",e,t,n))];case"Sinh":return[r.sinh(AF("x",e,t,n))];case"Softplus":return[r.softplus(AF("x",e,t,n))];case"Sqrt":return[r.sqrt(AF("x",e,t,n))];case"Square":return[r.square(AF("x",e,t,n))];case"Tanh":return[r.tanh(AF("x",e,t,n))];case"Tan":return[r.tan(AF("x",e,t,n))];case"ClipByValue":return[r.clipByValue(AF("x",e,t,n),AF("clipValueMin",e,t,n),AF("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(AF("x",e,t,n))];case"Rsqrt":return[r.rsqrt(RF(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(AF("x",e,t,n),AF("alpha",e,t,n))];case"Prelu":return[r.prelu(AF("x",e,t,n),AF("alpha",e,t,n))];case"IsNan":return[r.isNaN(RF(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(RF(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(RF(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function VD(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){Ea.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];Ea.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function UD(e){return!("number"==typeof e||e.some(e=>e<0))}function GD(e,t,n){let r=HD(e,n),a=!UD(r);if(a&&0===t.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(a&&t.forEach(e=>{r=HD(e.shape,r)}),!UD(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function HD(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var jD=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=mh(0),Ci(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),VD(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Ci(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return fi([],[0].concat(this.elementShape));let n=this.readMany(e);return VD(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),$m(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return fi([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return VD(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),du(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ig(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];Ti(()=>{t=iu(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=iu(bu(t,i,o),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},qD=class e{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);VD(t,e.shape,"TensorList shape mismatch: "),Ci(e)}),this.idTensor=mh(0),this.maxNumElements=r,Ci(this.idTensor)}copy(){return new e([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);VD(e,this.elementShape,"TensorList shape mismatch: ");let r=GD(this.elementShape,this.tensors,e);return Ti(()=>{let e=this.tensors.map(e=>iu(e,r));return $m(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=GD(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,VD(r.shape,e,"TensorList shape mismatch: "),iu(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(VD(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ci(e),this.tensors.push(e)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+t);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let n=new e([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let e=0;e<Math.min(this.tensors.length,t);++e)n.tensors[e]=this.tensors[e];return n}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);VD(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=GD(this.elementShape,this.tensors,t);return iu(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);VD(this.elementShape,t.shape,"TensorList shape mismatch: "),Ci(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);VD(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=GD(this.elementShape,this.tensors,n);return 0===e.length?fi([],[0].concat(r)):Ti(()=>{let t=e.map(e=>iu(this.tensors[e],r));return $m(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);VD(this.elementShape,t,"TensorList shape mismatch: ");let n=GD(this.elementShape,this.tensors,t);return 0===this.size()?fi([],[0].concat(n)):Ti(()=>{let e=this.tensors.map(e=>iu(e,n));return du(e,0)})}};function KD(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let a=e.shape.slice(1);VD(a,t,"TensorList shape mismatch: ");let s=ig(e);return new qD(s,t,r)}function XD(e,t,n,r){return new qD([],e,t,r)}function YD(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new qD([],n,e.dtype,r),i=ig(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}function JD(e,t,n){let r=0,a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=HD(s,n),o=0===r?0:e.size/r,l=Ti(()=>{let n=[];e=iu(e,[1,r,o]);for(let r=0;r<t.length;++r){let s=[0,0===r?0:a[r-1],0],l=[1,t[r],o];n[r]=iu(bu(e,s,l),i)}return e.dispose(),n}),u=new qD([],n,e.dtype,t.length);for(let p=0;p<l.length;p++)u.setItem(p,l[p]);return u}var ZD=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=AF("thenBranch",e,t,n),a=AF("elseBranch",e,t,n),s=AF("cond",e,t,n),i=AF("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=AF("body",e,t,n),a=AF("cond",e,t,n),s=AF("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(e=>e.id),l=await i[0].data();i.forEach(e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()});let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map(e=>e.id);e.forEach(e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()});let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach(e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()})}return u}case"LoopCond":{let r=AF("pred",e,t,n);return[LF(r)]}case"Switch":{let r=AF("pred",e,t,n),a=AF("data",e,t,n);return a.kept||(a=LF(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(e=>void 0!==RF(e,t,n));if(r){let e=RF(r,t,n);return[LF(e)]}return}case"Enter":{let r=AF("frameName",e,t,n),a=AF("tensor",e,t,n);return n.enterFrame(r),[LF(a)]}case"Exit":{let r=AF("tensor",e,t,n);return n.exitFrame(),[LF(r)]}case"NextIteration":{let r=AF("tensor",e,t,n);return n.nextIteration(),[LF(r)]}case"TensorArrayV3":{let r=AF("size",e,t,n),a=AF("dtype",e,t,n),s=AF("elementShape",e,t,n),i=AF("dynamicSize",e,t,n),o=AF("clearAfterRead",e,t,n),l=AF("identicalElementShapes",e,t,n),u=AF("name",e,t,n),p=new jD(u,a,r,s,l,i,o);return n.addTensorArray(p),[p.idTensor,mh(1)]}case"TensorArrayWriteV3":{let r=AF("tensorArrayId",e,t,n),a=AF("index",e,t,n),s=AF("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=AF("tensorArrayId",e,t,n),a=AF("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=AF("tensorArrayId",e,t,n),a=AF("indices",e,t,n),s=AF("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=AF("tensorArrayId",e,t,n),a=AF("indices",e,t,n),s=AF("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=AF("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=AF("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=AF("tensorArrayId",e,t,n),a=AF("tensor",e,t,n),s=AF("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=AF("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[mh(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=AF("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=AF("tensorListId",e,t,n),a=AF("index",e,t,n),s=AF("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=AF("tensorListId",e,t,n),a=AF("index",e,t,n),s=AF("elementShape",e,t,n),i=AF("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=AF("indices",e,t,n),a=AF("tensor",e,t,n),s=AF("elementShape",e,t,n),i=AF("numElements",e,t,n),o=YD(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=AF("elementShape",e,t,n),s=AF("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=AF(r,e,t,n),o="TensorListReserve"===e.op?-1:i,l=XD(a,s,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let r=AF("tensorListId",e,t,n),a=AF("indices",e,t,n),s=AF("elementShape",e,t,n),i=AF("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=AF("tensorListId",e,t,n),a=AF("elementShape",e,t,n),s=AF("elementDType",e,t,n),i=AF("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=AF("tensor",e,t,n),a=AF("elementShape",e,t,n),s=AF("elementDType",e,t,n),i=KD(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=AF("tensorListId",e,t,n),a=n.getTensorList(r.id),s=AF("dtype",e,t,n),i=AF("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=AF("tensorListId",e,t,n),a=AF("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=AF("tensorListId",e,t,n),a=AF("elementShape",e,t,n),s=AF("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=AF("tensor",e,t,n),a=AF("elementShape",e,t,n),s=AF("lengths",e,t,n),i=JD(r,s,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=AF("tensorListId",e,t,n),a=n.getTensorList(r.id);return[mh(a.size(),"int32")]}case"TensorListResize":{let r=AF("tensorListId",e,t,n),a=AF("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function QD(e,t,n){let[r,a]=AF("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=AF("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=AF("strides",e,t,n),h=OF(e,t,n),d=AF("dataFormat",e,t,n).toUpperCase(),c=AF("dilations",e,t,n),[f,m]=AF("args",e,t,n);i&&(m=f,f=void 0);let g=AF("leakyreluAlpha",e,t,n);return{stride:p,pad:h,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:g}}var eM=(e,t,n,r=zD)=>{switch(e.op){case"Conv1D":{let a=AF("stride",e,t,n),s=AF("pad",e,t,n),i=AF("dataFormat",e,t,n).toUpperCase(),o=AF("dilation",e,t,n);return[r.conv1d(AF("x",e,t,n),AF("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=AF("strides",e,t,n),s=OF(e,t,n),i=AF("dataFormat",e,t,n).toUpperCase(),o=AF("dilations",e,t,n);return[r.conv2d(AF("x",e,t,n),AF("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=QD(e,t,n);return[r.fused.conv2d({x:AF("x",e,t,n),filter:AF("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=QD(e,t,n);return[r.fused.depthwiseConv2d({x:AF("x",e,t,n),filter:AF("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=AF("outputShape",e,t,n),s=AF("strides",e,t,n),i=OF(e,t,n);return[r.conv2dTranspose(AF("x",e,t,n),AF("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=AF("strides",e,t,n),s=OF(e,t,n),i=AF("dilations",e,t,n),o=AF("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(AF("input",e,t,n),AF("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=AF("strides",e,t,n),s=AF("pad",e,t,n),i=AF("dataFormat",e,t,n).toUpperCase(),o=AF("dilations",e,t,n);return[r.conv3d(AF("x",e,t,n),AF("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=AF("strides",e,t,n),s=AF("pad",e,t,n),i=AF("kernelSize",e,t,n);return[r.avgPool(AF("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=AF("strides",e,t,n),s=AF("pad",e,t,n),i=AF("kernelSize",e,t,n);return[r.maxPool(AF("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=AF("strides",e,t,n),s=AF("pad",e,t,n),i=AF("kernelSize",e,t,n),o=AF("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(AF("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=AF("strides",e,t,n),s=AF("pad",e,t,n),i=AF("kernelSize",e,t,n);return[r.avgPool3d(AF("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=AF("strides",e,t,n),s=AF("pad",e,t,n),i=AF("kernelSize",e,t,n);return[r.maxPool3d(AF("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=AF("strides",e,t,n),s=AF("pad",e,t,n),i=AF("dilations",e,t,n),o=a[1],l=a[2],u=i[1],p=i[2];return[r.dilation2d(AF("x",e,t,n),AF("filter",e,t,n),[o,l],s,[u,p],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},tM=(e,t,n,r=zD)=>{switch(e.op){case"Fill":{let a=AF("shape",e,t,n),s=AF("dtype",e,t,n),i=AF("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=AF("start",e,t,n),s=AF("stop",e,t,n),i=AF("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=AF("logits",e,t,n),s=AF("numSamples",e,t,n),i=AF("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=AF("indices",e,t,n),s=AF("depth",e,t,n),i=AF("onValue",e,t,n),o=AF("offValue",e,t,n),l=AF("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(AF("shape",e,t,n),AF("dtype",e,t,n))];case"OnesLike":return[r.onesLike(AF("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(AF("shape",e,t,n),AF("dtype",e,t,n),AF("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(AF("shape",e,t,n),AF("minval",e,t,n),AF("maxval",e,t,n),AF("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(AF("shape",e,t,n),AF("minval",e,t,n),AF("maxval",e,t,n),AF("seed",e,t,n))];case"Range":{let a=AF("start",e,t,n),s=AF("stop",e,t,n),i=AF("step",e,t,n);return[r.range(a,s,i,AF("dtype",e,t,n))]}case"TruncatedNormal":{let a=AF("shape",e,t,n),s=AF("mean",e,t,n),i=AF("stdDev",e,t,n),o=AF("seed",e,t,n);return[r.truncatedNormal(a,s,i,AF("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(AF("shape",e,t,n),AF("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(AF("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function nM(e,t,n){let r=AF("boxes",e,t,n),a=AF("scores",e,t,n),s=AF("maxOutputSize",e,t,n),i=AF("iouThreshold",e,t,n),o=AF("scoreThreshold",e,t,n),l=AF("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var rM=async(e,t,n,r,a=zD)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=nM(e,t,n),p=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=nM(e,t,n),u=AF("padToMaxOutputSize",e,t,n),p=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=nM(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{let r=a.cast(AF("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(AF("x",e,t,n),AF("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},aM=(e,t,n,r=zD)=>{switch(e.op){case"LowerBound":{let a=AF("sortedSequence",e,t,n),s=AF("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=AF("x",e,t,n),s=AF("k",e,t,n),i=AF("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=AF("sortedSequence",e,t,n),s=AF("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=AF("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=AF("x",e,t,n),s=AF("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},sM=(e,t,n,r=zD)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=AF("default",e,t,n);return[RF(e.name,t,n)||a];case"Placeholder":return[RF(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let r=AF("x",e,t,n);return[LF(r)]}case"IdentityN":return AF("x",e,t,n).map(e=>LF(e));case"Snapshot":let s=AF("x",e,t,n);return[LF(s)];case"Shape":return[r.tensor1d(AF("x",e,t,n).shape,"int32")];case"ShapeN":return AF("x",e,t,n).map(e=>r.tensor1d(e.shape));case"Size":return[r.scalar(AF("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(AF("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=AF("x",e,t,n),o=AF("data",e,t,n),l=AF("message",e,t,n),u=AF("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},iM=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=mh(0),this.tensorMap=new Map,Ci(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return mh(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),Ti(()=>{let e=ig(t),r=n.length,a=e.length;Ea.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){let r=n[t],a=e[t];Ci(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Ti(()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return $m(e)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},oM=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=AF("keyDType",e,t,n),s=AF("valueDType",e,t,n),i=new iM(a,s);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=AF("tableHandle",e,t,n,r),s=AF("keys",e,t,n),i=AF("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=AF("tableHandle",e,t,n,r),s=AF("keys",e,t,n),i=AF("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=AF("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},lM=(e,t,n,r=zD)=>{switch(e.op){case"ResizeBilinear":{let a=AF("images",e,t,n),s=AF("size",e,t,n),i=AF("alignCorners",e,t,n),o=AF("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=AF("images",e,t,n),s=AF("size",e,t,n),i=AF("alignCorners",e,t,n),o=AF("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=AF("image",e,t,n),s=AF("boxes",e,t,n),i=AF("boxInd",e,t,n),o=AF("cropSize",e,t,n),l=AF("method",e,t,n),u=AF("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=AF("images",e,t,n),s=AF("transforms",e,t,n),i=AF("outputShape",e,t,n),o=AF("fillValue",e,t,n),l=AF("interpolation",e,t,n),u=AF("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},uM=(e,t,n,r=zD)=>{switch(e.op){case"Equal":return[r.equal(AF("a",e,t,n),AF("b",e,t,n))];case"NotEqual":return[r.notEqual(AF("a",e,t,n),AF("b",e,t,n))];case"Greater":return[r.greater(AF("a",e,t,n),AF("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(AF("a",e,t,n),AF("b",e,t,n))];case"Less":return[r.less(AF("a",e,t,n),AF("b",e,t,n))];case"LessEqual":return[r.lessEqual(AF("a",e,t,n),AF("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(AF("a",e,t,n),AF("b",e,t,n))];case"LogicalNot":return[r.logicalNot(AF("a",e,t,n))];case"LogicalOr":return[r.logicalOr(AF("a",e,t,n),AF("b",e,t,n))];case"Select":case"SelectV2":return[r.where(AF("condition",e,t,n),AF("a",e,t,n),AF("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(AF("a",e,t,n),AF("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},pM=(e,t,n,r=zD)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(AF("a",e,t,n),AF("b",e,t,n),AF("transposeA",e,t,n),AF("transposeB",e,t,n))];case"Einsum":return[r.einsum(AF("equation",e,t,n),...AF("tensors",e,t,n))];case"Transpose":return[r.transpose(AF("x",e,t,n),AF("perm",e,t,n))];case"_FusedMatMul":let[a,s]=AF("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===s,l=AF("numArgs",e,t,n),u=AF("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,h]=AF("args",e,t,n);return[r.fused.matMul({a:AF("a",e,t,n),b:AF("b",e,t,n),transposeA:AF("transposeA",e,t,n),transposeB:AF("transposeB",e,t,n),bias:p,activation:s,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(AF("a",e,t,n),AF("numLower",e,t,n),AF("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},hM=(e,t,n,r=zD)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(AF("x",e,t,n),AF("axis",e,t,n),AF("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(AF("x",e,t,n),AF("mean",e,t,n),AF("variance",e,t,n),AF("offset",e,t,n),AF("scale",e,t,n),AF("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm(AF("x",e,t,n),AF("mean",e,t,n),AF("variance",e,t,n),AF("offset",e,t,n),AF("scale",e,t,n),AF("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(AF("x",e,t,n),AF("radius",e,t,n),AF("bias",e,t,n),AF("alpha",e,t,n),AF("beta",e,t,n))];case"Softmax":return[r.softmax(AF("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(AF("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},dM=(e,t,n,r=zD)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(AF("paramsNestedSplits",e,t,n),AF("paramsDenseValues",e,t,n),AF("indices",e,t,n),AF("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(AF("starts",e,t,n),AF("limits",e,t,n),AF("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(AF("shape",e,t,n),AF("values",e,t,n),AF("defaultValue",e,t,n),AF("rowPartitionTensors",e,t,n),AF("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},cM=(e,t,n,r=zD)=>{switch(e.op){case"Max":{let a=AF("axis",e,t,n),s=AF("keepDims",e,t,n);return[r.max(AF("x",e,t,n),a,s)]}case"Mean":{let a=AF("axis",e,t,n),s=AF("keepDims",e,t,n);return[r.mean(AF("x",e,t,n),a,s)]}case"Min":{let a=AF("axis",e,t,n),s=AF("keepDims",e,t,n);return[r.min(AF("x",e,t,n),a,s)]}case"Sum":{let a=AF("axis",e,t,n),s=AF("keepDims",e,t,n);return[r.sum(AF("x",e,t,n),a,s)]}case"All":{let a=AF("axis",e,t,n),s=AF("keepDims",e,t,n);return[r.all(AF("x",e,t,n),a,s)]}case"Any":{let a=AF("axis",e,t,n),s=AF("keepDims",e,t,n);return[r.any(AF("x",e,t,n),a,s)]}case"ArgMax":{let a=AF("axis",e,t,n);return[r.argMax(AF("x",e,t,n),a)]}case"ArgMin":{let a=AF("axis",e,t,n);return[r.argMin(AF("x",e,t,n),a)]}case"Prod":{let a=AF("axis",e,t,n),s=AF("keepDims",e,t,n);return[r.prod(AF("x",e,t,n),a,s)]}case"Cumprod":{let a=AF("axis",e,t,n),s=AF("exclusive",e,t,n),i=AF("reverse",e,t,n);return[r.cumprod(AF("x",e,t,n),a,s,i)]}case"Cumsum":{let a=AF("axis",e,t,n),s=AF("exclusive",e,t,n),i=AF("reverse",e,t,n);return[r.cumsum(AF("x",e,t,n),a,s,i)]}case"Bincount":let a=AF("x",e,t,n),s=AF("weights",e,t,n),i=AF("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let a=AF("x",e,t,n),s=AF("weights",e,t,n),i=AF("size",e,t,n),o=AF("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},fM=(e,t,n,r=zD)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=AF("n",e,t,n),s=AF("axis",e,t,n),i=AF("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=AF("x",e,t,n),s=AF("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=AF("axis",e,t,n),s=AF("batchDims",e,t,n),i=AF("x",e,t,n),o=AF("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=AF("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=AF("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=AF("axis",e,t,n),s=AF("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=AF("begin",e,t,n),s=AF("size",e,t,n);return[r.slice(AF("x",e,t,n),a,s)]}case"StridedSlice":{let a=AF("begin",e,t,n),s=AF("end",e,t,n),i=AF("strides",e,t,n),o=AF("beginMask",e,t,n),l=AF("endMask",e,t,n),u=AF("ellipsisMask",e,t,n),p=AF("newAxisMask",e,t,n),h=AF("shrinkAxisMask",e,t,n),d=AF("x",e,t,n);return[r.stridedSlice(d,a,s,i,o,l,u,p,h)]}case"Pack":return Ti(()=>{let a=AF("axis",e,t,n),s=AF("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(e=>{let t=Ea.arraysEqual(e.shape,i);if(!t&&!Ea.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)});return[r.stack(l,a)]});case"Unpack":{let a=AF("axis",e,t,n),s=AF("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=AF("reps",e,t,n);return[r.tile(AF("x",e,t,n),a)]}case"Split":case"SplitV":{let a=AF("axis",e,t,n),s=AF("numOrSizeSplits",e,t,n),i=AF("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=AF("indices",e,t,n),s=AF("values",e,t,n),i=AF("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=AF("x",e,t,n),s=AF("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=AF("sparseIndices",e,t,n),s=AF("outputShape",e,t,n),i=AF("sparseValues",e,t,n),o=AF("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=AF("indices",e,t,n),s=AF("values",e,t,n),i=AF("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},mM=(e,t,n,r=zD)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(AF("indices",e,t,n),AF("values",e,t,n),AF("denseShape",e,t,n),AF("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(AF("inputIndices",e,t,n),AF("inputShape",e,t,n),AF("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(AF("data",e,t,n),AF("indices",e,t,n),AF("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(AF("data",e,t,n),AF("indices",e,t,n),AF("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},gM=(e,t,n,r=zD)=>{switch(e.op){case"FFT":return[r.fft(AF("x",e,t,n))];case"IFFT":return[r.ifft(AF("x",e,t,n))];case"RFFT":return[r.rfft(AF("x",e,t,n))];case"IRFFT":return[r.irfft(AF("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},yM=(e,t,n,r=zD)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(AF("input",e,t,n),AF("pattern",e,t,n),AF("rewrite",e,t,n),AF("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(AF("data",e,t,n),AF("dataSplits",e,t,n),AF("separator",e,t,n),AF("nGramWidths",e,t,n),AF("leftPad",e,t,n),AF("rightPad",e,t,n),AF("padWidth",e,t,n),AF("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(AF("input",e,t,n),AF("delimiter",e,t,n),AF("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(AF("input",e,t,n),AF("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},bM=(e,t,n,r=zD)=>{switch(e.op){case"Cast":return[r.cast(AF("x",e,t,n),AF("dtype",e,t,n))];case"ExpandDims":{let a=AF("axis",e,t,n);return[r.expandDims(AF("x",e,t,n),a)]}case"Squeeze":{let a=AF("axis",e,t,n);return[r.squeeze(AF("x",e,t,n),a)]}case"Reshape":return[r.reshape(AF("x",e,t,n),AF("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(AF("x",e,t,n),AF("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(AF("x",e,t,n),AF("padding",e,t,n),AF("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(AF("x",e,t,n),AF("padding",e,t,n),AF("constantValue",e,t,n))];case"SpaceToBatchND":{let a=AF("blockShape",e,t,n),s=AF("paddings",e,t,n);return[r.spaceToBatchND(AF("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=AF("blockShape",e,t,n),s=AF("crops",e,t,n);return[r.batchToSpaceND(AF("x",e,t,n),a,s)]}case"DepthToSpace":{let a=AF("blockSize",e,t,n),s=AF("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(AF("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(AF("x",e,t,n),AF("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(AF("s0",e,t,n),AF("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function xM(e,t,n,r,a=Ti){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return a(()=>BD(e,t,n));case"basic_math":return a(()=>WD(e,t,n));case"control":return ZD(e,t,n);case"convolution":return a(()=>eM(e,t,n));case"creation":return a(()=>tM(e,t,n));case"dynamic":return rM(e,t,n);case"evaluation":return a(()=>aM(e,t,n));case"image":return a(()=>lM(e,t,n));case"graph":return a(()=>sM(e,t,n));case"logical":return a(()=>uM(e,t,n));case"matrices":return a(()=>pM(e,t,n));case"normalization":return a(()=>hM(e,t,n));case"ragged":return a(()=>dM(e,t,n));case"reduction":return a(()=>cM(e,t,n));case"slice_join":return a(()=>fM(e,t,n));case"sparse":return a(()=>mM(e,t,n));case"spectral":return a(()=>gM(e,t,n));case"string":return a(()=>yM(e,t,n));case"transformation":return a(()=>bM(e,t,n));case"hash_table":return oM(e,t,n,r);case"custom":let s=CF(e.op);if(s&&s.customExecutor)return s.customExecutor(new PD(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ea.isPromise(s)?s.then(e=>[].concat(e)):[].concat(s)}var wM=class{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function vM(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map(e=>MF(e)[0]));r=r||[];let p=new Set(r.map(e=>MF(e.name)[0])),h=[...t];for(;h.length>0;){let e=h.pop();if((AM(e)||RM(e)||$M(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&!u.has(e.name)&&!p.has(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach(e=>{l.has(e.name)||(l.add(e.name),h.push(e))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function kM(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(e=>MF(e)[0]).map(t=>e.nodes[t]),s=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),p=new Map(u.map(e=>[e.name,e])),h={};for(let g of u){h[g.name]=h[g.name]||0;for(let e of g.children)i(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}let d=Object.entries(h).filter(([,e])=>0===e).map(([e])=>e),c=[...d];for(;d.length>0;){let e=d.pop(),t=p.get(e);for(let n of t.children.filter(i))0===--h[n.name]&&(c.push(n.name),d.push(n.name))}let f=c.map(e=>p.get(e)),m=IM(f,l);return NM(m,l),m}function IM(e,t){let n=new Map(e.map(e=>[e.name,e])),r=t.map(e=>e.name),a=new Set(r);for(;r.length>0;){let e=r.pop(),t=n.get(e);for(let s of t.children)!n.has(s.name)||a.has(s.name)||(a.add(s.name),r.push(s.name))}return e.filter(e=>a.has(e.name))}var SM=class extends Error{constructor(e){super("NodesExecutionOrderError: "+e)}};function NM(e,t){let n=new Map(e.map((e,t)=>[e.name,t])),r=new Set(t.map(e=>e.name)),a=e=>r.has("string"==typeof e?e:e.name),s=new Set(e.map(e=>e.name)),i=e=>s.has("string"==typeof e?e:e.name);for(let o of e){for(let e of o.children.filter(i)){if(!n.has(e.name))throw new SM(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new SM(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!a(o))for(let e of o.inputs){if(!n.has(e.name))throw new SM(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new SM(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}function TM(e){let t=new Map(e.map((e,t)=>[e.name,t])),n=Number.MAX_SAFE_INTEGER,r=e.map((e,t)=>AM(e)?n:t),a=e=>{let n=r[t.get(e.name)];return null==n?-1:n},s=e.map((e,t)=>e.children.map(a).reduce((e,t)=>Math.max(e,t),r[t])),i=new Map;for(let o=0;o<e.length;++o){let t=s[o];if(t===n)continue;let r=e[o],a=e[t];i.has(a.name)||i.set(a.name,[]),i.get(a.name).push(r)}return i}var _M=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),CM=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),EM=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function AM(e){return _M.has(e.op)}function RM(e){return CM.has(e.op)}function $M(e){return EM.has(e.op)}var FM=class e{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new e(t.functions[n],this)})}getCompilationKey(e,t){let n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){let n=vM(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}let i=kM(this.graph,n),o=TM(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return Ci(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(e=>this.graph.nodes[MF(e)[0]]),a=t.map(e=>MF(e)[0]),s=new Set(a),i=a.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);let o=this.getCompilationKey(r,i),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Ge().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}let u={},p={};return Ti(()=>{let n=new wM(this.weightMap,u,p,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[a,s]=MF(t,n),i=[];i[s]=e[t],r[a]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(i))});let a=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(let e of i){if(r[e.name])continue;let t=xM(e,r,n,this._resourceManager);if(Ea.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,o.get(e.name))}return null==this.parent&&n.dispose(a),t.map(e=>RF(e,r,n))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){if(!AM(t)&&!s.has(e)){for(let r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(let e of t.inputs){if(AM(e))continue;let t=$F(e.name,n,r);if(null!=t)for(let e of t){if(!e||e.kept||a.has(e.id))continue;let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function i(e){return AM(e)||a.has(e.name)}if(!AM(e)&&null!=s)for(let o of s){if(i(o))continue;let e=$F(o.name,t,n);for(let t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Ge().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}let s=new wM(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map(e=>RF(e,i,s)),l=o.map(e=>e.id),u=Object.keys(e).map(t=>e[t].id),p=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach(e=>{e.forEach(e=>{e&&!e.isDisposed&&!p.has(e.id)&&e.dispose()})}),null==this.parent&&s.dispose(p),o}async executeFunctionAsync(e,t,n){let r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map(e=>this.graph.nodes[MF(e)[0]]),i=n.map(e=>MF(e)[0]),o=new Set(i),l=i.map(e=>this.graph.nodes[e]);0===l.length&&(l=this._outputs);let{usedNodes:u,missingInputs:p,dynamicNode:h,syncInputs:d}=vM(e,l,this.weightMap,this._initNodes),c=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[n,r]=MF(t),a=[];a[r]=e[t],f[n]=a});let m={},g=this.getFrozenTensorIds(f),y={};for(;c.length>0;){let e=this.processStack(s,c,t,f,y,g,o,m,u);await Promise.all(e)}null==h&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter(e=>!AM(e)&&!RF(e.name,f,t)).map(e=>e.name);if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${p}]. ${e}`)}return f}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let p="";if("Enter"===e.node.op&&AF("isConstant",e.node,r,n)&&([p]=FF(e.node.name,n)),null==r[e.node.name]){let h=xM(e.node,r,n,this._resourceManager);p||([p]=FF(e.node.name,n));let d=n.currentContext;Ea.isPromise(h)?u.push(h.then(u=>(r[p]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(p,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u))):(r[p]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(h)),this.checkTensorForDisposal(p,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{let[i]=FF(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some(e=>!!RF(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!RF(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=MF(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);Ea.assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&Ea.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;let r={};for(let a in e){let s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=MF(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,n;let r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=MF(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}},DM=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},MM="?tfjs-format=file",OM="model.json",LM=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=ix){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new DM}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return Ea.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");let t=await ji(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new FM(kD.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=kD.Instance.transformGraph(e.modelInitializer);this.initializer=new FM(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof Ss?[e]:e,n={};return t.forEach((e,t)=>n[this.structuredOutputKeys[t]]=e),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ss)&&!Array.isArray(e)){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((t,n)=>{var a,s,i;let o=null===(i=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=n[r],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&_i(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function PM(e,t={},n=ix){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=BM(e));let r=new LM(e,t,n);return await r.load(),r}function zM(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let a=ix.getWeightSpecs(n.weightsManifest),s=ix.getModelArtifactsForJSONSync(n,a,r);t=ix.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=ix.fromMemorySync(e)}let n=new LM(t);return n.load(),n}function BM(e){return e.endsWith("/")||(e+="/"),`${e}${OM}${MM}`}var WM="4.16.0",VM={};b(VM,{CSVDataset:()=>zO,Dataset:()=>TO,FileDataSource:()=>QO,TextLineDataset:()=>$O,URLDataSource:()=>eL,array:()=>CO,csv:()=>tL,func:()=>nL,generator:()=>rL,microphone:()=>sL,version_data:()=>iL,webcam:()=>aL,zip:()=>EO});var UM=w($()),GM=w($());function HM(e,t){return jM(e,t)}function jM(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(JM(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=e[s],o=jM(i,t,n,r);a[s]=o}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error("Can't recurse into non-iterable type: "+e)}return n.set(e,a.value),a.value}function qM(e,t=XM){return KM(e,t)}function KM(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(JM(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=e.map(e=>e[s]),i=KM(r,t,n);a[s]=i}return n.delete(r),a}throw new Error("Can't recurse into non-iterable type: "+r)}return a.value}function XM(e){return null===e?null:JM(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function YM(e,t){let n=new Map;jM(e,t,n);for(let r of Array.from(n.keys())){let e=n.get(r);if(Ea.isPromise(e)){let t=await e;n.set(r,t)}}return jM(e,t,n)}function JM(e){let t=!1;if(Ge().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=F();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ss)&&!(e instanceof Promise)&&!t)}function ZM(e){return null==e||QM(e)||Array.isArray(e)||"object"==typeof e&&e instanceof Ss||Ea.isTypedArray(e)}function QM(e){return null===e||"object"!=typeof e&&"function"!=typeof e}function eO(e){return HM(e,tO)}function tO(e){return e instanceof Ss?{value:e.clone(),recurse:!1}:JM(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var nO=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},rO=class e extends nO{constructor(){super(e.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function aO(e){return new pO(e)}function sO(e){return new hO(e)}function iO(e,t){return new kO(e,t)}function oO(e,t=lO.FAIL){return new IO(e,t)}rO.INITIAL_CAPACITY=32;var lO,uO=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new bO(this,e)}filter(e){return new gO(this,e)}map(e){return new yO(this,e)}mapAsync(e){return new xO(this,e)}serialMapAsync(e){return new xO(this,e).serial()}flatmap(e){return new vO(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new mO(this,e,t)}columnMajorBatch(e,t=!0,n=XM){return this.rowMajorBatch(e,t).map(e=>qM(e,n))}concatenate(e,t){return new kO(aO([this,e]),t)}take(e){return e<0||null==e?this:new fO(this,e)}skip(e){return e<0||null==e?this:new cO(this,e)}prefetch(e){return new SO(this,e)}shuffle(e,t){return new NO(this,e,t)}serial(){return new dO(this)}},pO=class extends uO{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:eO(e),done:!1}}},hO=class extends uO{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(ppe){throw ppe.message="Error thrown while iterating through a dataset: "+ppe.message,ppe}}},dO=class extends uO{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},cO=class extends uO{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;_i(e.value)}return this.upstream.next()}},fO=class extends uO{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},mO=class extends uO{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},gO=class extends uO{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;_i(e.value)}}},yO=class extends uO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=$s.getTensorsInContainer(e.value),n=this.transform(e.value),r=$s.getTensorsInContainer(n);for(let a of t)$s.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},bO=class extends uO{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(ppe){if(!this.handler(ppe))return{value:null,done:!0}}}},xO=class extends uO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=$s.getTensorsInContainer(e.value),n=await this.transform(e.value),r=$s.getTensorsInContainer(n);for(let a of t)$s.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},wO=class extends uO{constructor(){super(),this.outputQueue=new rO,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},vO=class extends wO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=$s.getTensorsInContainer(e.value),n=this.transform(e.value),r=$s.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)$s.isTensorInList(a,r)||a.dispose();return!0}},kO=class extends uO{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(lO||(lO={}));var IO=class extends uO{constructor(e,t=lO.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(e){return e instanceof uO?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}}let a=await YM(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case lO.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case lO.SHORTEST:return{value:null,done:!0};case lO.LONGEST:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},SO=class extends uO{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new nO(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},NO=class extends SO{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=GM.alea(n||Ea.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},TO=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return Ea.assert(e>0,()=>"batchSize needs to be positive, but it is\n      "+e),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),_O(async()=>(await r.iterator()).columnMajorBatch(e,t,AO),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,_O(async()=>(await n.iterator()).concatenate(await e.iterator()),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,_O(async()=>(await n.iterator()).filter(t=>Ti(()=>e(t))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return _O(async()=>(await t.iterator()).map(t=>Ti(()=>e(t))),this.size)}mapAsync(e){let t=this;return _O(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return _O(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,_O(async()=>{let t=sO(async()=>({value:await n.iterator(),done:!1}));return iO(t.take(e))},t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,_O(async()=>(await n.iterator()).skip(e),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=UM.alea(t||Ea.now().toString());return _O(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,_O(async()=>(await n.iterator()).take(e),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function _O(e,t=null){return new class extends TO{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function CO(e){return _O(async()=>aO(e),e.length)}function EO(e){if(!JM(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return _O(async()=>{let t=await YM(e,e=>{if(e instanceof TO)return{value:e.iterator(),recurse:!1};if(JM(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return oO(t,lO.SHORTEST)},t)}function AO(e){if(null===e)return null;let t=e[0];return ZM(t)?{value:RO(e),recurse:!1}:{value:null,recurse:!0}}function RO(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ss?$m(e):fi(e)}TO.MAX_BUFFER_SIZE=1e4;var $O=class extends TO{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},FO='"',DO=Symbol("out"),MO=Symbol("field"),OO=Symbol("quote"),LO=Symbol("quoteafterquote"),PO=Symbol("quoteinquote"),zO=class extends TO{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Ea.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(Ea.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(let r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new $O(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Ea.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o);break;default:l=e}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=DO;for(let i=0;i<a;i++)switch(s){case DO:switch(e.charAt(i)){case FO:r=i+1,s=OO;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=DO;break;default:s=MO,r=i;break}break;case MO:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=DO,r=i+1;break;default:}break;case OO:switch(e.charAt(i)){case FO:s=LO;break;default:}break;case LO:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=DO,r=i+1;break;case FO:s=OO;break;default:s=PO;break}break;case PO:switch(e.charAt(i)){case FO:s=OO;break;default:}break;default:}if(s===LO?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},BO=class e extends uO{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(!Ge().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new e(t);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error("Error thrown while initializing video stream: "+n.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(r=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(Ea.sizeFromShape(t));return n.set(e,n.length-e.length),fi(n,t)}},WO=class e extends uO{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=zm([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Bm([r,n,s,a],[1,4])}else this.cropBox=Bm([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,n={}){if(!Ge().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}let r=new e(t,n);return await r.start(),r}async start(){this.webcamConfig.facingMode&&Ea.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message="Error thrown while initializing video stream: "+e.message,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=zx.fromPixels(this.webcamVideoElement)}catch(t){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(t))}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error("Error thrown cropping the video: "+t.message)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Ti(()=>{let t,n=Ah(tl(e,"float32"),0);t=Pb.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return iu(t,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},VO=class{},UO=class extends uO{split(e){return new GO(this,e)}},GO=class extends UO{constructor(e,t){super(),this.upstream=e,this.impl=new HO(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},HO=class extends wO{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},jO=class extends uO{decodeUTF8(){return new qO(this)}},qO=class extends UO{constructor(e){super(),this.upstream=e,this.impl=new KO(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},KO=class extends wO{constructor(e){if(super(),this.upstream=e,Ge().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=F();this.decoder=new e("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Ge().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(i.from(e.buffer)),this.outputQueue.push(t),!0)}},XO=class extends jO{constructor(e,t={}){super(),this.file=e,this.options=t,Ea.assert(e instanceof Uint8Array||!!Ge().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}),done:!1}}};async function YO(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=JO(e));let s=await(n||Ea.fetch)(r,a);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new XO(e,t)}throw new Error(s.statusText)}var JO=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function ZO(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var QO=class extends VO{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(ZO(this.input)&&Ge().get("IS_NODE")){let e=D();this.input=e.readFileSync(this.input.slice(7))}return new XO(this.input,this.options)}},eL=class extends VO{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return ZO(this.url)?new QO(this.url,this.fileOptions).iterator():YO(this.url,this.fileOptions)}};function tL(e,t={}){return new zO(new eL(e),t)}function nL(e){let t=sO(e);return _O(async()=>t)}function rL(e){return _O(async()=>{let t=await e();return sO(()=>t.next())})}async function aL(e,t){return WO.create(e,t)}async function sL(e){return BO.create(e)}var iL="4.16.0";function oL(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&Ea.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}var lL=Dv.whereImpl,uL=class e extends U{nextDataId(){return e.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new V(this,Ii())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ge().get("IS_NODE")&&Cw.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ea.isString(n[0])){let a=n.map(e=>Ea.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Cw.mergeRealAndImagArrays(e,t)}return Ea.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>Ea.decodeString(e));return Qo(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Qo(e.shape,e.dtype,t)}makeOutput(e,t,n){return Ii().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=Ea.now();return e(),{kernelMs:Ea.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){oL([e],"where");let t=this.readSync(e.dataId);return lL(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};uL.nextDataId=0;var pL={};function hL(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}b(pL,{addImpl:()=>_L,bincountImpl:()=>RL,bincountReduceImpl:()=>$L,bitwiseAndImpl:()=>FL,castImpl:()=>kL,ceilImpl:()=>zL,concatImpl:()=>VL,equalImpl:()=>UL,expImpl:()=>jL,expm1Impl:()=>XL,floorDivImpl:()=>tP,floorImpl:()=>ZL,gatherNdImpl:()=>aP,gatherV2Impl:()=>sP,greaterEqualImpl:()=>uP,greaterImpl:()=>iP,lessEqualImpl:()=>mP,lessImpl:()=>dP,linSpaceImpl:()=>bP,logImpl:()=>xP,maxImpl:()=>kP,maximumImpl:()=>IP,minimumImpl:()=>TP,multiplyImpl:()=>EP,negImpl:()=>FP,notEqualImpl:()=>OP,prodImpl:()=>VP,raggedGatherImpl:()=>ZP,raggedRangeImpl:()=>ez,raggedTensorToTensorImpl:()=>sz,rangeImpl:()=>iz,rsqrtImpl:()=>oz,scatterImpl:()=>pz,sigmoidImpl:()=>hz,simpleAbsImpl:()=>hL,sliceImpl:()=>fz,sparseFillEmptyRowsImpl:()=>yz,sparseReshapeImpl:()=>bz,sparseSegmentReductionImpl:()=>xz,sqrtImpl:()=>wz,squaredDifferenceImpl:()=>Iz,staticRegexReplaceImpl:()=>Tz,stridedSliceImpl:()=>Ez,stringNGramsImpl:()=>Rz,stringSplitImpl:()=>Fz,stringToHashBucketFastImpl:()=>Dz,subImpl:()=>Mz,tileImpl:()=>zz,topKImpl:()=>Vz,transposeImpl:()=>zP,uniqueImpl:()=>Uz});var dL=e=>{let{x:t}=e.inputs,n=e.backend;oL(t,"abs");let r=new Float32Array(Ea.sizeFromShape(t.shape)),a=n.data.get(t.dataId).values;return r=hL(a),n.makeOutput(r,t.shape,t.dtype)},cL={kernelName:Je,backendName:"cpu",kernelFunc:dL};function fL(e){return(t,n,r,a,s)=>{let i=Cw.assertAndGetBroadcastShape(t,n),o=i.length,l=Ea.computeStrides(i),u=Ea.sizeFromShape(i),p=Ea.getTypedArrayFromDType(s,u),h=t.length,d=n.length,c=Ea.computeStrides(t),f=Ea.computeStrides(n),m=Cw.getBroadcastDims(t,i),g=Cw.getBroadcastDims(n,i);if(m.length+g.length===0)for(let y=0;y<p.length;++y)p[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<p.length;++y){let t=Ea.indexToLoc(y,o,l),n=t.slice(-h);m.forEach(e=>n[e]=0);let s=Ea.locToIndex(n,h,c),i=t.slice(-d);g.forEach(e=>i[e]=0);let u=Ea.locToIndex(i,d,f);p[y]=e(r[s],a[u])}return[p,i]}}function mL(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var gL={kernelName:St,backendName:"cpu",kernelFunc:mL};function yL(e,t,n="float32"){if("complex64"===n){let n=yL(e,t,"float32"),r=yL(e,t,"float32");return mL({inputs:{real:n,imag:r},backend:e})}let r=Ea.makeZerosTypedArray(Ea.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function bL(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var xL={kernelName:fn,backendName:"cpu",kernelFunc:bL};function wL(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var vL={kernelName:dr,backendName:"cpu",kernelFunc:wL};function kL(e,t,n,r){if("int32"===r){let n=Int32Array.from(e);return[t,"int32",n]}if("bool"===r){let r=Ea.toTypedArray([0],n),[a,s]=fL((e,t)=>e!==t?1:0)(t,[],e,r,"bool");return[s,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function IL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return bL({inputs:{x:a},backend:n});let e=yL(n,a.shape,a.dtype),t=IL({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=mL({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=wL({inputs:{input:a},backend:n}),t=IL({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Ea.hasEncodingLoss(a.dtype,s)){let e=bL({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=kL(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var SL={kernelName:vt,backendName:"cpu",kernelFunc:IL};function NL(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;oL([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,p="string"===s.dtype?Cw.fromUint8ToStringArray(l):l,h="string"===s.dtype?Cw.fromUint8ToStringArray(u):u,d=r||s.dtype,[c,f]=t(s.shape,i.shape,p,h,d);return o.makeTensorInfo(f,d,c)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=IL({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,p=IL({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(p.dataId),d=h.complexTensorInfos.real,c=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=mL({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function TL(e){return(t,n,r,a,s,i)=>{let o=Cw.assertAndGetBroadcastShape(t,n),l=Ea.sizeFromShape(o),u=o.length,p=Ea.computeStrides(o),h=Ea.getTypedArrayFromDType("float32",l),d=Ea.getTypedArrayFromDType("float32",l),c=Cw.getBroadcastDims(t,o),f=Cw.getBroadcastDims(n,o),m=Cw.mergeRealAndImagArrays(r,a),g=Cw.mergeRealAndImagArrays(s,i),y=t.length,b=Ea.computeStrides(t),x=n.length,w=Ea.computeStrides(n);if(c.length+f.length===0)for(let v=0;v<h.length;v++){let t=v%m.length,n=v%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[v]=r.real,d[v]=r.imag}else for(let v=0;v<h.length;v++){let t=Ea.indexToLoc(v,u,p),n=t.slice(-y);c.forEach(e=>n[e]=0);let r=Ea.locToIndex(n,y,b),a=t.slice(-x);f.forEach(e=>a[e]=0);let s=Ea.locToIndex(a,x,w),i=e(m[2*r],m[2*r+1],g[2*s],g[2*s+1]);h[v]=i.real,d[v]=i.imag}return[h,d,o]}}var _L=fL((e,t)=>e+t),CL=TL((e,t,n,r)=>({real:e+n,imag:t+r})),EL=NL(et,_L,CL),AL={kernelName:et,backendName:"cpu",kernelFunc:EL};function RL(e,t,n,r,a){let s=Ea.sizeFromShape(r),i=Ea.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=s>0?t[o]:1)}return i}function $L(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Qo([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}var FL=fL((e,t)=>e&t),DL=NL(bt,FL),ML={kernelName:bt,backendName:"cpu",kernelFunc:DL};function OL(e){return(t,n,r)=>{let a=Ea.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function LL(e,t,n){let r=OL(t);return PL(e,r,n)}function PL(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;oL(i,e);let o,l=s,u=l.data.get(i.dataId).values;if("string"===i.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");o=Cw.fromUint8ToStringArray(u)}else o=u;let p=n||i.dtype,h=t(o,p,a);return l.makeTensorInfo(i.shape,p,h)}}var zL=OL(e=>Math.ceil(e)),BL=PL(kt,zL),WL={kernelName:kt,backendName:"cpu",kernelFunc:BL};function VL(e,t,n,r){let a=Ea.getArrayFromDType(n,Ea.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{let n=Ea.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{let s="string"===n?Cw.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}var UL=fL((e,t)=>e===t?1:0),GL=NL(Qt,UL,null,"bool"),HL={kernelName:Qt,backendName:"cpu",kernelFunc:GL},jL=OL(e=>Math.exp(e)),qL=PL(en,jL,"float32"),KL={kernelName:en,backendName:"cpu",kernelFunc:qL},XL=OL(e=>Math.expm1(e)),YL=PL(nn,XL),JL={kernelName:nn,backendName:"cpu",kernelFunc:YL},ZL=OL(e=>Math.floor(e)),QL=PL(on,ZL),eP={kernelName:on,backendName:"cpu",kernelFunc:QL},tP=fL((e,t)=>Math.floor(e/t)),nP=NL(ln,tP,null,"int32"),rP={kernelName:ln,backendName:"cpu",kernelFunc:nP};function aP(e,t,n,r,a,s,i,o,l){let u=Qo([r,s],n);for(let p=0;p<r;p++){let n=[],r=0;for(let t=0;t<a;t++){let s=e[p*a+t];r+=s*i[t],n.push(s)}if(r<0||r>=l/s)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<s;e++)u.values[p*s+e]=t.get(...t.indexToLoc(r*s+e))}return u}function sP(e,t,n){let r=Qo(n,e.dtype);for(let a=0;a<r.size;++a){let n=r.indexToLoc(a).slice(),s=n[0],i=n[2],o=t.locToIndex([s,i]);n[2]=t.values[o];let l=e.locToIndex(n);0<=l&&l<e.values.length&&(r.values[a]=e.values[l])}return r}var iP=fL((e,t)=>e>t?1:0),oP=NL(dn,iP,null,"bool"),lP={kernelName:dn,backendName:"cpu",kernelFunc:oP},uP=fL((e,t)=>e>=t?1:0),pP=NL(cn,uP,null,"bool"),hP={kernelName:cn,backendName:"cpu",kernelFunc:pP},dP=fL((e,t)=>e<t?1:0),cP=NL(vn,dP,null,"bool"),fP={kernelName:vn,backendName:"cpu",kernelFunc:cP},mP=fL((e,t)=>e<=t?1:0),gP=NL(kn,mP,null,"bool"),yP={kernelName:kn,backendName:"cpu",kernelFunc:gP};function bP(e,t,n){let r=(t-e)/(n-1),a=Ea.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var xP=OL(e=>Math.log(e)),wP=PL(Sn,xP),vP={kernelName:Sn,backendName:"cpu",kernelFunc:wP};function kP(e,t,n,r){let a=Ea.getTypedArrayFromDType(r,Ea.sizeFromShape(n));for(let s=0;s<a.length;++s){let n=s*t,r=e[n];for(let a=0;a<t;++a){let t=e[n+a];(Number.isNaN(t)||t>r)&&(r=t)}a[s]=r}return a}var IP=fL((e,t)=>Math.max(e,t)),SP=NL(On,IP),NP={kernelName:On,backendName:"cpu",kernelFunc:SP},TP=fL((e,t)=>Math.min(e,t)),_P=NL(Gn,TP),CP={kernelName:Gn,backendName:"cpu",kernelFunc:_P},EP=fL((e,t)=>e*t),AP=TL((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),RP=NL(Kn,EP,AP),$P={kernelName:Kn,backendName:"cpu",kernelFunc:RP};function FP(e,t,n){let r=Ea.createScalarValue(-1,n);return EP([],t,r,e,n)}function DP(e){let{inputs:t,backend:n}=e,{x:r}=t;oL(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=FP(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}var MP={kernelName:Xn,backendName:"cpu",kernelFunc:DP},OP=fL((e,t)=>e!==t?1:0),LP=NL(Yn,OP,null,"bool"),PP={kernelName:Yn,backendName:"cpu",kernelFunc:LP};function zP(e,t,n,r,a){let s=t.length,i=Ea.sizeFromShape(t),o=Ea.computeStrides(t),l=Ea.computeStrides(a),u=Ea.getTypedArrayFromDType(n,Ea.sizeFromShape(a));for(let p=0;p<i;++p){let t=Ea.indexToLoc(p,s,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];let a=Ea.locToIndex(n,s,l);u[a]=e[p]}return u}function BP(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;oL(a,"transpose");let i=a.shape.length,o=new Array(i);for(let p=0;p<o.length;p++)o[p]=a.shape[s[p]];let l=r.data.get(a.dataId).values,u=zP(l,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var WP={kernelName:aa,backendName:"cpu",kernelFunc:BP};function VP(e,t,n,r){let[a,s]=Cw.computeOutAndReduceShapes(e,r),i=Ds(t,"int32"),o=Ea.makeZerosTypedArray(Ea.sizeFromShape(a),i),l=Ea.sizeFromShape(s);for(let u=0;u<o.length;++u){let e=u*l,t=1;for(let r=0;r<l;++r)t*=n[e+r];o[u]=t}return{outVals:o,outShape:a,outDtype:i}}function UP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;oL(a,"prod");let o=a.shape.length,l=Ea.parseAxisParam(s,a.shape),u=Cw.getAxesPermutation(l,o),p=l,h=a,d=[];null!=u&&(h=BP({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(h),p=Cw.getInnerMostAxes(p.length,o));let c=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=VP(h.shape,h.dtype,c,p),y=m;return i&&(y=Cw.expandShapeToKeepDim(m,l)),d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,f)}var GP={kernelName:or,backendName:"cpu",kernelFunc:UP};function HP(e,t,n){e.forEach((e,r)=>{if(e<0||e>=n){let a=Ea.indexToLoc(r,t.length,Ea.computeStrides(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}})}function jP(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}function qP(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);jP(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){let a=n[e],s=e+t.length-1;if(s>=0){let e=o[s],t=e[e.length-1]-a[r];for(let n=r;n<i;++n)o[s].push(a[n+1]+t)}r=a[r],i=a[i]}i!==r&&(a.push([r,i]),s+=i-r)}return{outSplits:o,valueSlices:a,numValues:s}}function KP(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=Ea.getArrayFromDType("int32",r);t.push(a),e[n].forEach((e,t)=>a[t]=e)}return t}function XP(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function YP(e,t,n,r,a,s){let i=XP(t,2)[1],o=XP(s,2)[1],l=0;for(let u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)a[l*o+n]=e[t*i+n];++l}}function JP(e,t,n,r,a){let s=t.slice();s[0]=a;let i=Ea.getArrayFromDType(n,Ea.sizeFromShape(s)),o=e.length,l=0===o?0:o/t[0];return YP(e,t,r,l,i,s),[i,s]}function ZP(e,t,n,r,a,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(HP(s,i,l),0===r.length)throw new Error("params.rank must be nonzero");let u=r[0],{outSplits:p,valueSlices:h,numValues:d}=qP(s,i,e,u),c=KP(p),f=JP(n,r,a,h,d);return[c,f[0],f[1]]}var QP=2147483647;function ez(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===a.length,u=0===i.length,p=[];o||p.push(t[0]),l||p.push(a[0]),u||p.push(i[0]);for(let g=1;g<p.length;++g)if(p[g]!==p[g-1])throw new Error("starts, limits, and deltas must have the same shape");let h=0===p.length?1:p[0],d=Ea.getArrayFromDType("int32",h+1);d[0]=0;for(let g=0;g<h;++g){let t,n=o?e[0]:e[g],a=l?r[0]:r[g],i=u?s[0]:s[g];if(0===i)throw new Error("Requires delta != 0");if(i>0&&a<n||i<0&&a>n)t=0;else if(t=Math.ceil(Math.abs((a-n)/i)),t>QP)throw new Error("Requires ((limit - start) / delta) <= "+QP);d[g+1]=d[g]+t}let c=d[h],f=Ea.getArrayFromDType(n,c),m=0;for(let g=0;g<h;++g){let t=d[g+1]-d[g],n=o?e[0]:e[g],r=u?s[0]:s[g];for(let e=0;e<t;++e)f[m++]=n,n+=r}return[d,f]}var tz=Cw.RowPartitionType,nz=class e{constructor(e,t,n,r,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Cw.getRowPartitionTypesHelper(u),this.raggedRank=Cw.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===tz.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===tz.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(t){let n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case tz.VALUE_ROWIDS:return e.getMaxWidthValueRowID(n);case tz.ROW_SPLITS:return e.getMaxWidthRowSplit(n);default:throw new Error("Cannot handle partition type "+tz[this.getRowPartitionTypeByDimension(t-1)])}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){let t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return az(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;Cw.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Cw.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let i=0;i<r;++i,s+=t)a.push(s);for(let i=r;i<e;++i)a.push(-1);return Ea.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(r,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case tz.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case tz.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error("Unsupported partition type: "+tz[s])}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case tz.FIRST_DIM_SIZE:return e[0];case tz.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case tz.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type "+tz[t])}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];let r=az(t,!1),a=Ea.getArrayFromDType(this.valuesDType,Ea.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;let a=this.values,s=n,i=r.slice();i=i.slice(e+1);let o=Ea.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;Ti(()=>{let t=iu(u,e);u=Wu(t,i).dataSync()})}let p=0,h=0,d=0;for(let c=0;c<=l;++c){let e=c<l?t[c]:-1;if(e!==d){if(h<d){let e=a.subarray(p*o),t=s.subarray(h*o),n=(d-h)*o;rz(t,e,n)}if(c>=l){let t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)s.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else for(;e>d;){let e=s.slice(d*o);rz(e,u,o),++d}e<0?(p=c+1,h=d):(p=c,h=d,d=h+1)}else++d}}};function rz(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function az(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function sz(e,t,n,r,a,s,i,o,l,u){return new nz(e,t,n,r,a,s,i,o,l,u).compute()}function iz(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return Ea.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=Ea.makeZerosTypedArray(o,r);t<e&&1===n&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var oz=OL(e=>1/Math.sqrt(e)),lz=PL(Ir,oz),uz={kernelName:Ir,backendName:"cpu",kernelFunc:lz};function pz(e,t,n,r,a,s,i,o,l,u){let p=[r/a,a],h=e.values,d=t.values;if(0===r)return Qo(n,t.dtype);let c=l instanceof bs?l:Qo(p,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let f=0;f<s;f++){let e=[],s=0;for(let t=0;t<i;t++){let n=h[f*i+t];e.push(n),s+=n*o[t]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[s*a+n]+=d[f*a+n]:c.values[s*a+n]=0===t.rank?d[0]:d[f*a+n]}return c}var hz=OL(e=>1/(1+Math.exp(-e))),dz=LL(Fr,e=>1/(1+Math.exp(-e))),cz={kernelName:Fr,backendName:"cpu",kernelFunc:dz};function fz(e,t,n,r,a){let s=tw.isSliceContinous(r,t,n),i=Ea.sizeFromShape(n),o=Ea.computeStrides(r);if(s){let n=tw.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l="string"===a?Cw.fromUint8ToStringArray(e):e,u=Qo(r,a,l),p=Qo(n,a);for(let h=0;h<p.size;++h){let e=p.indexToLoc(h),n=e.map((e,n)=>e+t[n]);p.set(u.get(...n),...e)}return"string"===a?Cw.fromStringArrayToUint8(p.values):p.values}function mz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;oL(a,"slice");let[o,l]=tw.parseSliceParams(a,s,i);tw.assertParamsValid(a,o,l);let u=n.data.get(a.dataId).values,p=fz(u,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,p)}var gz={kernelName:Er,backendName:"cpu",kernelFunc:mz};function yz(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),p=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Cw.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let e=Ea.getArrayFromDType(n,0),t=Ea.getArrayFromDType(a,0);return[e,[0,h],t,u,p]}let d=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let t=e[g*h];if(t<0)throw new Error(Cw.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=l)throw new Error(Cw.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,l));++f[t],d=d&&t>=c,c=t}let m=!0;for(let g=0;g<l;++g){let e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let t=e,n=r;for(let e=0;e<o;++e)p[e]=e;return[t,[o,h],n,u,p]}{let t=f[l-1],s=Ea.getArrayFromDType(n,t*h),d=Ea.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let n=0;n<o;++n){let t=e[n*h],a=c[t],i=(0===t?0:f[t-1])+a;c[t]++;for(let r=0;r<h;++r)s[i*h+r]=e[n*h+r];d[i]=r[n],p[n]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=i}return[s,[t,h],d,u,p]}}function bz(e,t,n,r,a){let s=Ea.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,p=-1;for(let m=0;m<o;++m){let e=a[m];if(-1===e){if(-1!==p)throw new Error(Cw.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,m));p=m,l.push(1)}else{if(e<0)throw new Error(Cw.getSparseReshapeNegativeOutputDimErrorMessage(m,e));u*=e,l.push(e)}}if(-1!==p){if(u<=0)throw new Error(Cw.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(Cw.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[p]=e}if(Ea.sizeFromShape(l)!==s)throw new Error(Cw.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=Ea.getArrayFromDType(n,i*o);for(let m=0;m<i;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*d[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/c[e]),t%=c[e]}return[f,[i,o],l]}function xz(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],p=o>0?a[o-1]+1:0;if(p<0)throw new Error(Cw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=p;let d=h.reduce((e,t)=>e*t,1),c=Ea.getArrayFromDType(n,d);if(0===o)return p>0&&c.fill(i),[c,h];if(p<=0)throw new Error(Cw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(Cw.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(Cw.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>g&&c.fill(i,g*u,y*u);for(let n=f;n<m;++n){let t=r[n];if(t<0||t>=l[0])throw new Error(Cw.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],l[0]));for(let n=0;n<u;n++)c[y*u+n]+=e[t*u+n]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<p&&c.fill(i,g*u,p*u),[c,h]}var wz=OL(e=>Math.sqrt(e)),vz=LL(Mr,e=>Math.sqrt(e)),kz={kernelName:Mr,backendName:"cpu",kernelFunc:vz},Iz=fL((e,t)=>{let n=e-t;return n*n}),Sz=NL(Hr,Iz),Nz={kernelName:Hr,backendName:"cpu",kernelFunc:Sz},Tz=OL((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),_z=PL(qr,Tz),Cz={kernelName:qr,backendName:"cpu",kernelFunc:_z};function Ez(e,t,n,r){let a=Qo(e,t.dtype);for(let s=0;s<a.size;s++){let e=a.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];a.set(t.get(...i),...e)}return a}var Az=class{constructor(e,t,n,r,a,s){this.separator=Ea.encodeString(e),this.nGramWidths=t,this.leftPad=Ea.encodeString(n),this.rightPad=Ea.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),p=s-(l+u),h=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let t=0;t<p;++t)d+=e[h+t].length;d+=u*this.rightPad.length;let c=l+u+p-1;d+=c*this.separator.length,n[r+i]=new Uint8Array(d);let f=n[r+i],m=0,g=e=>e.forEach(e=>f[m++]=e);for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<p-1;++t)g(e[h+t]),g(this.separator);if(p>0){g(e[h+p-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got "+e);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=Ea.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let t=0;t<=a;++t)s[t]=0;return[e,s]}s[0]=0;for(let o=1;o<=a;++o){let e=t[o]-t[o-1],n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),s[o]=s[o-1]+n}let i=new Array(s[a]);for(let o=0;o<a;++o){let n=t[o],r=s[o];if(this.nGramWidths.forEach(a=>{let s=t[o+1]-t[o],l=this.getNumNGrams(s,a);this.createNGrams(e,n,i,r,l,a),r+=l}),this.preserveShort&&r===s[o]){let a=t[o+1]-t[o];if(0===a)continue;let s=a+2*this.padWidth;this.createNGrams(e,n,i,r,1,s)}}return[i,s]}};function Rz(e,t,n,r,a,s,i,o){return new Az(n,r,a,s,i,o).compute(e,t)}function $z(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),e=e.subarray(s+1),s=e.indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function Fz(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let d=0;d<r;++d){let r=a.length;$z(e[d],t,n,a);let l=a.length-r;o[d]=l,s+=l,i=Math.max(i,l)}let l=Ea.getArrayFromDType("int32",2*s),u=new Array(s),p=[r,i],h=0;for(let d=0;d<r;++d)for(let e=0;e<o[d];++e)l[2*h]=d,l[2*h+1]=e,u[h]=a[h],++h;return[l,u,p]}function Dz(e,t){let n=Ea.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Ea.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var Mz=fL((e,t)=>e-t),Oz=TL((e,t,n,r)=>({real:e-n,imag:t-r})),Lz=NL(Zr,Mz,Oz),Pz={kernelName:Zr,backendName:"cpu",kernelFunc:Lz};function zz(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=Qo(n,e.dtype);for(let a=0;a<r.values.length;++a){let t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];let s=e.locToIndex(n);r.values[a]=e.values[s]}return r}var Bz=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function Wz(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2),u=Math.max(n,Math.floor(t-s*o/a+l)),p=Math.min(r,Math.floor(t+(a-s)*o/a+l));Wz(e,t,u,p)}let a=e[t],s=n,i=r;for(Ea.swap(e,n,t),Bz(e[r],a)>0&&Ea.swap(e,n,r);s<i;){for(Ea.swap(e,s,i),s++,i--;Bz(e[s],a)<0;)s+=1;for(;Bz(e[i],a)>0;)i-=1}0===Bz(e[n],a)?Ea.swap(e,n,i):(i+=1,Ea.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function Vz(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=Ea.getTypedArrayFromDType(n,i*r),u=Ea.getTypedArrayFromDType("int32",i*r);for(let h=0;h<i;h++){let t=h*o,n=e.subarray(t,t+o),s=new Array(n.length);n.forEach((e,t)=>s[t]={value:e,index:t}),r<s.length&&(Wz(s,r),s=s.slice(0,r)),a&&s.sort(Bz);let i=h*r,p=l.subarray(i,i+r),d=u.subarray(i,i+r);for(let e=0;e<r;e++)p[e]=s[e].value,d[e]=s[e].index}let p=t.slice();return p[p.length-1]=r,[Qo(p,n,l),Qo(p,"int32",u)]}function Uz(e,t,n,r){let a=Ea.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<a;f++)s[0]*=n[f];s[1]=n[a];for(let f=a+1;f<n.length;f++)s[2]*=n[f];let i=new Map,o=new Int32Array(n[a]),l=new bs(s,r,e),u=[],p=1===s[0]&&1===s[2];for(let f=0;f<n[a];f++){let t;if(p)t=e[f].toString();else{let e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,f,n));t=e.join(",")}let n=i.get(t);if(null!=n)o[f]=n;else{let e=i.size;i.set(t,e),o[f]=e,u.push(f)}}let h=s.slice();h[1]=i.size;let d=new bs(h,r);u.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)});let c=n.slice();return c[a]=h[1],{outputValues:d.values,outputShape:c,indices:o}}var Gz="4.16.0";Oi("cpu",()=>new uL,1);var Hz=LL(Yt,e=>e>=0?e:Math.exp(e)-1),jz={kernelName:Yt,backendName:"cpu",kernelFunc:Hz};function qz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;oL([a],"leakyRelu");let i=Ea.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=Ea.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}var Kz={kernelName:wn,backendName:"cpu",kernelFunc:qz},Xz=fL((e,t)=>e<0?t*e:e);function Yz(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;oL([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=Xz(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var Jz={kernelName:ir,backendName:"cpu",kernelFunc:Yz},Zz=LL(fr,e=>Math.max(0,e)),Qz={kernelName:fr,backendName:"cpu",kernelFunc:Zz},eB=LL(wr,e=>Math.min(Math.max(0,e),6)),tB={kernelName:wr,backendName:"cpu",kernelFunc:eB};function nB(e,t,n,r,a){if("linear"===n)return bL({inputs:{x:t},backend:e});if("relu"===n)return Zz({inputs:{x:t},backend:e});if("elu"===n)return Hz({inputs:{x:t},backend:e});if("relu6"===n)return eB({inputs:{x:t},backend:e});if("prelu"===n)return Yz({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return qz({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return dz({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function rB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=Ea.sizeFromShape(a.shape),o=Ea.inferFromImplicitShape(s,i),l=Ea.sizeFromShape(o);Ea.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var aB={kernelName:mr,backendName:"cpu",kernelFunc:rB};function sB(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;oL([a,s],"matMul");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Ea.sizeFromShape(f),y=Ea.sizeFromShape(m),b=Fp.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);Ea.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,p,d]:[g,d,p],w=o?[y,c,h]:[y,h,c],v=rB({inputs:{x:a},backend:n,attrs:{shape:x}}),k=rB({inputs:{x:s},backend:n,attrs:{shape:w}}),I=i?v.shape[1]:v.shape[2],S=i?v.shape[2]:v.shape[1],N=o?k.shape[1]:k.shape[2],T=Math.max(g,y),_=n.data.get(v.dataId).values,C=n.data.get(k.dataId).values,E=Ea.computeStrides(v.shape),A=Ea.computeStrides(k.shape),[R,$,F]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,M,O]=o?[1,A[1],A[0]]:[A[1],1,A[0]],L=S*N,P=Qo([T,S,N],v.dtype),z=P.values,B=n.blockSize;for(let W=0;W<T;W++){let e=W%g,t=W%y;for(let n=0;n<S;n+=B){let r=Math.min(n+B,S);for(let a=0;a<N;a+=B){let s=Math.min(a+B,N);for(let i=0;i<I;i+=B){let o=Math.min(i+B,I);for(let l=n;l<r;l++)for(let n=a;n<s;n++){let r=0;for(let a=i;a<o;a++){let s=_[e*R+l*$+a*F],i=C[a*D+n*M+t*O];r+=s*i}z[W*L+(l*N+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(b,P.dtype,P.values)}var iB={kernelName:mt,backendName:"cpu",kernelFunc:sB};function oB(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:p}=a,{transposeA:h,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=sB({inputs:{a:o,b:l},attrs:{transposeA:h,transposeB:d},backend:s}),u&&(n=EL({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=nB(s,t,c,p,f),m.push(t),t=r);for(let g of m)s.disposeIntermediateTensorInfo(g);return t}var lB={kernelName:ca,backendName:"cpu",kernelFunc:oB},uB=LL(Ze,e=>Math.acos(e)),pB={kernelName:Ze,backendName:"cpu",kernelFunc:uB},hB=LL(Qe,e=>Math.acosh(e)),dB={kernelName:Qe,backendName:"cpu",kernelFunc:hB};function cB(e){let{inputs:t,backend:n}=e,r=t;oL(t,"addN");let a=r.map(e=>n.data.get(e.dataId).values),s=Qo(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let e=a[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var fB={kernelName:tt,backendName:"cpu",kernelFunc:cB};function mB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;oL(a,"all");let o=Ea.parseAxisParam(s,a.shape),l=o,u=Cw.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=BP({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Cw.getInnerMostAxes(l.length,a.shape.length)),Cw.assertAxesAreInnerMostDims("all",l,p.shape.length);let[h,d]=Cw.computeOutAndReduceShapes(p.shape,l),c=Ea.sizeFromShape(d),f=Ea.makeZerosTypedArray(Ea.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];t=t&&r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let e=Cw.expandShapeToKeepDim(h,o),t=rB({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}var gB={kernelName:nt,backendName:"cpu",kernelFunc:mB};function yB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;oL(a,"any");let o=Ea.parseAxisParam(s,a.shape),l=o,u=Cw.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=BP({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Cw.getInnerMostAxes(l.length,a.shape.length)),Cw.assertAxesAreInnerMostDims("any",l,p.shape.length);let[h,d]=Cw.computeOutAndReduceShapes(p.shape,l),c=Ea.sizeFromShape(d),f=Ea.makeZerosTypedArray(Ea.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];t=t||r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let e=Cw.expandShapeToKeepDim(h,o),t=rB({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}var bB={kernelName:rt,backendName:"cpu",kernelFunc:yB};function xB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;oL(a,"argMax");let i=Ea.parseAxisParam(s,a.shape),o=Cw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=BP({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Cw.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],Cw.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[p,h]=Cw.computeOutAndReduceShapes(l.shape,i),d=Ea.sizeFromShape(p),c=Ea.makeZerosTypedArray(d,"int32"),f=Ea.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let r=0;r<f;++r){let a=m[e+r];a>t&&(t=a,n=r)}c[g]=n}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(p,"int32",c)}var wB={kernelName:at,backendName:"cpu",kernelFunc:xB};function vB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;oL(a,"argMin");let i=Ea.parseAxisParam(s,a.shape),o=Cw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=BP({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Cw.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],Cw.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[p,h]=Cw.computeOutAndReduceShapes(l.shape,i),d=Ea.sizeFromShape(p),c=Ea.makeZerosTypedArray(d,"int32"),f=Ea.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let r=0;r<f;++r){let a=m[e+r];a<t&&(t=a,n=r)}c[g]=n}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(p,"int32",c)}var kB={kernelName:st,backendName:"cpu",kernelFunc:vB},IB=LL(it,e=>Math.asin(e)),SB={kernelName:it,backendName:"cpu",kernelFunc:IB},NB=LL(ot,e=>Math.asinh(e)),TB={kernelName:ot,backendName:"cpu",kernelFunc:NB},_B=LL(lt,e=>Math.atan(e)),CB={kernelName:lt,backendName:"cpu",kernelFunc:_B},EB=fL((e,t)=>Math.atan2(e,t)),AB=NL(pt,EB),RB={kernelName:pt,backendName:"cpu",kernelFunc:AB},$B=LL(ut,e=>Math.atanh(e)),FB={kernelName:ut,backendName:"cpu",kernelFunc:$B};function DB(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Qo(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){let t=w*y,n=w*r[0];for(let m=0;m<a.inChannels;++m)for(let y=0;y<a.outHeight;++y){let w=y*i-d,v=Math.max(0,w),k=Math.min(a.inHeight,p+w),I=t+y*b;for(let t=0;t<a.outWidth;++t){let i=t*o-c,p=Math.max(0,i),d=Math.min(a.inWidth,h+i),y=f,b=0,w=0;for(let t=v;t<k;t+=l){let a=n+t*r[1];for(let t=p;t<d;t+=u){let n=a+t*r[2],i=e[n+m];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}let S=I+t*x+m;g[S]="avg"===s?b/w:y}}}return m}function MB(e,t,n,r,a=!1,s=!1){let i=Qo(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,p=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Qo(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){let n=t*o-c,y=n;for(;y<0;)y+=u;let b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){let h=o*l-f,c=h;for(;c<0;)c+=p;let x=Math.min(r.inWidth,d+h),w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=u){let i=t-n;for(let n=c;n<x;n+=p){let o=n-h,l=m.get(g,t,n,e);l>w&&(w=l,v=a?s?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*d+o)}}i.set(v,g,t,o,e)}}return i}function OB(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,p=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Qo(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let N=0;N<a.batchSize;++N){let t=N*v,n=N*r[0];for(let x=0;x<a.inChannels;++x)for(let v=0;v<a.outDepth;++v){let N=v*i-m,T=N;for(;T<0;)T+=u;let _=Math.min(a.inDepth,d+N),C=t+v*k;for(let t=0;t<a.outHeight;++t){let i=t*o-g,d=i;for(;d<0;)d+=p;let m=Math.min(a.inHeight,c+i),v=C+t*I;for(let t=0;t<a.outWidth;++t){let i=t*l-y,o=i;for(;o<0;)o+=h;let c=Math.min(a.inWidth,f+i),g=v+t*S,k=b,I=0,N=0;for(let t=T;t<_;t+=u){let a=n+t*r[1];for(let t=d;t<m;t+=p){let n=a+t*r[2];for(let t=o;t<c;t+=h){let a=n+t*r[3],i=e[a+x];if("max"===s&&i>k?k=i:"avg"===s&&(I+=i,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}let C=g+x;w[C]="avg"===s?I/Math.max(N,1):k}}}}return x}function LB(e,t){let n=Qo(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,p=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let v=Math.min(t.inHeight,p+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,h+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){let n=t-b;for(let r=d;r<v;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*p*h+a*p+i)}}}n.set(N,m,y,r,a,g)}}}return n}function PB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;oL(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ea.assert(Cw.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p,h=Cw.computePool2DInfo(a.shape,s,i,u,o,l);if(1===h.filterWidth&&1===h.filterHeight&&Ea.arraysEqual(h.inShape,h.outShape))p=bL({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Ea.computeStrides(a.shape),r=DB(e,a.shape,a.dtype,t,h,"avg");p=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return p}var zB={kernelName:ht,backendName:"cpu",kernelFunc:PB};function BB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;oL(a,"avgPool3d");let p=Cw.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.data.get(a.dataId).values,d=OB(h,a.shape,a.dtype,Ea.computeStrides(a.shape),p,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var WB={kernelName:ct,backendName:"cpu",kernelFunc:BB};function VB(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;oL([a,s],"avgPool3DGrad");let p=Cw.computePool3DInfo(s.shape,i,o,1,l,u),h=p.strideDepth,d=p.strideHeight,c=p.strideWidth,f=p.filterDepth,m=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,w=p.effectiveFilterDepth,v=p.effectiveFilterHeight,k=p.effectiveFilterWidth,I=w-1-p.padInfo.front,S=k-1-p.padInfo.left,N=v-1-p.padInfo.top,T=Qo(s.shape,"float32"),_=1/(f*m*g),C=n.bufferSync(a);for(let E=0;E<p.batchSize;++E)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inDepth;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){let a=t-I,s=n-N,i=r-S,o=0;for(let t=0;t<w;t+=y){let n=(a+t)/h;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=b){let r=(s+t)/d;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){let a=(i+t)/c;if(a<0||a>=p.outWidth||Math.floor(a)!==a)continue;let s=C.get(E,n,r,a,e);o+=s}}}T.set(o*_,E,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}var UB={kernelName:ft,backendName:"cpu",kernelFunc:VB};function GB(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;oL([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=Cw.computePool2DInfo(i.shape,o,l,1,u),h=p.strideHeight,d=p.strideWidth,c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,b=p.effectiveFilterWidth,x=b-1-p.padInfo.left,w=y-1-p.padInfo.top,v=Qo(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,S=Qo(a.shape,"float32",I);for(let N=0;N<p.batchSize;++N)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){let r=t-w,a=n-x,s=0;for(let t=0;t<y;t+=m){let n=(r+t)/h;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){let r=(a+t)/d;if(r<0||r>=p.outWidth||Math.floor(r)!==r)continue;let i=S.get(N,n,r,e);s+=i}}v.set(s*k,N,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var HB={kernelName:dt,backendName:"cpu",kernelFunc:GB};function jB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;Ea.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Ea.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Ea.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),oL([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let p=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(p.length),g=f.length,y=c.length,b=d.length,x=h.length,w=0,v=0,k=0,I=0;for(let S=0;S<p.length;++S)m[S]=f[w++]+(p[S]-h[v++])*c[k++]/Math.sqrt(d[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}var qB={kernelName:un,backendName:"cpu",kernelFunc:jB};function KB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;oL([a],"batchToSpaceND");let o=s.reduce((e,t)=>e*t),l=Cw.getReshaped(a.shape,s,o),u=Cw.getPermuted(l.length,s.length),p=Cw.getReshapedPermuted(a.shape,s,o),h=Cw.getSliceBeginCoords(i,s.length),d=Cw.getSliceSize(p,i,s.length),c=rB({inputs:{x:a},backend:n,attrs:{shape:l}}),f=BP({inputs:{x:c},backend:n,attrs:{perm:u}}),m=rB({inputs:{x:f},backend:n,attrs:{shape:p}}),g=mz({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var XB={kernelName:gt,backendName:"cpu",kernelFunc:KB};function YB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=RL(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var JB={kernelName:yt,backendName:"cpu",kernelFunc:YB};function ZB(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=Cw.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var QB={kernelName:wt,backendName:"cpu",kernelFunc:ZB},eW=LL(It,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),tW={kernelName:It,backendName:"cpu",kernelFunc:eW},nW=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(Ea.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let e=o[u],t=l[u];r[u]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")},rW={kernelName:Nt,backendName:"cpu",kernelFunc:nW};function aW(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var sW={kernelName:gn,backendName:"cpu",kernelFunc:aW};function iW(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Ea.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);Cw.assertParamsConsistent(i,s);let o=Cw.computeOutShape(t.map(e=>e.shape),s);if(0===Ea.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>Ea.sizeFromShape(e.shape)>0);if(1===l.length)return bL({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map(e=>wL({inputs:{input:e},backend:n})),t=l.map(e=>aW({inputs:{input:e},backend:n})),r=iW({inputs:e,backend:n,attrs:{axis:s}}),a=iW({inputs:t,backend:n,attrs:{axis:s}}),i=mL({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=l.map(e=>{let t=[-1,Ea.sizeFromShape(e.shape.slice(s))];return rB({inputs:{x:e},backend:n,attrs:{shape:t}})}),p=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=Cw.computeOutShape(u.map(e=>e.shape),1);let h=1===u[0].shape[0],d=VL(p,o,t[0].dtype,h),c=Cw.computeOutShape(l.map(e=>e.shape),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}var oW={kernelName:Tt,backendName:"cpu",kernelFunc:iW};function lW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r;oL([a,s],"conv2d");let h=Cw.convertConv2DDataFormat(l),d=Cw.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,h),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new bs(d.outShape,a.dtype),v=Ea.computeStrides(a.shape),k=Ea.computeStrides(s.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],_=w.strides[0],C=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(a.dataId).values,$=n.data.get(s.dataId).values,F=w.values;for(let D=0;D<d.batchSize;++D){let e=D*I,t=D*_;for(let n=0;n<d.outHeight;++n){let r=t+n*C,a=n*d.strideHeight-b;for(let t=0;t<c;++t){let n=a+t*m;if(n<0||n>=d.inHeight)continue;let s=t*k[0],i=e+n*S;for(let e=0;e<d.outWidth;++e){let t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=s+e*k[1],o=i+r*N,l=a;for(let e=0;e<d.inChannels;++e){let n=R[o+e*T];for(let e=0;e<d.outChannels;++e)F[t+e*A]+=n*$[l+e];l+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}var uW={kernelName:_t,backendName:"cpu",kernelFunc:lW};function pW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r;oL([a,s],"conv2dBackpropFilter");let h=Cw.convertConv2DDataFormat(l),d=Cw.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new bs(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new bs(a.shape,a.dtype,v),S=new bs(s.shape,s.dtype,k);for(let N=0;N<m;++N){let e=Math.max(0,Math.ceil((w-N)/c)),t=Math.min(d.outHeight,(d.inHeight+w-N)/c);for(let n=0;n<g;++n){let r=Math.max(0,Math.ceil((x-n)/f)),a=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let s=0;s<d.inChannels;++s)for(let i=0;i<d.outChannels;++i){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){let e=N+u*c-w;for(let t=r;t<a;++t){let r=n+t*f-x;o+=y?I.get(l,e,r,s)*S.get(l,u,t,i):I.get(l,s,e,r)*S.get(l,i,u,t)}}b.set(o,N,n,s,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var hW={kernelName:Ct,backendName:"cpu",kernelFunc:pW};function dW(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r;oL([a,s],"conv2dBackpropInput");let h=Ea.computeStrides(s.shape),d=Ea.computeStrides(a.shape),c=Cw.convertConv2DDataFormat(u),f=Cw.computeConv2DInfo(i,s.shape,o,1,l,p,!1,c),m=new bs(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:_,outChannels:C,outHeight:E,outWidth:A,strideHeight:R,strideWidth:$}=f;c=f.dataFormat;let F=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,z=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let G=0;G<k;++G)for(let e=0;e<N;++e)for(let t=0;t<T;++t){let n=t-F,r=Math.max(0,Math.ceil(n/R)),a=Math.min(E,(I+n)/R);for(let s=0;s<_;++s){let i=s-D,o=Math.max(0,Math.ceil(i/$)),l=Math.min(A,(S+i)/$),u=0;for(let t=r;t<a;++t){let r=t*R-n;for(let n=o;n<l;++n){let a=n*$-i,s=B*G+W*t+V*n,o=x*(I-1-r)+w*(S-1-a)+v*e;for(let e=0;e<C;++e){let t=y[s+U*e],n=b[o+e];u+=t*n}}}let p=O*G+L*t+P*s+z*e;g[p]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var cW={kernelName:Et,backendName:"cpu",kernelFunc:dW};function fW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;oL([a,s],"conv3d");let u=Cw.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:p,filterHeight:h,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new bs(u.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,S=Ea.computeStrides(a.shape),N=Ea.computeStrides(s.shape);for(let T=0;T<u.batchSize;++T){let e=T*S[0],t=T*w.strides[0];for(let n=0;n<u.outDepth;++n){let r=t+n*w.strides[1],a=n*u.strideDepth-y;for(let t=0;t<p;++t){let n=a+t*c;if(n<0||n>=u.inDepth)continue;let s=t*N[0],i=e+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var mW={kernelName:At,backendName:"cpu",kernelFunc:fW};function gW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;oL([a,s],"conv3dBackpropFilterV2");let u=Ea.computeStrides(a.shape),p=Ea.computeStrides(s.shape),h=Cw.computeConv3DInfo(a.shape,l,i,1,o),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new bs(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,_,C]=p,E=n.data.get(a.dataId).values,[A,R,$,F]=u,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let L=0;L<m;++L){let e=Math.max(0,Math.ceil((D-L)/d)),t=Math.min(h.outDepth,(h.inDepth+D-L)/d),n=L*w;for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((O-r)/c)),s=Math.min(h.outHeight,(h.inHeight+O-r)/c),i=r*v+n;for(let n=0;n<y;++n){let o=Math.max(0,Math.ceil((M-n)/f)),l=Math.min(h.outWidth,(h.inWidth+M-n)/f),u=n*k+i;for(let i=0;i<h.inChannels;++i){let p=i*I+u;for(let u=0;u<h.outChannels;++u){let m=0;for(let p=0;p<h.batchSize;++p){let h=p*A,g=p*N;for(let p=e;p<t;++p){let e=(L+p*d-D)*R+h,t=p*T+g;for(let p=a;p<s;++p){let a=(r+p*c-O)*$+e,s=p*_+t;for(let e=o;e<l;++e){let t=(n+e*f-M)*F+a,r=e*C+s;m+=E[t+i]*S[r+u]}}}}x[p+u]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var yW={kernelName:Rt,backendName:"cpu",kernelFunc:gW};function bW(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;oL([a],"conv3dBackpropInputV2");let u=Ea.computeStrides(a.shape),p=Ea.computeStrides(s.shape),h=Cw.computeConv3DInfo(l,s.shape,o,1,i),d=new bs(h.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=u,I=n.data.get(s.dataId).values,[S,N,T,_]=p,{batchSize:C,filterDepth:E,filterHeight:A,filterWidth:R,inChannels:$,inDepth:F,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:P,outWidth:z,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let j=0;j<C;++j)for(let e=0;e<$;++e)for(let t=0;t<F;++t){let n=t-U,r=Math.max(0,Math.ceil(n/B)),a=Math.min(L,(E+n)/B);for(let s=0;s<D;++s){let i=s-G,o=Math.max(0,Math.ceil(i/W)),l=Math.min(P,(A+i)/W);for(let u=0;u<M;++u){let p=u-H,h=Math.max(0,Math.ceil(p/V)),d=Math.min(z,(R+p)/V),C=0;for(let t=r;t<a;++t){let r=t*B-n;for(let n=o;n<l;++n){let a=n*W-i;for(let s=h;s<d;++s){let i=s*V-p,o=x*j+w*t+v*n+k*s,l=S*(E-1-r)+N*(A-1-a)+T*(R-1-i)+_*e;for(let e=0;e<O;++e){let t=b[o+e],n=I[l+e];C+=t*n}}}}c[f*j+m*t+g*s+y*u+e]=C}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var xW={kernelName:$t,backendName:"cpu",kernelFunc:bW},wW=LL(Ft,e=>Math.cos(e)),vW={kernelName:Ft,backendName:"cpu",kernelFunc:wW},kW=LL(Dt,e=>Math.cosh(e)),IW={kernelName:Dt,backendName:"cpu",kernelFunc:kW};function SW(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[p,h,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=Qo([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=Ea.computeStrides(a.shape),k=Ea.computeStrides(y.shape);for(let I=0;I<f;I++){let e=4*I,t=b[e],n=b[e+1],r=b[e+2],a=b[e+3],s=x[I];if(s>=p)continue;let i=m>1?(r-t)*(h-1)/(m-1):0,o=g>1?(a-n)*(d-1)/(g-1):0;for(let p=0;p<m;p++){let e=m>1?t*(h-1)+p*i:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<c;e++){let n=e+t*k[2]+p*k[1]+I*k[0];y.values[n]=u}else if("bilinear"===l){let t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){let l=g>1?n*(d-1)+e*o:.5*(n+a)*(d-1);if(l<0||l>d-1){for(let t=0;t<c;t++){let n=t+e*k[2]+p*k[1]+I*k[0];y.values[n]=u}continue}let h=Math.floor(l),f=Math.ceil(l),m=l-h;for(let n=0;n<c;n++){let a=n+h*v[2]+t*v[1]+s*v[0],o=w[a];a=n+f*v[2]+t*v[1]+s*v[0];let l=w[a];a=n+h*v[2]+r*v[1]+s*v[0];let u=w[a];a=n+f*v[2]+r*v[1]+s*v[0];let d=w[a],c=o+(l-o)*m,g=u+(d-u)*m;a=n+e*k[2]+p*k[1]+I*k[0],y.values[a]=c+(g-c)*i}}}else for(let t=0;t<g;++t){let r=g>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(r<0||r>d-1){for(let e=0;e<c;e++){let n=e+t*k[2]+p*k[1]+I*k[0];y.values[n]=u}continue}let i=Math.round(r),l=Math.round(e);for(let e=0;e<c;e++){let n=e+i*v[2]+l*v[1]+s*v[0],r=e+t*k[2]+p*k[1]+I*k[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var NW={kernelName:Lt,backendName:"cpu",kernelFunc:SW};function TW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;oL(a,"cumprod");let l=Cw.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=BP({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=Cw.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=Ds(u.dtype,"int32"),d=Ea.makeOnesTypedArray(Ea.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)d[t]=i?1:c[t];else{let n=m(y,e-1);d[t]=i?c[n]*d[n]:c[t]*d[n]}}let g=n.makeTensorInfo(u.shape,h,d);if(null!=l){let e=Cw.getUndoAxesPermutation(l),t=BP({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}var _W={kernelName:Mt,backendName:"cpu",kernelFunc:TW};function CW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;oL(a,"cumsum");let l=Cw.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=BP({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=Cw.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=Ds(u.dtype,"int32"),d=Ea.makeZerosTypedArray(Ea.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)d[t]=i?0:c[t];else{let n=m(y,e-1);d[t]=i?c[n]+d[n]:c[t]+d[n]}}let g=n.makeTensorInfo(u.shape,h,d);if(null!=l){let e=Cw.getUndoAxesPermutation(l),t=BP({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}var EW={kernelName:Ot,backendName:"cpu",kernelFunc:CW};function AW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=RL(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=$L(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var RW={kernelName:Pt,backendName:"cpu",kernelFunc:AW};function $W(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;Ea.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+i);let o=a.shape[0],l=a.shape[1],u=a.shape[2],p=a.shape[3],h=l*s,d=u*s,c=p/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*c),g=0;for(let y=0;y<o;++y)for(let e=0;e<h;++e){let t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){let r=Math.floor(e/s),a=e%s,i=(n*s+a)*c;for(let e=0;e<c;++e){let n=e+i+p*(r+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,h,d,c],a.dtype,m)}var FW={kernelName:zt,backendName:"cpu",kernelFunc:$W};function DW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;oL([a,s],"depthwiseConv2DNative");let p=Ea.computeStrides(a.shape),h=Ea.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),Ea.assert(Cw.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let c=Cw.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,w=b.top,v=c.outChannels/c.inChannels,k=new bs(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let T=0;T<c.batchSize;++T){let e=T*p[0],t=T*k.strides[0];for(let n=0;n<c.outHeight;++n){let r=t+n*k.strides[1],a=n*c.strideHeight-w;for(let t=0;t<f;++t){let n=a+t*g;if(n<0||n>=c.inHeight)continue;let s=t*h[0],i=e+n*p[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*h[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<v;++e)N[l+e]+=t*S[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var MW={kernelName:Bt,backendName:"cpu",kernelFunc:DW};function OW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r;oL([a,s],"depthwiseConv2dNativeBackpropFilter");let h=Cw.computeConv2DInfo(a.shape,p,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new bs(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(a.dataId).values,v=new bs(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new bs(s.shape,s.dtype,k);for(let S=0;S<f;++S){let e=Math.max(0,Math.ceil((b-S)/d)),t=Math.min(h.outHeight,(h.inHeight+b-S)/d);for(let n=0;n<m;++n){let r=Math.max(0,Math.ceil((y-n)/c)),a=Math.min(h.outWidth,(h.inWidth+y-n)/c);for(let s=0;s<h.outChannels;++s){let i=Math.trunc(s/x),o=s%x,l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){let e=S+o*d-b;for(let t=r;t<a;++t){let r=n+t*c-y;l+=v.get(u,e,r,i)*I.get(u,o,t,s)}}g.set(l,S,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var LW={kernelName:Wt,backendName:"cpu",kernelFunc:OW};function PW(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r;oL([a,s],"depthwiseConv2DNativeBackpropInput");let h=Ea.computeStrides(a.shape),d=Ea.computeStrides(s.shape),c=Cw.computeConv2DInfo(p,s.shape,i,o,l,u,!0),f=new bs(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=h,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:_,filterHeight:C,filterWidth:E,inChannels:A,inHeight:R,inWidth:$,outChannels:F,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,P=C-1-c.padInfo.top,z=E-1-c.padInfo.left,B=F/A;for(let W=0;W<_;++W)for(let e=0;e<A;++e)for(let t=0;t<R;++t){let n=t-P,r=Math.max(0,Math.ceil(n/O)),a=Math.min(D,(C+n)/O);for(let s=0;s<$;++s){let i=s-z,o=Math.max(0,Math.ceil(i/L)),l=Math.min(M,(E+i)/L),u=0;for(let t=r;t<a;++t){let r=t*O-n;for(let n=o;n<l;++n){let a=n*L-i,s=w*W+v*t+k*n,o=S*(C-1-r)+N*(E-1-a)+T*e;for(let t=0;t<B;++t){let n=e*B+t,r=x[s+n],a=I[o+t];u+=r*a}}}m[g*W+y*t+b*s+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var zW={kernelName:Vt,backendName:"cpu",kernelFunc:PW};function BW(e){let{inputs:t,backend:n}=e,{x:r}=t,a=Ea.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Qo([a,a],r.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*a+u]=s[u];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var WW={kernelName:Ut,backendName:"cpu",kernelFunc:BW},VW={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,p=r.shape.length,h=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Cw.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),_=Ea.sizeFromShape(T),C=T.length,E=Ea.getArrayFromDType(r.dtype,_);for(let A=0;A<c;++A)for(let e=0;e<y;++e){let t=e*w-x.top;for(let n=0;n<b;++n){let s=n*v-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){let n=t+e*S;if(n>=0&&n<f)for(let t=0;t<I;++t){let l=s+t*N;if(l>=0&&l<m){let s=Ea.locToIndex([A,n,l,i],p,Ea.computeStrides(r.shape)),c=Ea.locToIndex([e,t,i],d,Ea.computeStrides(a.shape)),f=u[s]+h[c];f>o&&(o=f)}}}let l=Ea.locToIndex([A,e,n,i],C,Ea.computeStrides(T));E[l]=o}}}return{dataId:l.write(Ea.toTypedArray(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},UW={kernelName:jt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=Ea.toNestedArray(r.shape,u.data.get(r.dataId).values),h=Ea.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Cw.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Ea.assert(s.rank===N.length,()=>`Error in ${jt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let T=Ea.toNestedArray(N,u.data.get(s.dataId).values),_=Ea.makeZerosNestedTypedArray(a.shape,a.dtype);for(let C=0;C<d;++C)for(let e=0;e<g;++e){let t=e*x-b.top;for(let n=0;n<y;++n){let r=n*w-b.left;for(let a=0;a<m;++a){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<v;++e){let n=t+e*I;if(n>=0&&n<c)for(let t=0;t<k;++t){let l=r+t*S;if(l>=0&&l<f){let r=p[C][n][l][a]+h[e][t][a];r>s&&(s=r,i=e,o=t)}}}_[i][o][a]+=T[C][e][n][a]}}}return{dataId:u.write(Ea.toTypedArray(_,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},GW={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=Ea.toNestedArray(r.shape,u.data.get(r.dataId).values),h=Ea.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Cw.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Ea.assert(s.rank===N.length,()=>`Error in ${Ht}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let T=Ea.toNestedArray(N,u.data.get(s.dataId).values),_=Ea.makeZerosNestedTypedArray(r.shape,r.dtype);for(let C=0;C<d;++C)for(let e=0;e<g;++e){let t=e*x-b.top;for(let n=0;n<y;++n){let r=n*w-b.left;for(let a=0;a<m;++a){let s=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=r<0?0:r;for(let e=0;e<v;++e){let n=t+e*I;if(n>=0&&n<c)for(let t=0;t<k;++t){let l=r+t*S;if(l>=0&&l<f){let r=p[C][n][l][a]+h[e][t][a];r>s&&(s=r,i=n,o=l)}}}_[C][i][o][a]+=T[C][e][n][a]}}}return{dataId:u.write(Ea.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function HW(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,p=(null==o?void 0:o.contextType)||"2d";if("2d"!==p)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let h=s.getContext(p,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${p} type.`);let[d,c]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(c*d*4);for(let x=0;x<d*c;++x){let e=[0,0,0,255*u];for(let n=0;n<f;n++){let t=m[x*f+n];if("float32"===a.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===a.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}let t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=c,s.height=d;let b=new ImageData(y,c,d);return h.putImageData(b,0,0),a}var jW={kernelName:qt,backendName:"cpu",kernelFunc:HW};function qW(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;oL(s,"sum"),t="bool"===s.dtype?IL({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):bL({inputs:{x:s},backend:r});let l=t.shape.length,u=Ea.parseAxisParam(i,t.shape),p=Cw.getAxesPermutation(u,l),h=u,d=t;null!=p&&(d=BP({inputs:{x:t},backend:r,attrs:{perm:p}}),h=Cw.getInnerMostAxes(h.length,l)),Cw.assertAxesAreInnerMostDims("sum",h,d.shape.length);let[c,f]=Cw.computeOutAndReduceShapes(d.shape,h),m=Cw.upcastType(d.dtype,"int32"),g=yL(r,c,m),y=Ea.sizeFromShape(f),b=r.data.get(g.dataId).values,x=r.data.get(d.dataId).values;for(let w=0;w<b.length;++w){let e=w*y,t=0;for(let n=0;n<y;++n)t+=x[e+n];b[w]=t}if(o){let e=Cw.expandShapeToKeepDim(g.shape,u),t=g;g=rB({inputs:{x:g},backend:r,attrs:{shape:e}}),r.disposeIntermediateTensorInfo(t)}return r.disposeIntermediateTensorInfo(t),null!=p&&r.disposeIntermediateTensorInfo(d),g}var KW={kernelName:Or,backendName:"cpu",kernelFunc:qW};function XW(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Cw.decodeEinsumEquation(a,s.length);Cw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=Cw.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let e of p[m]){let t,{permutationIndices:r,expandDims:a}=Cw.getEinsumPermutation(c,l[e]);Cw.isIdentityPermutation(r)?t=s[e]:(t=BP({inputs:{x:s[e]},backend:n,attrs:{perm:r}}),f.push(t));let i=t.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Ea.arraysEqual(t.shape,i)||(t=rB({inputs:{x:t},backend:n,attrs:{shape:i}}),f.push(t)),null===d?d=t:(d=RP({inputs:{a:t,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=qW({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var YW={kernelName:Xt,backendName:"cpu",kernelFunc:XW};function JW(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;oL([r,a],"eluGrad");let s=new Float32Array(Ea.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let e=i[l];s[l]=e>=0?o[l]:o[l]*(e+1)}return n.makeTensorInfo(a.shape,"float32",s)}var ZW={kernelName:Jt,backendName:"cpu",kernelFunc:JW},QW=Cw.ERF_P,eV=Cw.ERF_A1,tV=Cw.ERF_A2,nV=Cw.ERF_A3,rV=Cw.ERF_A4,aV=Cw.ERF_A5,sV=LL(Zt,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+QW*n);return t*(1-((((aV*r+rV)*r+nV)*r+tV)*r+eV)*r*Math.exp(-n*n))}),iV={kernelName:Zt,backendName:"cpu",kernelFunc:sV};function oV(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Ea.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),rB({inputs:{x:a},backend:n,attrs:{shape:o}})}var lV={kernelName:tn,backendName:"cpu",kernelFunc:oV},uV=fL((e,t)=>e/t),pV=NL(Kt,uV),hV={kernelName:Kt,backendName:"cpu",kernelFunc:pV};function dV(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],p=Ea.sizeFromShape(u),h=Ea.getTypedArrayFromDType("float32",p),d=Ea.getTypedArrayFromDType("float32",p);for(let g=0;g<a;g++){let e=mz({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=mz({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=mL({inputs:{real:e,imag:r},backend:n}),{real:i,imag:u}=cV(a,t,n),p=Cw.mergeRealAndImagArrays(i,u);for(let t=0;t<s;t++){let e=Cw.getComplexWithIndex(p,t);h[g*s+t]=e.real,d[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}let c=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=mL({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function cV(e,t,n){let r=Ea.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(fV(r)){let a=mV(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",Ea.createScalarValue(r,"float32")),i=bL({inputs:{x:s},backend:n}),l=hV.kernelFunc({inputs:{a:e,b:s},backend:n}),u=hV.kernelFunc({inputs:{a:t,b:i},backend:n}),p=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:p,imag:h}}return a}{let e=Cw.mergeRealAndImagArrays(s,i),n=gV(e,r,t);return Cw.splitRealAndImagArrays(n)}}function fV(e){return 0===(e&e-1)}function mV(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=Cw.mergeRealAndImagArrays(e,t),i=n/2,o=Cw.complexWithEvenIndex(s),l=o.real,u=o.imag,p=[l.length],h=a.makeTensorInfo(p,"float32",l),d=a.makeTensorInfo(p,"float32",u),c=mL({inputs:{real:h,imag:d},backend:a}),f=Cw.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=mL({inputs:{real:b,imag:x},backend:a}),v=mV(l,u,i,r,a),k=v.real,I=v.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),_=mL({inputs:{real:N,imag:T},backend:a}),C=mV(m,g,i,r,a),E=C.real,A=C.imag,R=[E.length],$=a.makeTensorInfo(R,"float32",E),F=a.makeTensorInfo(R,"float32",A),D=mL({inputs:{real:$,imag:F},backend:a}),M=Cw.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),P=a.makeTensorInfo(O,"float32",M.imag),z=mL({inputs:{real:L,imag:P},backend:a}),B=RP({inputs:{a:z,b:D},backend:a}),W=EL({inputs:{a:_,b:B},backend:a}),V=Lz({inputs:{a:_,b:B},backend:a}),U=wL({inputs:{input:W},backend:a}),G=wL({inputs:{input:V},backend:a}),H=aW({inputs:{input:W},backend:a}),j=aW({inputs:{input:V},backend:a}),q=iW({inputs:[U,G],backend:a,attrs:{axis:0}}),K=iW({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}function gV(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=Cw.exponent(a*r,t,n),l=Cw.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),Cw.assignToTypedArray(r,s,i,a)}return r}function yV(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Ea.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=rB({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=dV(o,!1,n),u=rB({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var bV={kernelName:rn,backendName:"cpu",kernelFunc:yV};function xV(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||Ea.inferDtype(a),o=Ea.getArrayFromDType(i,Ea.sizeFromShape(r));return vV(o,a,i),t.makeTensorInfo(r,i,o)}var wV={kernelName:an,backendName:"cpu",kernelFunc:xV};function vV(e,t,n){e.fill(t)}var kV={kernelName:sn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=Ea.getTypedArrayFromDType(r.dtype,Ea.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,p=a.data.get(r.dataId).values;for(let h=0;h<i;h++){let e=h*l*o*u;for(let t=0;t<o;t++){let n=t*(l*u);for(let t=0;t<l;t++){let r=t*u;for(let a=0;a<u;a++){let i=Math.round(l-t-1),o=e+n+r+a,h=p[o];if(i>=0&&i<l){let t=i*u,r=e+n+t+a;h=p[r]}s[o]=h}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function IV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=lW({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let e=m;if("NCHW"===p&&1===i.shape.length&&1!==i.shape[0]){let e=rB({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=EL({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=EL({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===p&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=rB({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=nB(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=nB(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}var SV={kernelName:fa,backendName:"cpu",kernelFunc:IV};function NV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=DW({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let e=m;m=EL({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=nB(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}var TV={kernelName:ma,backendName:"cpu",kernelFunc:NV};function _V(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=Ea.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,p,h]=Cw.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=n.data.get(a.dataId).values,c=n.bufferSync(r),f=aP(d,c,r.dtype,u,o,p,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,f.values)}var CV={kernelName:hn,backendName:"cpu",kernelFunc:_V};function EV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;oL([a,s],"gatherV2");let l=Ea.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,p=a.shape[l];for(let w=0;w<u.length;++w){let e=u[w];Ea.assert(e<=p-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${p-1}]`)}let h=o;null==o&&(h=0);let d=Ea.sizeFromShape(s.shape),c=Cw.segment_util.collectGatherOpShapeInfo(a,s,l,h),f=rB({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=rB({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=n.bufferSync(f),x=sP(b,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var AV={kernelName:pn,backendName:"cpu",kernelFunc:EV};function RV(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Ea.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=rB({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=dV(o,!0,n),u=rB({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var $V={kernelName:mn,backendName:"cpu",kernelFunc:RV},FV=LL(yn,e=>Number.isFinite(e)?1:0,"bool"),DV={kernelName:yn,backendName:"cpu",kernelFunc:FV},MV=LL(bn,e=>Math.abs(e)===1/0?1:0,"bool"),OV={kernelName:bn,backendName:"cpu",kernelFunc:MV},LV=LL(xn,e=>Number.isNaN(e)?1:0,"bool"),PV={kernelName:xn,backendName:"cpu",kernelFunc:LV};function zV(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=bP(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var BV={kernelName:In,backendName:"cpu",kernelFunc:zV},WV=LL(Nn,e=>Math.log1p(e)),VV={kernelName:Nn,backendName:"cpu",kernelFunc:WV},UV=fL((e,t)=>e&&t),GV=NL(Tn,UV,null,"bool"),HV={kernelName:Tn,backendName:"cpu",kernelFunc:GV},jV=LL(_n,e=>e?0:1,"bool"),qV={kernelName:_n,backendName:"cpu",kernelFunc:jV},KV=fL((e,t)=>e||t),XV=NL(Cn,KV,null,"bool"),YV={kernelName:Cn,backendName:"cpu",kernelFunc:XV};function JV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;oL(a,"LRN");let u=a.shape[3],p=u-1,h=n.data.get(a.dataId).values,d=Ea.sizeFromShape(a.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,p),a=0;for(;n<=r;n++){let e=h[n];a+=e*e}return a}for(let m=0;m<d;m++){let e=f(m),t=h[m]*Math.pow(i+o*e,-l);c[m]=t}return n.makeTensorInfo(a.shape,a.dtype,c)}var ZV={kernelName:$n,backendName:"cpu",kernelFunc:JV};function QV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;oL(i,"LRNGrad");let h=Ea.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){let e=b%d,t=b-e+Math.max(0,e-o),n=b-e+Math.min(d,e+o+1),r=0;for(let a=t;a<n;a++)r+=Math.pow(f[a],2);r=u*r+l;for(let a=t;a<n;a++){let e=-2*u*p*f[a]*m[b]/r;b===a&&(e+=Math.pow(r,-p)),e*=c[b],g[a]+=e}}return n.makeTensorInfo(i.shape,a.dtype,g)}var eU={kernelName:Fn,backendName:"cpu",kernelFunc:QV};function tU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,p=Ea.parseAxisParam(s,l),h=p,d=Cw.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=zP(c,l,a.dtype,d,e),h=Cw.getInnerMostAxes(h.length,u),l=e}oL(a,"max"),Cw.assertAxesAreInnerMostDims("max",h,u);let[f,m]=Cw.computeOutAndReduceShapes(l,h),g=Ea.sizeFromShape(m),y=kP(c,g,f,a.dtype),b=o.write(y,f,a.dtype),x=f;return i&&(x=Cw.expandShapeToKeepDim(f,p)),{dataId:b,shape:x,dtype:a.dtype}}var nU={kernelName:Mn,backendName:"cpu",kernelFunc:tU};function rU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;oL(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ea.assert(Cw.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p,h=Cw.computePool2DInfo(a.shape,s,i,u,o,l);if(1===h.filterWidth&&1===h.filterHeight&&Ea.arraysEqual(h.inShape,h.outShape))p=bL({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Ea.computeStrides(a.shape),r=DB(e,a.shape,a.dtype,t,h,"max");p=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return p}var aU={kernelName:Ln,backendName:"cpu",kernelFunc:rU};function sU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;oL(a,"maxPool3d");let p=Cw.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.data.get(a.dataId).values,d=OB(h,a.shape,a.dtype,Ea.computeStrides(a.shape),p,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var iU={kernelName:zn,backendName:"cpu",kernelFunc:sU};function oU(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;oL([a,s],"maxPool3DGrad");let p=Cw.computePool3DInfo(s.shape,i,o,1,l,u),h=n.bufferSync(s),d=LB(h,p),c=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterDepth,w=p.effectiveFilterHeight,v=p.effectiveFilterWidth,k=x-1-p.padInfo.front,I=v-1-p.padInfo.left,S=w-1-p.padInfo.top,N=Qo(s.shape,"float32"),T=n.bufferSync(a);for(let _=0;_<p.batchSize;++_)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inDepth;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){let a=t-k,s=n-S,i=r-I,o=0;for(let t=0;t<x;t+=g){let n=(a+t)/c;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let r=0;r<w;r+=y){let a=(s+r)/f;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let s=0;s<v;s+=b){let l=(i+s)/m;if(l<0||l>=p.outWidth||Math.floor(l)!==l)continue;let u=x*w*v-1-d.get(_,n,a,l,e),h=t*w*v+r*v+s,c=u===h?1:0;if(0===c)continue;let f=T.get(_,n,a,l,e);o+=f*c}}}N.set(o,_,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var lU={kernelName:Bn,backendName:"cpu",kernelFunc:oU};function uU(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;oL([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=r,d=Cw.computePool2DInfo(o.shape,l,u,1,p,h),c=n.data.get(o.dataId).values,f=Qo(d.outShape,o.dtype,MB(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Qo(o.shape,"float32"),S=n.data.get(a.dataId).values,N=Qo(a.shape,"float32",S);for(let T=0;T<d.batchSize;++T)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){let r=t-k,a=n-v,s=0;for(let t=0;t<x;t+=y){let n=(r+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=b){let i=(a+r)/g;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;let o=x*w-1-f.get(T,n,i,e),l=t*w+r,u=o===l?1:0;if(0===u)continue;let p=N.get(T,n,i,e);s+=p*u}}I.set(s,T,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var pU={kernelName:Pn,backendName:"cpu",kernelFunc:uU};function hU(e,t,n,r,a){let s=Ea.computeStrides(t),i=DB(e,t,n,s,a,"max"),o=MB(e,t,n,a,!0,r);return[i.values,o.values]}var dU={kernelName:Wn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;oL(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,p=Cw.computePool2DInfo(r.shape,a,s,[1,1],i),[h,d]=hU(u,r.shape,r.dtype,o,p),c=l.write(h,p.outShape,r.dtype),f=l.write(d,p.outShape,r.dtype);return[{dataId:c,shape:p.outShape,dtype:r.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};function cU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=Ea.parseAxisParam(s,a.shape),l=Cw.computeOutAndReduceShapes(a.shape,o)[1],u=Ea.sizeFromShape(l),p=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));p.push(h);let d=IL({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});p.push(d);let c=pV({inputs:{a:d,b:h},backend:n});p.push(c);let f=qW({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}var fU={kernelName:Vn,backendName:"cpu",kernelFunc:cU};function mU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;oL(a,"min");let o=Ea.parseAxisParam(s,a.shape),l=o,u=Cw.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=BP({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Cw.getInnerMostAxes(l.length,a.shape.length)),Cw.assertAxesAreInnerMostDims("min",l,p.shape.length);let[h,d]=Cw.computeOutAndReduceShapes(p.shape,l),c=Ea.sizeFromShape(d),f=Ea.makeZerosTypedArray(Ea.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let e=Cw.expandShapeToKeepDim(h,o),t=rB({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}var gU={kernelName:Un,backendName:"cpu",kernelFunc:mU};function yU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;oL(a,"mirrorPad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=s.map((e,t)=>e[0]+a.shape[t]),p="reflect"===i?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,c=Ea.computeStrides(a.shape),f=Ea.sizeFromShape(o),m=o.length,g=Ea.computeStrides(o),y=Ea.getTypedArrayFromDType(a.dtype,f);for(let b=0;b<f;b++){let e=Ea.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-p:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+p);e=e.map((e,t)=>e-l[t]);let t=Ea.locToIndex(e,d,c);y[b]=h[t]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var bU={kernelName:Hn,backendName:"cpu",kernelFunc:yU},xU=fL((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),wU=NL(jn,xU),vU={kernelName:jn,backendName:"cpu",kernelFunc:wU},kU=w($());function IU(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=Ea.parseAxisParam([o],a.shape),u=tU({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),p=Cw.expandShapeToKeepDim(u.shape,l),h=rB({inputs:{x:u},backend:n,attrs:{shape:p}}),d=Lz({inputs:{a:a,b:h},backend:n}),c=qL({inputs:{x:d},backend:n}),f=qW({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=rB({inputs:{x:f},backend:n,attrs:{shape:p}}),g=pV({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var SU={kernelName:zr,backendName:"cpu",kernelFunc:IU};function NU(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;oL(a,"multinomial");let l=o?a:IU({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],p=l.shape[1],h=n.data.get(l.dataId).values,d=[u,s],c=Ea.makeZerosTypedArray(Ea.sizeFromShape(d),"int32");for(let f=0;f<u;++f){let e=f*p,t=new Float32Array(p-1);t[0]=h[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+h[e+a];let n=kU.alea(i.toString()),r=f*s;for(let a=0;a<s;++a){let e=n();c[r+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){c[r+a]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}var TU={kernelName:qn,backendName:"cpu",kernelFunc:NU},_U=Dv.nonMaxSuppressionV3Impl;function CU(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;oL(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:h}=_U(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var EU={kernelName:Jn,backendName:"cpu",kernelFunc:CU},AU=Dv.nonMaxSuppressionV4Impl;function RU(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;oL(a,"NonMaxSuppressionPadded");let p=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=AU(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var $U={kernelName:Zn,backendName:"cpu",kernelFunc:RU},FU=Dv.nonMaxSuppressionV5Impl;function DU(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;oL(a,"NonMaxSuppressionWithScore");let p=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=FU(p,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var MU={kernelName:Qn,backendName:"cpu",kernelFunc:DU};function OU(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;oL(a,"oneHot");let u=Ea.sizeFromShape(a.shape),p=new Float32Array(u*i);p.fill(l);let h=n.data.get(a.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(p[d*i+h[d]]=o);return n.makeTensorInfo([...a.shape,i],s,p)}var LU={kernelName:tr,backendName:"cpu",kernelFunc:OU};function PU(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=wL({inputs:{input:r},backend:n}),t=PU({inputs:{x:e},backend:n}),a=aW({inputs:{input:r},backend:n}),s=PU({inputs:{x:a},backend:n}),i=mL({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return xV({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var zU={kernelName:ua,backendName:"cpu",kernelFunc:PU};function BU(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){let e=wL({inputs:{input:r},backend:n}),t=BU({inputs:{x:e},backend:n}),a=aW({inputs:{input:r},backend:n}),s=PU({inputs:{x:a},backend:n}),i=mL({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return xV({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var WU={kernelName:er,backendName:"cpu",kernelFunc:BU};function VU(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return oV({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{Ea.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Ea.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{let t=oV({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),u=iW({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}var UU={kernelName:nr,backendName:"cpu",kernelFunc:VU};function GU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;oL(a,"pad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=n.data.get(a.dataId).values,p=Ea.sizeFromShape(a.shape),h=a.shape.length,d=Ea.computeStrides(a.shape),c=Ea.sizeFromShape(o),f=o.length,m=Ea.computeStrides(o),g=Ea.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let y=0;y<p;y++){let e=Ea.indexToLoc(y,h,d).map((e,t)=>e+l[t]),t=Ea.locToIndex(e,f,m);g[t]=u[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var HU={kernelName:rr,backendName:"cpu",kernelFunc:GU},jU=fL((e,t)=>Math.pow(e,t)),qU=NL(sr,jU),KU={kernelName:sr,backendName:"cpu",kernelFunc:qU};function XU(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(e=>n.data.get(e.dataId).values),u=a.map(e=>e.shape),p=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,[d,c,f]=ZP(l,u,p,s.shape,s.dtype,h,i.shape,o),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var YU={kernelName:lr,backendName:"cpu",kernelFunc:XU};function JU(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=ez(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([p.length],r.dtype,p);return[h,d]}var ZU={kernelName:ur,backendName:"cpu",kernelFunc:JU};function QU(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=o.map(e=>n.data.get(e.dataId).values),c=o.map(e=>e.shape),[f,m]=sz(u,a.shape,p,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var eG={kernelName:pr,backendName:"cpu",kernelFunc:QU};function tG(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=iz(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}var nG={kernelName:hr,backendName:"cpu",kernelFunc:tG},rG=LL(cr,e=>1/e),aG={kernelName:cr,backendName:"cpu",kernelFunc:rG};function sG(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;oL(a,"resizeBilinear");let l=Ea.computeStrides(a.shape),[u,p]=o,[h,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(Ea.sizeFromShape([h,u,p,f])),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=0,w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<u;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(d-1,Math.ceil(t)),s=k*l[0]+n*l[1],o=k*l[0]+a*l[1];for(let e=0;e<p;e++){let t;t=i?v*(e+.5)-.5:v*e;let n=Math.max(0,Math.floor(t)),a=t-n,u=Math.min(c-1,Math.ceil(t)),p=s+n*l[2],h=o+n*l[2],d=s+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){let t=m[p+e],n=m[h+e],s=m[d+e],i=m[y+e],o=t+(s-t)*a,l=n+(i-n)*a,u=o+(l-o)*r;g[x++]=u}}}return n.makeTensorInfo([h,u,p,f],"float32",g)}var iG={kernelName:br,backendName:"cpu",kernelFunc:sG};function oG(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;oL([s,a],"resizeBilinearGrad");let o=Ea.computeStrides(a.shape),[l,u,p,h]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*p*h),m=[i&&d>1?u-1:u,i&&c>1?p-1:p],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,w=0;for(let v=0;v<l;v++){let e=v*o[0];for(let t=0;t<d;t++){let n=t*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=e+r*o[1],i=e+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),p-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=d*u,k=d*a,I=l*u,S=l*a;for(let e=0;e<h;e++){let t=x[w++];f[c+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,p,u,h],"float32",f)}var lG={kernelName:xr,backendName:"cpu",kernelFunc:oG};function uG(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;oL(a,"resizeNearestNeighbor");let l=Ea.computeStrides(a.shape),[u,p]=o,[h,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*u*p*f),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=y[0]/b[0],w=y[1]/b[1],v=0;for(let k=0;k<h;k++){let e=k*l[0];for(let t=0;t<u;t++){let n=i?x*(t+.5):x*t,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=e+r*l[1];for(let e=0;e<p;e++){let t=i?w*(e+.5):w*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,u,p,f],a.dtype,g)}var pG={kernelName:gr,backendName:"cpu",kernelFunc:uG};function hG(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;oL([s,a],"resizeNearestNeighborGrad");let o=Ea.computeStrides(a.shape),l=Ea.computeStrides(s.shape),[u,p,h,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*p*h*d),g=n.data.get(s.dataId).values,y=[i&&c>1?p-1:p,i&&f>1?h-1:h],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let N=0;N<u;N++){let e=N*o[0];for(let t=0;t<p;t++){let n=e+t*o[1],r=Math.floor(t*v),a=Math.floor(r-I/2);for(let s=0;s<h;s++){let r=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<I;r++){let u=r+a;if(u<0||u>=c)continue;let d=e+u*l[1],m=u*x,b=Math.min(p-1,i?Math.round(m):Math.floor(m));if(t===b)for(let e=0;e<S;e++){let t=e+y;if(t<0||t>=f)continue;let r=d+t*l[2],a=t*w,u=Math.min(h-1,i?Math.round(a):Math.floor(a));s===u&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}var dG={kernelName:yr,backendName:"cpu",kernelFunc:hG};function cG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;oL(a,"reverse");let i=a.shape.length,o=Ea.parseAxisParam(s,a.shape);if(0===i)return bL({inputs:{x:a},backend:n});let l=new bs(a.shape,a.dtype),u=n.bufferSync(a);for(let p=0;p<l.size;p++){let e=l.indexToLoc(p),t=e.slice();o.forEach(e=>t[e]=a.shape[e]-1-t[e]),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var fG={kernelName:vr,backendName:"cpu",kernelFunc:cG},mG={kernelName:da,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=Ea.getTypedArrayFromDType(r.dtype,Ea.sizeFromShape(r.shape)),[u,p,h,d]=r.shape,[c,f]=Cw.getImageCenter(i,p,h),m=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<u;x++){let e=x*h*p*d;for(let t=0;t<p;t++){let n=t*(h*d);for(let r=0;r<h;r++){let a=r*d;for(let i=0;i<d;i++){let o=[u,t,r,i],x=o[2],w=o[1],v=(x-c)*y-(w-f)*g,k=(x-c)*g+(w-f)*y;v=Math.round(v+c),k=Math.round(k+f);let I=s;if("number"!=typeof s&&(I=3===i?m:s[i]),v>=0&&v<h&&k>=0&&k<p){let t=k*(h*d),n=v*d,r=e+t+n+i;I=b[r]}let S=e+n+a+i;l[S]=I}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},gG=LL(kr,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),yG={kernelName:kr,backendName:"cpu",kernelFunc:gG};function bG(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=Cw.calculateShapes(s,a,i),d=!0,c=n.bufferSync(a),f=n.bufferSync(s),m=pz(c,f,i,h,u,l,o,p,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}var xG={kernelName:Sr,backendName:"cpu",kernelFunc:bG};function wG(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function vG(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}function kG(e,t,n,r,a,s){let i=Ea.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?wG(n,t[e+l]):vG(n,t[e+l])}return i}function IG(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=kG(o,l,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",u)}var SG={kernelName:Tr,backendName:"cpu",kernelFunc:IG};function NG(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;oL([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=Ds(a.dtype,s.dtype),h=Ea.makeZerosTypedArray(Ea.sizeFromShape(a.shape),p),d=0,c=0===i||i>1||1===a.shape.length?1:Ea.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<c;e++)1===o[f]?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(a.shape,p,h)}var TG={kernelName:_r,backendName:"cpu",kernelFunc:NG},_G=Cw.SELU_SCALEALPHA,CG=Cw.SELU_SCALE,EG=LL(Cr,e=>e>=0?CG*e:_G*(Math.exp(e)-1)),AG={kernelName:Cr,backendName:"cpu",kernelFunc:EG},RG=LL($r,e=>e<0?-1:e>0?1:0),$G={kernelName:$r,backendName:"cpu",kernelFunc:RG},FG=LL(Ar,e=>Math.sin(e)),DG={kernelName:Ar,backendName:"cpu",kernelFunc:FG},MG=LL(Rr,e=>Math.sinh(e)),OG={kernelName:Rr,backendName:"cpu",kernelFunc:MG},LG=1.1920928955078125e-7,PG=Math.log(LG)+2,zG=LL(Dr,e=>{let t,n=e>-PG,r=e<PG,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t}),BG={kernelName:Dr,backendName:"cpu",kernelFunc:zG};function WG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;oL([a],"spaceToBatchND");let o=Ea.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=HU.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=Cw.getReshaped(u.shape,s,o,!1),h=Cw.getPermuted(p.length,s.length,!1),d=Cw.getReshapedPermuted(u.shape,s,o,!1),c=rB({inputs:{x:u},backend:n,attrs:{shape:p}}),f=BP({inputs:{x:c},backend:n,attrs:{perm:h}}),m=rB({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}var VG={kernelName:Lr,backendName:"cpu",kernelFunc:WG};function UG(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n        "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n        "+a.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values[0],[h,d,c,f,m]=yz(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var GG={kernelName:Br,backendName:"cpu",kernelFunc:UG};function HG(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,p,h]=bz(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var jG={kernelName:Wr,backendName:"cpu",kernelFunc:HG};function qG(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n          "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          "+s.shape);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=xz(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}var KG={kernelName:Vr,backendName:"cpu",kernelFunc:qG};function XG(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n         "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         "+s.shape);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=xz(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}var YG={kernelName:Ur,backendName:"cpu",kernelFunc:XG};function JG(e){let t,{inputs:n,backend:r,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=a,{sliceRank:u,numUpdates:p,sliceSize:h,strides:d,outputSize:c}=Cw.calculateShapes(i,s,l),f=!1,m=r.bufferSync(s);switch(i.dtype){case"bool":{let e=r.bufferSync(i),n=!!r.data.get(o.dataId).values[0];t=pz(m,e,l,c,h,p,u,d,n,f);break}case"float32":{let e=r.bufferSync(i),n=r.data.get(o.dataId).values[0];t=pz(m,e,l,c,h,p,u,d,n,f);break}case"int32":{let e=r.bufferSync(i),n=r.data.get(o.dataId).values[0];t=pz(m,e,l,c,h,p,u,d,n,f);break}case"string":{let e=r.bufferSync(i),n=Ea.decodeString(r.data.get(o.dataId).values[0]);t=pz(m,e,l,c,h,p,u,d,n,f);break}default:throw new Error("Unsupported type "+i.dtype)}return r.makeTensorInfo(l,t.dtype,t.values)}var ZG={kernelName:Gr,backendName:"cpu",kernelFunc:JG};function QG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Ea.parseAxisParam(i,a.shape)[0],l=Cw.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;let r=mz({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r})}var eH={kernelName:Pr,backendName:"cpu",kernelFunc:QG},tH={kernelName:jr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;oL(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let e=a[i];s[i]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},nH=LL(pa,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),rH={kernelName:pa,backendName:"cpu",kernelFunc:nH};function aH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r;oL(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=tw.sliceInfo(a.shape,s,i,o,l,u,p,h,d);if(g)c=rB({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){Ea.assert(a.shape.length>=1,()=>"Input must have rank at least 1, got: "+a.shape.length);let e=tw.computeOutShape(x,w,v),t=mz({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});c=rB({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=n.bufferSync(a),t=Ez(f,e,v,x);c=n.makeTensorInfo(m,t.dtype,t.values)}return c}var sH={kernelName:Kr,backendName:"cpu",kernelFunc:aH};function iH(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:h}=t,d=n.data.get(p.dataId).values,c=n.data.get(h.dataId).values,[f,m]=Rz(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var oH={kernelName:Xr,backendName:"cpu",kernelFunc:iH};function lH(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,p,h]=Fz(o,l,a),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var uH={kernelName:Yr,backendName:"cpu",kernelFunc:lH};function pH(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(s.dataId).values,o=Dz(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var hH={kernelName:Jr,backendName:"cpu",kernelFunc:pH},dH=LL(Qr,e=>Math.tan(e)),cH={kernelName:Qr,backendName:"cpu",kernelFunc:dH},fH=LL(ea,e=>Math.tanh(e)),mH={kernelName:ea,backendName:"cpu",kernelFunc:fH};function gH(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:p}=Cw.calculateShapes(s,a,r.shape),h=!1,d=n.bufferSync(a),c=n.bufferSync(s),f=n.bufferSync(r),m=pz(d,c,r.shape,p,l,o,i,u,f,h);return n.makeTensorInfo(r.shape,m.dtype,m.values)}var yH={kernelName:Nr,backendName:"cpu",kernelFunc:gH};function bH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;oL(a,"tile");let i=zz(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var xH={kernelName:ta,backendName:"cpu",kernelFunc:bH};function wH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;oL(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=Vz(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var vH={kernelName:na,backendName:"cpu",kernelFunc:wH};function kH(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,h,d,c]=a.shape,[f,m]=null!=u?u:[h,d],g=[p,f,m,c],y=Ea.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],v=Ea.computeStrides(g),k=v[0],I=v[1],S=v[2],N=Ea.getTypedArrayFromDType(a.dtype,Ea.sizeFromShape(g));N.fill(l);let T=r.data.get(a.dataId).values,_=r.data.get(s.dataId).values;for(let C=0;C<p;++C){let e=1===s.shape[0]?_:_.subarray(8*C,8*C+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<c;++r){let a,s=e[6]*n+e[7]*t+1;if(0===s)continue;let u=(e[0]*n+e[1]*t+e[2])/s,p=(e[3]*n+e[4]*t+e[5])/s,c=SH(u,d,o),f=SH(p,h,o);switch(i){case"nearest":a=AH(T,h,d,b,x,w,C,f,c,r,l);break;case"bilinear":a=RH(T,h,d,b,x,w,C,f,c,r,l);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+i)}let m=C*k+t*I+n*S+r;N[m]=a}return r.makeTensorInfo(g,a.dtype,N)}return{dataId:r.write(N,g,a.dtype),shape:a.shape,dtype:a.dtype}}var IH={kernelName:ra,backendName:"cpu",kernelFunc:kH};function SH(e,t,n){switch(n){case"reflect":return NH(e,t);case"wrap":return TH(e,t);case"nearest":return CH(e,t);case"constant":default:return _H(e,t)}}function NH(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Ea.clamp(0,n,t-1)}function TH(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return Ea.clamp(0,n,t-1)}function _H(e,t){return e}function CH(e,t){return Ea.clamp(0,e,t-1)}function EH(e,t,n,r,a,s,i,o,l,u,p){let h=i*r+o*a+l*s+u;return 0<=o&&o<t&&0<=l&&l<n?e[h]:p}function AH(e,t,n,r,a,s,i,o,l,u,p){let h=Math.round(o),d=Math.round(l);return EH(e,t,n,r,a,s,i,h,d,u,p)}function RH(e,t,n,r,a,s,i,o,l,u,p){let h=Math.floor(o),d=Math.floor(l),c=h+1,f=d+1,m=(f-l)*EH(e,t,n,r,a,s,i,h,d,u,p)+(l-d)*EH(e,t,n,r,a,s,i,h,f,u,p),g=(f-l)*EH(e,t,n,r,a,s,i,c,d,u,p)+(l-d)*EH(e,t,n,r,a,s,i,c,f,u,p);return(c-o)*m+(o-h)*g}function $H(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;oL(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=Uz(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var FH={kernelName:sa,backendName:"cpu",kernelFunc:$H};function DH(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=a.shape[c]);let p=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let d=new Array(o);for(let c=0;c<d.length;c++){p[s]=c;let e=mz({inputs:{x:a},backend:n,attrs:{begin:p,size:h}});d[c]=rB({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}var MH={kernelName:ia,backendName:"cpu",kernelFunc:DH};function OH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;oL(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],p=[],h=o-l,d=s;for(let f=0;f<h;++f){let e=oV({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=e,p.push(e)}for(let f=0;f<i;++f){let e=Ea.createScalarValue(f,"int32"),t=n.makeTensorInfo([],"int32",e),r=GL({inputs:{a:t,b:d},backend:n}),s=IL({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=RP({inputs:{a:s,b:a},backend:n}),o=qW({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});u.push(o),p.push(t),p.push(r),p.push(s),p.push(i),p.push(o)}let c=VU({inputs:u,backend:n,attrs:{axis:0}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}var LH={kernelName:oa,backendName:"cpu",kernelFunc:OH},PH=[lB,cL,pB,dB,AL,fB,gB,bB,wB,kB,SB,TB,CB,RB,FB,zB,WB,UB,HB,iB,qB,XB,JB,ML,QB,SL,WL,tW,gL,rW,oW,uW,hW,cW,mW,yW,xW,vW,IW,NW,_W,EW,RW,FW,MW,LW,zW,WW,VW,UW,GW,jW,YW,jz,ZW,HL,iV,KL,lV,JL,bV,wV,kV,eP,rP,SV,TV,CV,AV,lP,hP,xL,$V,sW,DV,OV,PV,Kz,fP,yP,BV,vP,VV,HV,qV,YV,ZV,eU,nU,NP,aU,iU,lU,pU,dU,fU,gU,CP,bU,vU,TU,$P,MP,EU,$U,MU,PP,LU,WU,UU,HU,KU,Jz,GP,YU,ZU,eG,nG,vL,hV,aG,Qz,tB,aB,iG,lG,pG,dG,fG,mG,yG,uz,xG,SG,TG,AG,cz,$G,DG,OG,gz,SU,BG,VG,GG,jG,KG,YG,ZG,eH,kz,tH,Nz,Cz,rH,sH,oH,uH,hH,Pz,KW,cH,mH,yH,xH,vH,IH,WP,FH,MH,LH,zU];for(let t of PH)Ia(t);var zH={};b(zH,{assertNotComplex:()=>eq,bindCanvasToFramebuffer:()=>Ej,bindColorTextureToFramebuffer:()=>Aj,bindTextureToProgramUniformSampler:()=>Cj,bindTextureUnit:()=>Sj,bindVertexBufferToProgramAttribute:()=>Ij,callAndCheck:()=>tj,canBeRepresented:()=>sj,createFragmentShader:()=>uj,createFramebuffer:()=>kj,createProgram:()=>fj,createStaticIndexBuffer:()=>bj,createStaticVertexBuffer:()=>yj,createTexture:()=>wj,createVertexShader:()=>lj,getBatchDim:()=>Oj,getExtensionOrThrow:()=>oj,getFramebufferErrorMessage:()=>Fj,getMaxTexturesInShader:()=>Hj,getNumChannels:()=>xj,getProgramUniformLocation:()=>_j,getProgramUniformLocationOrThrow:()=>Tj,getRowsCols:()=>Lj,getShapeAs3D:()=>Pj,getTextureShapeFromLogicalShape:()=>zj,getWebGLDisjointQueryTimerVersion:()=>jj,getWebGLErrorMessage:()=>ij,getWebGLMaxTextureSize:()=>Vj,hasExtension:()=>qj,isCapableOfRenderingToFloatTexture:()=>Xj,isDownloadFloatTextureEnabled:()=>Yj,isReshapeFree:()=>Wj,isWebGLFenceEnabled:()=>Qj,isWebGLVersionEnabled:()=>Kj,linkProgram:()=>mj,logShaderSourceAndInfoLog:()=>cj,resetMaxTextureSize:()=>Uj,resetMaxTexturesInShader:()=>Gj,unbindColorTextureFromFramebuffer:()=>Rj,unbindTextureUnit:()=>Nj,validateFramebuffer:()=>$j,validateProgram:()=>gj,validateTextureSize:()=>vj});var BH,WH,VH,UH={},GH={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function HH(e,t){UH[e]=t}function jH(e,t){if(!(e in UH)||null!=t){let n=KH(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;UH[e]=n}let n=UH[e];return null==n||n.isContextLost()?(delete UH[e],jH(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),UH[e])}function qH(e){if(!Ge().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function KH(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?qH(e):t;return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete UH[e]},!1),Ge().getBool("SOFTWARE_WEBGL_ENABLED")&&(GH.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",GH)||n.getContext("experimental-webgl",GH):n.getContext("webgl2",GH)}function XH(e,t){return[t,e]}function YH(e,t){return e*t}function JH(e){let t=Ea.sizeFromShape(e),n=Math.ceil(t/4);return Ea.sizeToSquarishShape(n)}function ZH(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function QH(e,t){let[n,r]=ZH(e,t);return n*r*4}function ej(e,t){let n,r,a,s,i,o,l,u,p,h,d=e;return 2===Ge().getNumber("WEBGL_VERSION")?(n=d.R32F,r=d.R16F,a=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,p=d.HALF_FLOAT,h=d.FLOAT,o=d.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:p,textureTypeFloat:h}}function tj(e,t){let n=t();return Ge().getBool("DEBUG")&&nj(e),n}function nj(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+ij(e,t))}(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(BH||(BH={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(WH||(WH={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(VH||(VH={}));var rj=5.96e-8,aj=65504;function sj(e){return!!(Ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||rj<Math.abs(e)&&Math.abs(e)<aj)}function ij(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}function oj(e,t){return Dj(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function lj(e,t){let n=Dj(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(tj(e,()=>e.shaderSource(n,t)),tj(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function uj(e,t){let n=Dj(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(tj(e,()=>e.shaderSource(n,t)),tj(e,()=>e.compileShader(n)),Ge().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw cj(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var pj,hj,dj=/ERROR: [0-9]+:([0-9]+):/g;function cj(e,t){let n=dj.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((e,t)=>Ea.rightPad((t+1).toString(),s)+e),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),p=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+Ea.rightPad(u[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}function fj(e){return Dj(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function mj(e,t){if(tj(e,()=>e.linkProgram(t)),!Ge().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function gj(e,t){if(tj(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function yj(e,t){let n=Dj(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return tj(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),tj(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function bj(e,t){let n=Dj(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return tj(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),tj(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function xj(){return 2===Ge().getNumber("WEBGL_VERSION")?1:4}function wj(e){return Dj(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function vj(e,t){let n=Ge().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function kj(e){return Dj(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Ij(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(tj(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),tj(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),tj(e,()=>e.enableVertexAttribArray(o)),!0)}function Sj(e,t,n){Mj(e,n),tj(e,()=>e.activeTexture(e.TEXTURE0+n)),tj(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function Nj(e,t){Mj(e,t),tj(e,()=>e.activeTexture(e.TEXTURE0+t)),tj(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Tj(e,t,n){return Dj(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function _j(e,t,n){return e.getUniformLocation(t,n)}function Cj(e,t,n,r){tj(e,()=>Sj(e,t,r)),tj(e,()=>e.uniform1i(n,r))}function Ej(e){tj(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),tj(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),tj(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Aj(e,t,n){tj(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),tj(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Rj(e,t){tj(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),tj(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function $j(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Fj(e,t))}function Fj(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}function Dj(e,t,n){let r=tj(e,()=>t());if(null==r)throw new Error(n);return r}function Mj(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function Oj(e,t=2){return Ea.sizeFromShape(e.slice(0,e.length-t))}function Lj(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Pj(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Oj(e),...Lj(e)]),t}function zj(e,t=!1){let n=Ge().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Ge().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&Ge().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,e=e.map((t,n)=>n>=e.length-2?Ea.nearestLargerEven(e[n]):e[n]),1===e.length&&(e=[2,e[0]])),2!==e.length&&(e=Ea.squeezeShape(e).newShape);let a=Ea.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){let t=Oj(e),n=2,r=2;e.length&&([n,r]=Lj(e)),a=t*(n/2)*(r/2),s=Ea.sizeToSquarishShape(a).map(e=>2*e)}else s=Ea.sizeToSquarishShape(a);return s}function Bj(e){return e%2===0}function Wj(e,t){if(e=e.slice(-2),t=t.slice(-2),Ea.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||Bj(n)&&Bj(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Bj(e[0])&&Bj(t[0])}function Vj(e){if(null==pj){let t=jH(e);pj=t.getParameter(t.MAX_TEXTURE_SIZE)}return pj}function Uj(){pj=null}function Gj(){hj=null}function Hj(e){if(null==hj){let t=jH(e);hj=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,hj)}function jj(e){if(0===e)return 0;let t,n=jH(e);return t=qj(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:qj(n,"EXT_disjoint_timer_query")?1:0,t}function qj(e,t){return null!=e.getExtension(t)}function Kj(e){try{if(null!=jH(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Xj(e){if(0===e)return!1;let t=jH(e);if(1===e){if(!qj(t,"OES_texture_float"))return!1}else if(!qj(t,"EXT_color_buffer_float"))return!1;return Jj(t)}function Yj(e){if(0===e)return!1;let t=jH(e);if(1!==e){if(qj(t,"EXT_color_buffer_float"))return Jj(t);let e="EXT_color_buffer_half_float";if(qj(t,e)){let n=t.getExtension(e);return Zj(t,n)}return!1}return!(!qj(t,"OES_texture_float")||!qj(t,"WEBGL_color_buffer_float"))&&Jj(t)}function Jj(e){let t=ej(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function Zj(e,t){let n=ej(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}function Qj(e){return 2===e&&null!=jH(e).fenceSync}function eq(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&Ea.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}var tq=Ge();function nq(){let e,t,n,r,a,s,i,o,l,u;return 2===Ge().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=Ge().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function rq(e,t,n="index"){let r=Ea.computeStrides(t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / ${t}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${s}; ${i};`}).join("")}function aq(e,t,n="index"){let r=Ea.computeStrides(t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${s}; ${i};`}).join("")}function sq(e,t){let n=e.length,r=e.map(e=>`${t}[${e}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}function iq(e,t,n="index"){let r=e.map((e,t)=>t),a=sq(r,t);return a.map((t,r)=>{let s=`int ${e[r]} = ${n} / ${a[r]}`,i=r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`;return`${s}; ${i};`}).join("")}function oq(e){let t=Ea.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function lq(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}tq.registerFlag("HAS_WEBGL",()=>tq.getNumber("WEBGL_VERSION")>0),tq.registerFlag("WEBGL_VERSION",()=>Kj(2)?2:Kj(1)?1:0),tq.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),tq.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===tq.get("WEBGL_VERSION")),tq.registerFlag("WEBGL_CPU_FORWARD",()=>!0),tq.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),tq.registerFlag("WEBGL_PACK",()=>tq.getBool("HAS_WEBGL")),tq.registerFlag("WEBGL_PACK_NORMALIZATION",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_PACK_CLIP",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_PACK_REDUCE",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_LAZILY_UNPACK",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_CONV_IM2COL",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>tq.getBool("WEBGL_PACK")),tq.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Vj(tq.getNumber("WEBGL_VERSION"))),tq.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Hj(tq.getNumber("WEBGL_VERSION"))),tq.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=tq.getNumber("WEBGL_VERSION");return 0===e?0:jj(e)}),tq.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>tq.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Zs.isMobile()),tq.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Xj(tq.getNumber("WEBGL_VERSION"))),tq.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!tq.getBool("WEBGL_FORCE_F16_TEXTURES")&&tq.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),tq.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Yj(tq.getNumber("WEBGL_VERSION"))),tq.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Qj(tq.getNumber("WEBGL_VERSION"))),tq.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>tq.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),tq.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),tq.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Zs.isMobile()?1:-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),tq.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),tq.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),tq.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),tq.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),tq.registerFlag("WEBGL_EXP_CONV",()=>!1),tq.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>tq.getBool("IS_TEST")),tq.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),tq.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),tq.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),tq.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);var uq="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:pq}=Cw;function hq(e,t,n){let r=[];if(e.forEach(e=>{let t=Ea.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=Qq(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let a,s,i=r.join("\n"),o=e.map(e=>fq(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),l=t.texShape,u=nq(),p=yq(u),h=wq(u);return t.isPacked?(a=mq(t.logicalShape,l,n.enableShapeUniforms),s=xq(u)):(a=gq(t.logicalShape,l,n.enableShapeUniforms),s=bq(u)),n.packedInputs&&(h+=Sq),[h,p,s,i,a,o,n.userCode].join("\n")}function dq(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return Pq(e,t);case 1:return Bq(e,t);case 2:return Vq(e,t);case 3:return Gq(e,t);case 4:return jq(e,t);case 5:return qq(e);case 6:return Kq(e);default:throw new Error(n.length+"-D input sampling is not yet supported")}}function cq(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return Lq(e);case 1:return zq(e,t);case 2:return Wq(e,t);case 3:return Uq(e,t);default:return Hq(e,t)}}function fq(e,t,n=!1,r){let a="";a+=n?cq(e,r):dq(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?Yq(e,t):Jq(e,t)),a}function mq(e,t,n){switch(e.length){case 0:return Nq();case 1:return Tq(e,t,n);case 2:return Dq(e,t,n);case 3:return Cq(e,t,n);default:return Aq(e,t,n)}}function gq(e,t,n){switch(e.length){case 0:return Nq();case 1:return _q(e,t,n);case 2:return Mq(e,t,n);case 3:return Eq(e,t,n);case 4:return Rq(e,t,n);case 5:return $q(e,t);case 6:return Fq(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}function yq(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function bq(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function xq(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function wq(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${vq}\n    ${kq}\n    ${Iq}\n  `}var vq="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",kq="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Iq="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Sq="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Nq(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Tq(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}function _q(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function Cq(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function Eq(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${aq(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=rq(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}function Aq(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}function Rq(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${aq(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=rq(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}function $q(e,t){let n=rq(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function Fq(e,t){let n=rq(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function Dq(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Ea.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function Mq(e,t,n){return Ea.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function Oq(e){return"offset"+e}function Lq(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=nq();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}function Pq(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=Oq(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function zq(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=nq();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}function Bq(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Xq(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=Oq(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Wq(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=nq();if(null!=s&&Ea.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${p}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}function Vq(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&Ea.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0],n=s[1];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=Ea.squeezeShape(n),l=i;if(l.length<n.length){let n=eK(e,l),r=["row","col"];return`\n      ${dq(n,t)}\n      float ${a}(int row, int col) {\n        return ${a}(${tK(r,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Xq(e)}\n      }\n    `;let u=s[0],p=s[1],h=Oq(r);return 1===p?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${p}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function Uq(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=n.slice(1),s=[1,2],i=eK(e,r),o=["b","row","col"];return`\n        ${cq(i,t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${tK(o,s)});\n        }\n      `}let o=nq();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],p=Math.ceil(n[2]/2),h=p*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${p}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}function Gq(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=Ea.squeezeShape(n),u=o;if(u.length<n.length){let n=eK(e,u),r=["row","col","depth"];return`\n        ${dq(n,t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${tK(r,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${Xq(e)}\n      }\n    `;let p=e.shapeInfo.texShape,h=p[0],d=p[1],c=e.shapeInfo.flatOffset;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=Oq(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function Hq(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=nq();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],p=l[1],h=Math.ceil(s[i-1]/2),d=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,d*=s[i-m-1],f=`b${m} * ${d} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${p};\n      int texC = index - texR * ${p};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}function jq(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=Ea.squeezeShape(n);if(l.length<n.length){let n=eK(e,l),r=["row","col","depth","depth2"];return`\n      ${dq(n,t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${tK(r,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${Xq(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=Oq(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}function qq(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=Ea.squeezeShape(t);if(l.length<t.length){let t=eK(e,l),n=["row","col","depth","depth2","depth3"];return`\n      ${dq(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${tK(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${Xq(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1];if(c===o&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=Oq(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Kq(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=Ea.squeezeShape(t);if(a.length<t.length){let t=eK(e,a),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${dq(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${tK(n,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,p=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${p}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Xq(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===p&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=Oq(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${p} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Xq(e){let t=e.name,n=Ea.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Yq(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=pq(e.shapeInfo.logicalShape,t.logicalShape),u=Zq(o),p=o-i,h=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${h[e+p]} = 0;`).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+p]).join(", ");let c="return outputValue;",f=1===Ea.sizeFromShape(e.shapeInfo.logicalShape),m=1===Ea.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${d});\n      ${c}\n    }\n  `}function Jq(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&Ea.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,p=Zq(l),h=pq(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map(e=>`coords.${c[e+d]} = 0;`).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+c[t+d]).join(", "),`\n    float ${a}() {\n      ${p} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}function Zq(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Qq(e,t,n){let{newShape:r,keptDims:a}=Ea.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!Ea.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function eK(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function tK(e,t){return t.map(t=>e[t]).join(", ")}function nK(e,t,n,r){let a=n.map((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),s=a.map(e=>e.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=hq(a,i,t),l=uj(e.gl,o),u=e.createProgram(l);return Ge().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},rK(e,t,u)))}function rK(e,t,n){let r,a,s,i=[],o=[],l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Ge().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));let p=!1;for(let h of t.variableNames){let r={name:h,uniform:e.getUniformLocation(n,h,p),offset:e.getUniformLocation(n,"offset"+h,p)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,h+"Shape",p),r.texShape=e.getUniformLocation(n,h+"TexShape",p)),i.push(r)}if(t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",p),s=e.getUniformLocation(n,"outShapeStrides",p),a=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms)for(let h of t.customUniforms)o.push(e.getUniformLocation(n,h.name,p));return{variablesLocations:i,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function aK(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!Ea.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!Ea.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}function sK(e,t,n,r,a){t.program.enableShapeUniforms||(aK(t.inShapeInfos,n),aK([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Ge().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){let r=n[l],{uniform:a,offset:s,shape:i,texShape:o}=t.variablesLocations[l];if(i){let{uniformShape:n}=Qq(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n));break;default:break}}if(o&&e.gl.uniform2i(o,r.texData.texShape[0],r.texData.texShape[1]),null!=a){if(r.isUniform){if(Ea.sizeFromShape(r.shape)<2)e.gl.uniform1f(a,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}continue}null!=r.texData.slice&&null!=s&&e.gl.uniform1i(s,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,a,l)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let n=Ea.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break;default:break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let l=0;l<t.program.customUniforms.length;++l){let n=t.program.customUniforms[l],r=t.customUniformLocations[l],s=a[l];if("float"===n.type)e.gl.uniform1fv(r,s);else if("vec2"===n.type)e.gl.uniform2fv(r,s);else if("vec3"===n.type)e.gl.uniform3fv(r,s);else if("vec4"===n.type)e.gl.uniform4fv(r,s);else if("int"===n.type)e.gl.uniform1iv(r,s);else if("ivec2"===n.type)e.gl.uniform2iv(r,s);else if("ivec3"===n.type)e.gl.uniform3iv(r,s);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,s)}}e.executeProgram()}function iK(e,t,n){let r="";t.concat(n).forEach(t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=Qq(e.packedInputs,t.shape,s),u="",p="",h="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=Ea.computeStrides(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else p=`${o[0]>1}_${o[1]>1}`;let d=t.shape.length,c=2===o.length&&Ea.arraysEqual(t.shape,s),f=1===Ea.sizeFromShape(t.shape),m=Cw.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&Ea.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${p}_${h}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+Ge().getNumber("WEBGL_VERSION"),s}function oK(e){return Ge().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var lK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=BH.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=nq();this.outputShape=e,this.enableShapeUniforms=oK(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?aq(["r","c","d"],e):rq(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},uK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=BH.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=nq();this.outputShape=e,this.enableShapeUniforms=oK(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?aq(["r","c","d"],e):rq(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},pK=class{constructor(e){this.variableNames=["A"],this.outTexUsage=WH.DOWNLOAD;let t=nq();this.outputShape=e,this.userCode=`\n      ${uq}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},hK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=WH.DOWNLOAD;let t=nq();this.outputShape=e,this.userCode=`\n      ${uq}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},dK={R:0,G:1,B:2,A:3},cK=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=nq();this.outputShape=e,this.enableShapeUniforms=oK(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let e=n[i];s+=`\n          if(offset == ${i}) {\n            result = values[${dK[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?lq():oq(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}},fK=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=nq();this.outputShape=e,this.enableShapeUniforms=oK(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){let a=2*s+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":""+e[2]}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":""+e[1]}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?lq():oq(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}},mK={};function gK(e){let t=nq(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return lj(e,n)}function yK(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return yj(e,t)}function bK(e){let t=new Uint16Array([0,1,2,2,1,3]);return bj(e,t)}function xK(e,t,n,r,a,s){vj(t,n);let i=wj(e),o=e.TEXTURE_2D;return tj(e,()=>e.bindTexture(o,i)),tj(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),tj(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),tj(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),tj(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===Ge().getNumber("WEBGL_VERSION")?tj(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):tj(e,()=>e.texStorage2D(o,1,r,t,n)),tj(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function wK(e){return e.internalFormatFloat}function vK(e,t,n,r){let[a,s]=XH(t,n);return xK(e,a,s,wK(r),r.textureFormatFloat,e.FLOAT)}function kK(e){return e.internalFormatHalfFloat}function IK(e,t,n,r){let[a,s]=XH(t,n);return xK(e,a,s,kK(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function SK(e){return e.downloadTextureFormat}function NK(e,t,n,r){let[a,s]=XH(t,n);return xK(e,a,s,SK(r),e.RGBA,e.UNSIGNED_BYTE)}function TK(e){return e.internalFormatPackedFloat}function _K(e,t,n,r){let[a,s]=ZH(t,n);return xK(e,a,s,TK(r),e.RGBA,e.FLOAT)}function CK(e){return e.internalFormatPackedHalfFloat}function EK(e,t,n,r){let[a,s]=ZH(t,n);return xK(e,a,s,CK(r),e.RGBA,r.textureTypeHalfFloat)}function AK(e,t,n){return tj(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ij(e,t,"clipSpacePos",n,3,20,0)&&Ij(e,t,"uv",n,2,20,12)}function RK(e,t,n,r,a,s){let i,o,l;tj(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Ge().getNumber("WEBGL_VERSION")?tj(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):tj(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),tj(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function $K(e,t,n){tj(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===Ge().getNumber("WEBGL_VERSION")?tj(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):tj(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===Ge().getNumber("WEBGL_VERSION")?tj(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):tj(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),tj(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function FK(e,t,n,r){let a=e.createBuffer();tj(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=16*t*n;return tj(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),tj(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),tj(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function DK(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function MK(e,t,n,r){let[a,s]=XH(t,n),i=4,o=new Uint8Array(YH(t*n,i));return tj(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function OK(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(QH(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function LK(e,t,n){let r=new Float32Array(t*n*4);return tj(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}b(mK,{bindVertexProgramAttributeStreams:()=>AK,createBufferFromOutputTexture:()=>FK,createFloat16MatrixTexture:()=>IK,createFloat16PackedMatrixTexture:()=>EK,createFloat32MatrixTexture:()=>vK,createIndexBuffer:()=>bK,createPackedMatrixTexture:()=>_K,createUnsignedBytesMatrixTexture:()=>NK,createVertexBuffer:()=>yK,createVertexShader:()=>gK,downloadByteEncodedFloatMatrixFromOutputTexture:()=>MK,downloadFloat32MatrixFromBuffer:()=>DK,downloadMatrixFromPackedOutputTexture:()=>LK,downloadPackedMatrixFromBuffer:()=>OK,getInternalFormatForFloat16MatrixTexture:()=>kK,getInternalFormatForFloat16PackedMatrixTexture:()=>CK,getInternalFormatForFloat32MatrixTexture:()=>wK,getInternalFormatForPackedMatrixTexture:()=>TK,getInternalFormatForUnsignedBytesMatrixTexture:()=>SK,uploadDenseMatrixToTexture:()=>RK,uploadPixelDataToTexture:()=>$K});var PK=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=Ge().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,HH(t,e)):this.gl=jH(t),e=this.gl,2===Ge().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>tj(t,()=>t.createVertexArray()),this.bindVertexArray=e=>tj(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>tj(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>tj(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>tj(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>tj(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>tj(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>tj(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ge().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=oj(this.gl,e),qj(this.gl,t))this.textureHalfFloatExtension=oj(this.gl,t);else if(Ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),qj(this.gl,r))this.colorBufferHalfFloatExtension=oj(this.gl,r);else if(Ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",qj(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!qj(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=yK(this.gl),this.indexBuffer=bK(this.gl),this.framebuffer=kj(this.gl),this.textureConfig=ej(this.gl,this.textureHalfFloatExtension)}get debug(){return Ge().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;tj(e,()=>e.finish()),tj(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),tj(e,()=>e.deleteFramebuffer(this.framebuffer)),tj(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),tj(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),tj(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),vK(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),IK(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),NK(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),$K(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),RK(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),EK(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),_K(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Rj(this.gl,this.framebuffer),this.outputTexture=null),tj(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>MK(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return OK(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return DK(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=FK(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ge().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>LK(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=gK(t));let n=fj(t);tj(t,()=>t.attachShader(n,this.vertexShader)),tj(t,()=>t.attachShader(n,e)),mj(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&gj(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;tj(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),AK(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(tj(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&gj(this.gl,this.program),tj(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?Tj(this.gl,e,t):_j(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),tj(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Cj(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=ZH(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&gj(this.gl,this.program),$j(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}tj(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),tj(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=oj(this.gl,2===Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Ea.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=zK(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Ge().platform&&(n=Ge().platform.setTimeoutCustom.bind(Ge().platform)),Ea.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Aj(this.gl,e,this.framebuffer),this.debug&&$j(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Aj(this.gl,this.outputTexture,this.framebuffer),this.debug&&$j(this.gl)):Rj(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;Aj(r,e,this.framebuffer),this.debug&&$j(r),this.outputTexture=e,tj(r,()=>r.viewport(0,0,t,n)),tj(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),tj(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};function zK(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:BK,bincountImpl:WK,bincountReduceImpl:VK,bitwiseAndImpl:UK,castImpl:GK,ceilImpl:HK,concatImpl:jK,equalImpl:qK,expImpl:KK,expm1Impl:XK,floorImpl:YK,gatherNdImpl:JK,gatherV2Impl:ZK,greaterImpl:QK,greaterEqualImpl:eX,lessImpl:tX,lessEqualImpl:nX,linSpaceImpl:rX,logImpl:aX,maxImpl:sX,maximumImpl:iX,minimumImpl:oX,multiplyImpl:lX,negImpl:uX,notEqualImpl:pX,prodImpl:hX,raggedGatherImpl:dX,raggedRangeImpl:cX,raggedTensorToTensorImpl:fX,rangeImpl:mX,rsqrtImpl:gX,scatterImpl:yX,sigmoidImpl:bX,simpleAbsImpl:xX,sliceImpl:wX,sparseFillEmptyRowsImpl:vX,sparseReshapeImpl:kX,sparseSegmentReductionImpl:IX,sqrtImpl:SX,staticRegexReplaceImpl:NX,stridedSliceImpl:TX,stringNGramsImpl:_X,stringSplitImpl:CX,stringToHashBucketFastImpl:EX,subImpl:AX,tileImpl:RX,topKImpl:$X,transposeImpl:FX,uniqueImpl:DX}=pL;function MX(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function OX(e,t){return 1===t?[e]:MX(e,t)}function LX(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var PX=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=oK(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=OX("rc",this.rank),t=Zq(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=e[e.length-1-t]+","+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > "+(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},zX=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=oK(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${BX(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?lq():oq(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function BX(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?iq(["r","c","d"],"inputShape"):rq(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}var WX=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r=jX(t,n),a=qX(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=UX(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}return r===VH.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===VH.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===VH.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===VH.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===VH.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=jX(n,r),s=qX(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=UX(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ge().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function VX(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format "+t)}function UX(e,t,n,r,a){let s,i=GX(t,r);if(a){let[t,n]=ZH(e[0],e[1]);s=t*n}else{let[t,n]=XH(e[0],e[1]);s=t*n}let o=VX(n,i);return s*o}function GX(e,t){switch(e){case VH.PACKED_2X2_FLOAT32:return TK(t);case VH.PACKED_2X2_FLOAT16:return CK(t);case VH.UNPACKED_FLOAT32:return wK(t);case VH.UNPACKED_FLOAT16:return kK(t);case VH.PACKED_4X1_UNSIGNED_BYTE:return SK(t);default:throw new Error("Unknown physical texture type "+e)}}function HX(e){return Ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?VH.PACKED_2X2_FLOAT32:VH.UNPACKED_FLOAT32:e?VH.PACKED_2X2_FLOAT16:VH.UNPACKED_FLOAT16}function jX(e,t){if(e===WH.UPLOAD)return VH.PACKED_2X2_FLOAT32;if(e===WH.RENDER||null==e)return HX(t);if(e===WH.DOWNLOAD||e===WH.PIXELS)return VH.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function qX(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var KX=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=oK(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},XX="if (isnan(x)) return x;",YX="return x;",JX="return abs(x);",ZX="return (x >= 0.0) ? x : (exp(x) - 1.0);",QX=XX+"\n  return (x < 0.0) ? 0.0 : x;\n",eY=XX+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",tY="return x;",nY="return 1.0 / (1.0 + exp(-1.0 * x));",rY="return x;",aY="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",sY="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",iY="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",oY="return 1.0 / (1.0 + exp(-1.0 * x));",lY=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=oK(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},uY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=oK(this.outputShape.length);let t=e.length,n=OX("rc",t),r=Zq(t),a=LX(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},pY=Dv.whereImpl,hY=1e-7,dY=1e-4,cY={};function fY(e){return e in cY||(cY[e]={}),cY[e]}var mY=Ge().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),gY=600;function yY(){return null==Ge().global.screen?1024:Ge().global.screen.height*Ge().global.screen.width*window.devicePixelRatio*gY/1024/1024}var bY=class e extends U{nextDataId(){return e.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ge().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof PK)t=e;else{let n=jH(Ge().getNumber("WEBGL_VERSION"),e);t=new PK(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=jH(Ge().getNumber("WEBGL_VERSION"));t=new PK(e),this.binaryCache=fY(Ge().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new WX(this.gpgpu),this.numMBBeforeWarning=yY(),this.texData=new V(this,Ii())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let l=Pj(t),u=new cK(l,!1,s),p=this.runWebGLProgram(u,[i],n,[[r,a]]);return p.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),p.dataId}write(e,t,n){if((Ge().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ge().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:WH.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(Ge().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:WH.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new lY(i,tY):new KX(i,tY);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,p=null!=this.activeTimers;if(p&&(l=Ea.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=Cw.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return p&&(this.downloadWaitMs+=Ea.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new lY(r,tY):new KX(r,tY);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ge().getBool("DEBUG")&&!Ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ge().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,p=null;if("complex64"!==s&&Ge().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);p=this.gpgpu.createBufferFromTexture(t.texture.texture,...JH(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=Cw.mergeRealAndImagArrays(t,n)}else if(null==p)u=this.getValuesFromTexture(e);else{let e=Ea.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=p){let e=this.gpgpu.gl;tj(e,()=>e.deleteBuffer(p))}let h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ii().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new lY(a,tY):new KX(a,tY);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),p=Ii().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:p},h.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>Ea.decodeString(e));return Qo(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Qo(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!sj(n))throw Ge().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=Ea.sizeFromShape(t);if(Ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...JH(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Ge().getBool("WEBGL_PACK")&&!0===r,i=s?Pj(t):t,o=s?new hK(i):new pK(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=Ea.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=Ea.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=Ea.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ea.now(),endMs:null}}endTimer(e){return Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ea.now(),e)}async getQueryTime(e){if(Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=mY){return Ge().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&Ea.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Cw.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return pY(e.shape,t)}packedUnaryOp(e,t,n){let r=new lY(e.shape,t),a=this.compileAndRun(r,[e],n);return Ii().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=xX(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,JX,e.dtype);let t=new KX(e.shape,JX),n=this.compileAndRun(t,[e]);return Ii().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ea.isString(n[0])){let a=n.map(e=>Ea.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Ii().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new uY(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new PX(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[Oj(e.shape),...Lj(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Oj(t),...Lj(t)],s=new zX(a,n),i=!0,o=[n],l=this.runWebGLProgram(s,[r],e.dtype,o,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=Ea.sizeFromShape(a),n=t[0]*t[1]*4;Ea.assert(e<=n,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i,o=Pj(a);i=r?new uK(o):new lK(o);let l=!0,u=[null!=t?t:JH(o)],p=this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,u,l,t);return{dtype:s,shape:a,dataId:p.dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===BH.DENSE){let t=null!=s?s:JH(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Ea.sizeFromShape(i.shape))return o.values=Ea.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Ea.sizeFromShape(t.shape)<=Ge().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Wj(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);let p,h={shape:i.shape,texData:o,isUniform:!1},d=iK(e,u,h),c=this.getAndSaveBinary(d,()=>nK(this.gpgpu,e,u,h)),f=null!=this.activeTimers;f&&(p=this.startTimer()),Ge().get("ENGINE_COMPILE_ONLY")||sK(this.gpgpu,c,u,h,r),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));let m=Ge().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=Ea.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ge().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ge().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ti(()=>{if(!Ge().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Ge().getBool("DEBUG");Ge().set("DEBUG",!1);let t=this.abs(mh(1e-8)).dataSync()[0];if(Ge().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?hY:dY}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=Ea.now());let p=t.texShape;if(null==p&&(p=zj(n,o),t.texShape=p),null!=a){let e,s=Pj(n),i=p[1],h=p[0],d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!d)&&([i,h]=ZH(p[0],p[1])),e=o?new fK(s,d):new cK(s,d);let c=d?[h,i]:p,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=d?WH.PIXELS:WH.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);let g=[[h,i]],y=this.runWebGLProgram(e,[f],r,g,!0),b=this.texData.get(y.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,Ge().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Ea.now()-l)}else{let e=this.acquireTexture(p,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=xY(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ea.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Tw(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(cj(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=rK(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:r,height:a,width:s,channels:i}=e,o=Ii().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(r,t,n,a,s,i);return Ii().makeTensorFromDataId(l,t,n,o)}};function xY(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}bY.nextDataId=0;var wY="4.16.0";function vY(){Ge().set("WEBGL_FORCE_F16_TEXTURES",!0)}Zs.isBrowser()&&Oi("webgl",()=>new bY,2);var kY={forceHalfFloat:vY},IY="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",SY=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Cw.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=oK(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},NY="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",TY=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Cw.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=oK(a);let s="";if(r)if(0===a||1===Ea.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${Zq(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=OX("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function _Y(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var CY={kernelName:fn,backendName:"webgl",kernelFunc:_Y};function EY(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=_Y({inputs:{x:r},backend:n}),l=_Y({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var AY={kernelName:St,backendName:"webgl",kernelFunc:EY},RY="return (a < 0.) ? b * a : a;",$Y="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function FY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",Ea.createScalarValue(s,"float32")),o=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TY($Y,a.shape,i.shape):new SY(RY,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}var DY={kernelName:wn,backendName:"webgl",kernelFunc:FY},MY="return (a < 0.) ? b * a : a;",OY="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function LY(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TY(OY,r.shape,a.shape):new SY(MY,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}var PY={kernelName:ir,backendName:"webgl",kernelFunc:LY},zY="if (isnan(x)) return x;";function BY({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){let e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u,p=Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;return u=p?new lY(i.shape,t):new KX(i.shape,e),o.runWebGLProgram(u,[i],l)}}function WY({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,p=o;if(r&&"complex64"===l.dtype){let t=p.texData.get(l.dataId),n=p.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new SY(e,l.shape,u.shape);return p.runWebGLProgram(i,[a,s],Ds(n.dtype,r.dtype))}),s=EY({inputs:{real:r,imag:a},backend:p});return p.disposeIntermediateTensorInfo(r),p.disposeIntermediateTensorInfo(a),s}let h=s||Ds(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||p.shouldExecuteOnCPU([l,u]))&&null!=a){let e=p.texData.get(l.dataId).values,t=p.texData.get(u.dataId).values,n="string"===l.dtype?Cw.fromUint8ToStringArray(e):e,r="string"===l.dtype?Cw.fromUint8ToStringArray(t):t,[s,i]=a(l.shape,u.shape,n,r,h),o=p.makeTensorInfo(i,h),d=p.texData.get(o.dataId);return d.values=s,o}let d,c=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;return d=c?new TY(t,l.shape,u.shape,n):new SY(e,l.shape,u.shape),p.runWebGLProgram(d,[l,u],h)}}function VY(e,t=!1){if("linear"===e)return t?rY:YX;if("relu"===e)return t?sY:QX;if("elu"===e)return t?aY:ZX;if("relu6"===e)return t?iY:eY;if("prelu"===e)return t?OY:MY;if("leakyrelu"===e)return t?$Y:RY;if("sigmoid"===e)return t?oY:nY;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var UY=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=oK(this.outputShape.length);let u=r?e[1]:e[2],p=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${p}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${p}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},GY={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},HY=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Cw.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},jY="return a * b;";function qY(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=Cw.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new HY(GY.REAL,a.shape,s.shape),i=new HY(GY.IMAG,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),p=EY({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),p}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=lX(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i),u=r.texData.get(l.dataId);return u.values=n,l}return t=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TY(jY,a.shape,s.shape):new SY(jY,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var KY={kernelName:Kn,backendName:"webgl",kernelFunc:qY};function XY(e,t,n){let r=[Oj(e.shape),...Lj(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Oj(t),...Lj(t)],i=new zX(s,r),o=!0,l=[r],u=n.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function YY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=Ea.sizeFromShape(a.shape),l=Ea.inferFromImplicitShape(s,o),u=Ea.sizeFromShape(l);Ea.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let p=i.texData.get(a.dataId);return!p.isPacked||Wj(a.shape,l)||null!==p.texture&&Wj(p.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):XY(a,l,i)}var JY={kernelName:mr,backendName:"webgl",kernelFunc:YY},ZY=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${Ea.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},QY=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),p=n%4,h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}};function eJ(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=Cw.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function tJ(e,t,n,r){let a=eJ(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:p,outSize:h}=a[i];o="mean"===n?0===i?new ZY({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:h},u):new ZY({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:h}):new QY({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:h},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}var nJ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=Zq(this.rank),a=rJ(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}};function rJ(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}var aJ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=Zq(this.rank),a=MX("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function sJ(e,t,n){let r=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aJ(e.shape,t):new nJ(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function iJ(e,t,n,r){let a=t,s=e.shape.length,i=Ea.parseAxisParam(a,e.shape),o=i,l=Cw.getAxesPermutation(o,s),u=null!=l,p=e;u&&(p=sJ(e,l,r),o=Cw.getInnerMostAxes(o.length,s)),Cw.assertAxesAreInnerMostDims("sum",o,s);let[h,d]=Cw.computeOutAndReduceShapes(p.shape,o),c=h;n&&(c=Cw.expandShapeToKeepDim(h,i));let f=Ea.sizeFromShape(d),m=Ea.sizeFromShape(e.shape)/f,g=YY({inputs:{x:p},attrs:{shape:[m,f]},backend:r}),y=Ms(e.dtype),b=tJ(g,y,"sum",r),x=YY({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(p),x}function oJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return iJ(a,s,i,n)}var lJ={kernelName:Or,backendName:"webgl",kernelFunc:oJ};function uJ(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let p=0;p<u.length;p++)u[p]=s.shape[i[p]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=FX(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype);let r=o.texData.get(t.dataId);r.values=n}else t=sJ(s,i,o);return t}var pJ={kernelName:aa,backendName:"webgl",kernelFunc:uJ},hJ=1e3;function dJ({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,p=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[p-1]:t.shape[p-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[p-2]:t.shape[p-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=Ea.sizeFromShape(m),b=Ea.sizeFromShape(g),x=Fp.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);Ea.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let w,v=n?[y,h,c]:[y,c,h],k=r?[b,f,d]:[b,d,f],I=YY({inputs:{x:e},backend:a,attrs:{shape:v}}),S=YY({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(y,b),_=n?I.shape[1]:I.shape[2],C=null!=s,E=null!=i,A="leakyrelu"===l,R=null!=l?VY(l,!0):null,$=C||E||A||null!=R;if((1===c||1===f)&&_>hJ&&!1===$){let e=I,t=S;n&&(e=uJ({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=uJ({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));let s=1!==f,i=1===f,o=e;s&&(o=YY({inputs:{x:e},backend:a,attrs:{shape:[T,_,1]}}),N.push(o));let l=1===f?2:1,u=t;i&&(u=YY({inputs:{x:t},backend:a,attrs:{shape:[T,1,_]}}),N.push(u));let p=qY({inputs:{a:o,b:u},backend:a});w=oJ({inputs:{x:p},backend:a,attrs:{axis:l,keepDims:!0}}),N.push(p)}else{let l=Ds(e.dtype,t.dtype),u=new UY(v,k,[T,c,f],n,r,C,R,E,A),p=[I,S];if(null!=s&&p.push(s),E&&p.push(i),A){let e=a.makeTensorInfo([],"float32",Ea.createScalarValue(o,"float32"));p.push(e),N.push(e)}w=a.runWebGLProgram(u,p,l)}let F=YY({inputs:{x:w},backend:a,attrs:{shape:x}});N.push(w);for(let D of N)a.disposeIntermediateTensorInfo(D);return F}function cJ(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r;return dJ({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:p})}var fJ={kernelName:ca,backendName:"webgl",kernelFunc:cJ},mJ="return abs(x);";function gJ(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=xX(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lY(a.shape,mJ):new KX(a.shape,mJ),r.runWebGLProgram(t,[a],a.dtype)}var yJ={kernelName:Je,backendName:"webgl",kernelFunc:gJ},bJ=XX+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",xJ=BY({opSnippet:bJ}),wJ={kernelName:Ze,backendName:"webgl",kernelFunc:xJ},vJ=XX+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",kJ=BY({opSnippet:vJ}),IJ={kernelName:Qe,backendName:"webgl",kernelFunc:kJ},SJ="return a + b;",NJ=WY({opSnippet:SJ,packedOpSnippet:SJ,supportsComplex:!0,cpuKernelImpl:BK}),TJ={kernelName:et,backendName:"webgl",kernelFunc:NJ},_J=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);let n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});let r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}},CJ=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);let n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});let r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}};function EJ(e){let{inputs:t,backend:n}=e,r=t;if(1===r.length)return _Y({inputs:{x:r[0]},backend:n});if(r.length>Ge().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let e=Math.floor(r.length/2),t=EJ({inputs:r.slice(0,e),backend:n}),a=EJ({inputs:r.slice(e),backend:n});return EJ({inputs:[t,a],backend:n})}let a=r.map(e=>e.dtype).reduce((e,t)=>Ds(e,t)),s=r.map(e=>e.shape),i=Ge().getBool("WEBGL_PACK")?new CJ(r[0].shape,s):new _J(r[0].shape,s);return n.runWebGLProgram(i,r,a)}var AJ={kernelName:tt,backendName:"webgl",kernelFunc:EJ};function RJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Ea.parseAxisParam(s,a.shape),u=l,p=Cw.getAxesPermutation(u,o),h=a;null!=p&&(h=uJ({inputs:{x:a},backend:n,attrs:{perm:p}}),u=Cw.getInnerMostAxes(u.length,o)),Cw.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=Cw.computeOutAndReduceShapes(h.shape,u),m=Ea.sizeFromShape(f),g=YY({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),y=tJ(g,g.dtype,"all",n);if(i){let e=Cw.expandShapeToKeepDim(c,l);d=YY({inputs:{x:y},backend:n,attrs:{shape:e}})}else d=YY({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=p&&n.disposeIntermediateTensorInfo(h),d}var $J={kernelName:nt,backendName:"webgl",kernelFunc:RJ};function FJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Ea.parseAxisParam(s,a.shape),u=l,p=Cw.getAxesPermutation(u,o),h=a;null!=p&&(h=uJ({inputs:{x:a},backend:n,attrs:{perm:p}}),u=Cw.getInnerMostAxes(u.length,o)),Cw.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=Cw.computeOutAndReduceShapes(h.shape,u),m=Ea.sizeFromShape(f),g=YY({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),y=tJ(g,g.dtype,"any",n);if(i){let e=Cw.expandShapeToKeepDim(c,l);d=YY({inputs:{x:y},backend:n,attrs:{shape:e}})}else d=YY({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=p&&n.disposeIntermediateTensorInfo(h),d}var DJ={kernelName:rt,backendName:"webgl",kernelFunc:FJ},MJ=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},OJ=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Ea.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,p=Zq(u),h=OX("coords",u);if(1===s){o=u+1;let e=Zq(o);i=`\n        ${e} sourceLocR = ${e}(${h.join()}, 0);\n        ++${h[u-1]};\n        ${e} sourceLocG = ${e}(${h.join()}, 0);\n        ++${h[u-2]};\n        ${e} sourceLocA = ${e}(${h.join()}, 0);\n        --${h[u-1]};\n        ${e} sourceLocB = ${e}(${h.join()}, 0);\n        --${h[u-2]};`}else o=u,i=`\n        ${p} sourceLocR = coords;\n        ++${h[u-1]};\n        ${p} sourceLocG = coords;\n        ++${h[u-2]};\n        ${p} sourceLocA = coords;\n        --${h[u-1]};\n        ${p} sourceLocB = coords;\n        --${h[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map(e=>"int "+e),m=OX("sourceLocR",o-1).concat("inIdx.r"),g=OX("sourceLocG",o-1).concat("inIdx.g"),y=OX("sourceLocB",o-1).concat("inIdx.b"),b=OX("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${p} coords = getOutputCoords();\n        bool hasNextCol = ${h[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${h[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function LJ(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=Cw.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new MJ(o,n,null==r),u=[t];null!=r&&u.push(r);let p=e.runWebGLProgram(l,u,"int32");if(1===p.shape[1])return p;let h=LJ(e,t,n,p);return e.disposeIntermediateTensorInfo(p),h}function PJ(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=Cw.computeOptimalWindowSize(s),o=new OJ(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=PJ(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function zJ(e,t,n,r){let a=[n];if(Cw.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Ge().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=null!==s&&s.isPacked,o=t;i&&(o=e.unpackTensor(t),n.push(o));let[l,u]=Cw.computeOutAndReduceShapes(o.shape,a),p=Ea.sizeFromShape(u),h=YY({inputs:{x:o},backend:e,attrs:{shape:[-1,p]}});n.push(h);let d=LJ(e,h,r);n.push(d);let c=YY({inputs:{x:d},backend:e,attrs:{shape:l}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),c}return PJ(e,t,r)}function BJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Ea.parseAxisParam(s,a.shape),o=Cw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=uJ({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Cw.getInnerMostAxes(i.length,l.shape.length)),Cw.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let p=zJ(n,l,i[0],"max");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}var WJ={kernelName:at,backendName:"webgl",kernelFunc:BJ};function VJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Ea.parseAxisParam(s,a.shape),o=Cw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=uJ({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Cw.getInnerMostAxes(i.length,l.shape.length)),Cw.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let p=zJ(n,l,i[0],"min");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}var UJ={kernelName:st,backendName:"webgl",kernelFunc:VJ},GJ=XX+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",HJ=BY({opSnippet:GJ}),jJ={kernelName:it,backendName:"webgl",kernelFunc:HJ},qJ=XX+"return log(x + sqrt(x * x + 1.0));",KJ=BY({opSnippet:qJ}),XJ={kernelName:ot,backendName:"webgl",kernelFunc:KJ},YJ=XX+"\n  return atan(x);\n",JJ=BY({opSnippet:YJ}),ZJ={kernelName:lt,backendName:"webgl",kernelFunc:JJ},QJ=IY+"\n  return atan(a, b);\n",eZ="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+NY+"\n  return result;\n",tZ=WY({opSnippet:QJ,packedOpSnippet:eZ}),nZ={kernelName:pt,backendName:"webgl",kernelFunc:tZ},rZ=XX+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",aZ=BY({opSnippet:rZ}),sZ={kernelName:ut,backendName:"webgl",kernelFunc:aZ},iZ=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");let w=4*Math.floor(s/4),v=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${b}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}},oZ=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${p}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");let k=4*Math.floor(s/4),I=s%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${w}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${p}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}};function lZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;eq(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ea.assert(Cw.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=Cw.computePool2DInfo(a.shape,s,i,u,o,l);if(1===p.filterWidth&&1===p.filterHeight&&Ea.arraysEqual(p.inShape,p.outShape))return _Y({inputs:{x:a},backend:n});let h=new iZ(p,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}var uZ={kernelName:ht,backendName:"webgl",kernelFunc:lZ};function pZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=[1,1,1],h=Cw.computePool3DInfo(a.shape,s,i,p,o,l,u),d=new oZ(h,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}var hZ={kernelName:ct,backendName:"webgl",kernelFunc:pZ},dZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,p=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${p});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},cZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=p-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function fZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,h=[1,1,1],d=Cw.computePool3DInfo(i.shape,o,l,h,u,p),c=new cZ(d);return n.runWebGLProgram(c,[a],i.dtype)}var mZ={kernelName:ft,backendName:"webgl",kernelFunc:fZ};function gZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;eq([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=Cw.computePool2DInfo(i.shape,o,l,1,u),h=new dZ(p);return n.runWebGLProgram(h,[a],i.dtype)}var yZ={kernelName:dt,backendName:"webgl",kernelFunc:gZ};function bZ(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return dJ({a:a,b:s,transposeA:i,transposeB:o,backend:n})}var xZ={kernelName:mt,backendName:"webgl",kernelFunc:bZ},wZ=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Cw.assertAndGetBroadcastShape(e,t),Cw.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(Cw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Cw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},vZ=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Cw.assertAndGetBroadcastShape(e,t),Cw.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(Cw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Cw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},kZ=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;Ea.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Ea.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Ea.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],p=null;null!=i&&(p=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));let d=Ge().getBool("WEBGL_PACK_NORMALIZATION")?new vZ(r.shape,a.shape,s.shape,p,h,l):new wZ(r.shape,a.shape,s.shape,p,h,l);return t.runWebGLProgram(d,u,u[0].dtype)},IZ={kernelName:un,backendName:"webgl",kernelFunc:kZ},SZ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=Zq(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=TZ(this.rank),a=e.map((e,t)=>`sourceLoc.${NZ[t]} = start[${t}] + coords.${NZ[t]};`);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}},NZ=["x","y","z","w","u","v"];function TZ(e){if(1===e)return"sourceLoc";if(e<=6)return NZ.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var _Z=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Zq(this.rank),n=OX("coords",this.rank),r=OX("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function CZ(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=tw.computeFlatOffset(t,Ea.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function EZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=tw.parseSliceParams(a,s,i);if(tw.assertParamsValid(a,o,l),0===Ea.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=wX(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),p=tw.isSliceContinous(a.shape,o,l);if(u||!p){let e=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _Z(l):new SZ(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),CZ(a,o,l,n)}var AZ={kernelName:Er,backendName:"webgl",kernelFunc:EZ},RZ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Ea.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=Cw.getReshaped(a.shape,s,o),u=Cw.getPermuted(l.length,s.length),p=Cw.getReshapedPermuted(a.shape,s,o),h=Cw.getSliceBeginCoords(i,s.length),d=Cw.getSliceSize(p,i,s.length),c=[],f=YY({inputs:{x:a},backend:n,attrs:{shape:l}}),m=uJ({inputs:{x:f},backend:n,attrs:{perm:u}}),g=YY({inputs:{x:m},backend:n,attrs:{shape:p}}),y=EZ({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),y},$Z={kernelName:gt,backendName:"webgl",kernelFunc:RZ};function FZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=WK(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var DZ={kernelName:yt,backendName:"webgl",kernelFunc:FZ},MZ="\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",OZ="\n  return float(int(a.r) & int(b.r));\n";function LZ(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Ge().getNumber("WEBGL_VERSION");if(r.shouldExecuteOnCPU([a,s])||1===o){let e=r.texData.get(a.dataId).values,t=r.texData.get(s.dataId).values,[n,i]=UK(a.shape,s.shape,e,t,a.dtype),o=r.makeTensorInfo(i,a.dtype),l=r.texData.get(o.dataId);return l.values=n,o}return t=i?new TY(MZ,a.shape,s.shape,!1):new SY(OZ,a.shape,s.shape),r.runWebGLProgram(t,[a,s],a.dtype)}var PZ={kernelName:bt,backendName:"webgl",kernelFunc:LZ};function zZ(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=Cw.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var BZ={kernelName:wt,backendName:"webgl",kernelFunc:zZ},WZ="return float(a != b);",VZ=WY({opSnippet:WZ,cpuKernelImpl:pX,dtype:"bool"}),UZ={kernelName:Yn,backendName:"webgl",kernelFunc:VZ};function GZ(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return _Y({inputs:{x:a.complexTensorInfos.real},backend:n})}var HZ={kernelName:dr,backendName:"webgl",kernelFunc:GZ},jZ="return float(int(x));";function qZ(e,t){let n=new KX(e.shape,jZ),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function KZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return _Y({inputs:{x:a},backend:n});let e=Qd(a.shape),t=KZ({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=EY({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=GZ({inputs:{input:a},backend:n}),t=KZ({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Ea.hasEncodingLoss(a.dtype,s)){let e=_Y({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let e=n.texData.get(a.dataId).values,[t,r,i]=GK(e,a.shape,a.dtype,s);return n.makeTensorInfo(t,r,i)}if("int32"===s)return qZ(a,n);if("bool"===s){let e=n.makeTensorInfo([],"bool",Ea.getTypedArrayFromDType("bool",1)),t=VZ({inputs:{a:a,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var XZ={kernelName:vt,backendName:"webgl",kernelFunc:KZ},YZ="return ceil(x);",JZ=BY({opSnippet:YZ,packedOpSnippet:YZ,cpuKernelImpl:HK}),ZZ={kernelName:kt,backendName:"webgl",kernelFunc:JZ},QZ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},eQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}};function tQ(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Ge().getBool("WEBGL_PACK_CLIP")?new eQ(s.shape):new QZ(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}var nQ={kernelName:It,backendName:"webgl",kernelFunc:tQ},rQ=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function aQ(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function sQ(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new rQ(r.shape),i=[aQ(r,a.complexTensorInfos.real),aQ(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var iQ={kernelName:Nt,backendName:"webgl",kernelFunc:sQ},oQ=class{constructor(e){this.outputShape=[],this.outputShape=Cw.computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T"+t);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},lQ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cw.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=Zq(r),s=OX("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],u=i.slice(-2),p=i.join(),h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${p}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){let e=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${uQ(i,l,e)}),\n            vec2(${uQ(u,l,e)}));\n        }`}let d=o.length,c=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${uQ(i,l,c)}),\n          vec2(${uQ(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function uQ(e,t,n){let r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function pQ(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return _Y({inputs:{x:a.complexTensorInfos.imag},backend:n})}var hQ={kernelName:gn,backendName:"webgl",kernelFunc:pQ};function dQ(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map(e=>GZ({inputs:{input:e},backend:n})),a=e.map(e=>pQ({inputs:{input:e},backend:n})),s=dQ(r,t,n),i=dQ(a,t,n),o=EY({inputs:{real:s,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map(e=>{let r=[-1,Ea.sizeFromShape(e.shape.slice(t))];return YY({inputs:{x:e},backend:n,attrs:{shape:r}})}),s=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=Cw.computeOutShape(a.map(e=>e.shape),1),o=1===a[0].shape[0],l=jK(s,i,r,o),u=Cw.computeOutShape(e.map(e=>e.shape),t),p=n.makeTensorInfo(u,r,l);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}let s=e.filter(e=>Ea.sizeFromShape(e.shape)>0),i=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let t=i?new KX(e[0].shape,tY):new lY(e[0].shape,tY);return n.runWebGLProgram(t,e,r)}let o=Ge().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let e=[];for(let a=0;a<s.length;a+=o){let r=s.slice(a,a+o);e.push(dQ(r,t,n))}let r=dQ(e,t,n);for(let t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){let e=new lQ(s.map(e=>e.shape),t);return n.runWebGLProgram(e,s,r)}let{tensors2D:l,outShape:u}=cQ(s,t,n),p=new oQ(l.map(e=>e.shape)),h=n.runWebGLProgram(p,l,r);l.forEach(e=>n.disposeIntermediateTensorInfo(e));let d=YY({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function cQ(e,t,n){let r=Cw.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>YY({inputs:{x:e},attrs:{shape:[-1,Ea.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:r}}function fQ(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Ea.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);Cw.assertParamsConsistent(i,s);let o=Cw.computeOutShape(t.map(e=>e.shape),s);if(0===Ea.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>Ea.sizeFromShape(e.shape)>0);return 1===l.length?_Y({inputs:{x:l[0]},backend:n}):dQ(l,s,n)}var mQ={kernelName:Tt,backendName:"webgl",kernelFunc:fQ},gQ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}},yQ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.filterDepth,h=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${p}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},bQ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oK(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,p=u,h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<u;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(p+1)/2;m++){let t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===i){if(t<u&&(s%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){let e=s%2===0?Ea.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(s%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",c="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}},xQ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=oK(this.outputShape.length);let{dataFormat:n}=t,r=nq(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}};function wQ(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function vQ({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,p=r.texData.get(e.dataId),h=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=!1,g=!1,y=[];if(null!=s){let e=wQ(s.shape,f);null!=e&&(s=YY({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(null!=a){let e=wQ(a.shape,f);null!=e&&(a=YY({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}if((1!==d&&1!==c||!(h>hJ))&&p.isPacked&&f&&null!=p.texture&&u[2]%2!==0&&Ea.arraysEqual(p.shape.slice(-3),u.slice(-3))){let h=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},c=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,Ea.assert(Wj(p.shape,d.shape),()=>`packed reshape ${p.shape} to ${d.shape} isn't free`);let f=YY({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(f);let b=dJ({a:d,b:f,backend:r,transposeA:m,transposeB:g,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),x=r.texData.get(b.dataId);Ea.assert(x.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=c,x.shape=n.outShape,l=_Y({inputs:{x:b},backend:r}),l.shape=n.outShape,y.push(b)}else{let u=n.outHeight*n.outWidth,p=YY({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),h=YY({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=dJ({a:f?p:h,b:f?h:p,transposeA:!f,transposeB:g,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=YY({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),y.push(p),y.push(h),y.push(d)}for(let b of y)r.disposeIntermediateTensorInfo(b);return l}function kQ({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:p,outWidth:h,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*p,g=d*h,y=[n.batchSize,m,g],b=!0,x=!1,w=[];if(null!=s){let e=wQ(s.shape,f);null!=e&&(s=YY({inputs:{x:s},backend:r,attrs:{shape:e}}),w.push(s))}if(null!=a){let e=wQ(a.shape,f);null!=e&&(a=YY({inputs:{x:a},backend:r,attrs:{shape:e}}),w.push(a))}let v=YY({inputs:{x:t},backend:r,attrs:{shape:[1,m,Ea.sizeFromShape(t.shape)/m]}});w.push(v);let k=new xQ(y,n),I=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(k,[e],"float32",I),N=YY({inputs:{x:S},backend:r,attrs:{shape:y}});w.push(S),w.push(N);let T=null!=a,_=null!=s,C="leakyrelu"===o,E=o?VY(o,!0):null,A=new UY(f?N.shape:v.shape,f?v.shape:N.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,T,E,_,C),R=f?[N,v]:[v,N];if(a&&R.push(a),_&&R.push(s),C){let e=r.makeTensorInfo([],"float32",Ea.createScalarValue(i,"float32"));R.push(e),w.push(e)}let $=r.runWebGLProgram(A,R,"float32"),F=YY({inputs:{x:$},backend:r,attrs:{shape:n.outShape}});w.push($);for(let D of w)r.disposeIntermediateTensorInfo(D);return F}function IQ(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:p,dimRoundingMode:h}=a,d=Cw.convertConv2DDataFormat(u),c=Cw.computeConv2DInfo(s.shape,i.shape,o,p,l,h,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===d&&Ge().getBool("WEBGL_EXP_CONV")){let e=new bQ(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=r.runWebGLProgram(e,[s,i],"float32",n)}else if(Ge().getBool("WEBGL_CONV_IM2COL"))t=kQ({x:s,filter:i,convInfo:c,backend:r});else{let e=new gQ(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=vQ({x:s,filter:i,convInfo:c,backend:r});let f=YY({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}var SQ={kernelName:_t,backendName:"webgl",kernelFunc:IQ},NQ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},TQ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,p=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${p}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},_Q=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},CQ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function EQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r,h=Cw.convertConv2DDataFormat(l),d=Cw.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),c=new NQ(d);return n.runWebGLProgram(c,[a,s],"float32")}var AQ={kernelName:Ct,backendName:"webgl",kernelFunc:EQ},RQ=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=oK(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}};function $Q(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r,h=Cw.convertConv2DDataFormat(u),d=Cw.computeConv2DInfo(i,s.shape,o,1,l,p,!1,h);if(Ge().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){let e=[[d.strideHeight,d.strideWidth]],t=new RQ(d);return n.runWebGLProgram(t,[a,s],"float32",e)}{let e=new TQ(d);return n.runWebGLProgram(e,[a,s],"float32")}}var FQ={kernelName:Et,backendName:"webgl",kernelFunc:$Q};function DQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=Cw.computeConv3DInfo(a.shape,s.shape,i,l,o),p=new yQ(u);return n.runWebGLProgram(p,[a,s],"float32")}var MQ={kernelName:At,backendName:"webgl",kernelFunc:DQ};function OQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=Cw.computeConv3DInfo(a.shape,l,i,1,o),p=new _Q(u);return n.runWebGLProgram(p,[a,s],"float32")}var LQ={kernelName:Rt,backendName:"webgl",kernelFunc:OQ};function PQ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=Cw.computeConv3DInfo(l,s.shape,o,1,i),p=new CQ(u);return n.runWebGLProgram(p,[a,s],"float32")}var zQ,BQ={kernelName:$t,backendName:"webgl",kernelFunc:PQ},WQ=zY+"\n  return cos(x);\n",VQ=`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${NY}\n  return result;\n`,UQ=BY({opSnippet:WQ,packedOpSnippet:VQ}),GQ={kernelName:Ft,backendName:"webgl",kernelFunc:UQ},HQ="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",jQ=BY({opSnippet:HQ}),qQ={kernelName:Dt,backendName:"webgl",kernelFunc:jQ},KQ=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[p,h]=n;this.outputShape=[u,p,h,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=p>1?[""+(i-1)/(p-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+c],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},XQ=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,p=new KQ(a.shape,s.shape,o,l,u);return n.runWebGLProgram(p,[a,s,i],"float32")},YQ={kernelName:Lt,backendName:"webgl",kernelFunc:XQ};(function(e){e.Prod="*",e.Sum="+"})(zQ||(zQ={}));var JQ=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===zQ.Prod?"1.0":"0.0",i=n?s:`getX(${ZQ(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?"end + pow2 < "+o:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Zq(a)} coords = getOutputCoords();\n        int end = ${QQ(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${QQ(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${ZQ(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function ZQ(e,t,n){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function QQ(e,t,n){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function e0(e,t,n,r,a,s){let i=t.shape.length,o=Cw.getAxesPermutation([r],i),l=t;null!=o&&(l=uJ({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=Cw.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let p=l.shape[u],h=_Y({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(p))-1;d++){let t=new JQ(e,l.shape,!1,s),r=[[d]],a=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(a)}if(a){let t=new JQ(e,l.shape,a,s),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=Cw.getUndoAxesPermutation(o),t=uJ({inputs:{x:h},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),t}return h}function t0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return e0(zQ.Prod,a,n,s,i,o)}var n0={kernelName:Mt,backendName:"webgl",kernelFunc:t0};function r0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return e0(zQ.Sum,a,n,s,i,o)}var a0={kernelName:Ot,backendName:"webgl",kernelFunc:r0};function s0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=WK(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=VK(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var i0={kernelName:Pt,backendName:"webgl",kernelFunc:s0},o0=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function l0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],p="NHWC"===i?a.shape[3]:a.shape[1],h=l*s,d=u*s,c=p/(s*s),f="NHWC"===i?[o,h,d,c]:[o,c,h,d],m=new o0(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}var u0={kernelName:zt,backendName:"webgl",kernelFunc:l0},p0=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oK(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${p}\n        ${u}\n        setOutput(result);\n      }\n    `}},h0=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oK(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,h=p,d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<p;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<p;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){let e=2*g;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<p&&(i%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<p)){let t=i%2===0?Ea.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<p&&(i%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<p&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<p&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<p&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<p&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};function d0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,p=l;null==p&&(p=[1,1]),Ea.assert(Cw.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let h,d=Cw.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0);h=Ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new h0(d):new p0(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",c)}var c0={kernelName:Bt,backendName:"webgl",kernelFunc:d0},f0=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},m0=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function g0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r,h=Cw.computeConv2DInfo(a.shape,p,i,o,l,u,!0),d=new f0(h);return n.runWebGLProgram(d,[a,s],"float32")}var y0={kernelName:Wt,backendName:"webgl",kernelFunc:g0};function b0(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r,h=Cw.computeConv2DInfo(p,s.shape,i,o,l,u,!0),d=new m0(h);return n.runWebGLProgram(d,[a,s],"float32")}var x0={kernelName:Vt,backendName:"webgl",kernelFunc:b0},w0=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}};function v0(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=Ea.sizeFromShape(r.shape),i=YY({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new w0(s),l=n.runWebGLProgram(o,[i],i.dtype),u=YY({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var k0={kernelName:Ut,backendName:"webgl",kernelFunc:v0},I0=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:p,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}};function S0(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,p=Cw.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),h=new I0(p);t=r.runWebGLProgram(h,[s,i],"float32");let d=YY({inputs:{x:t},backend:r,attrs:{shape:p.outShape}});return r.disposeIntermediateTensorInfo(t),d}var N0={kernelName:Gt,backendName:"webgl",kernelFunc:S0};function T0(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Cw.decodeEinsumEquation(a,s.length);Cw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=Cw.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let e of p[m]){let t,{permutationIndices:r,expandDims:a}=Cw.getEinsumPermutation(c,l[e]);Cw.isIdentityPermutation(r)?t=s[e]:(t=uJ({inputs:{x:s[e]},backend:n,attrs:{perm:r}}),f.push(t));let i=t.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Ea.arraysEqual(t.shape,i)||(t=YY({inputs:{x:t},backend:n,attrs:{shape:i}}),f.push(t)),null===d?d=t:(d=qY({inputs:{a:t,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=oJ({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var _0={kernelName:Xt,backendName:"webgl",kernelFunc:T0},C0="return (x >= 0.0) ? x : (exp(x) - 1.0);",E0="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",A0=BY({opSnippet:C0,packedOpSnippet:E0}),R0={kernelName:Yt,backendName:"webgl",kernelFunc:A0},$0="return (b >= 0.0) ? a : a * (b + 1.0);",F0="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",D0=e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TY(F0,r.shape,a.shape):new SY($0,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},M0={kernelName:Jt,backendName:"webgl",kernelFunc:D0},O0="\n  return vec4(equal(a, b));\n",L0="return float(a == b);",P0=WY({opSnippet:L0,packedOpSnippet:O0,dtype:"bool",cpuKernelImpl:qK}),z0={kernelName:Qt,backendName:"webgl",kernelFunc:P0},B0=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Cw.ERF_P};\n  float a1 = ${Cw.ERF_A1};\n  float a2 = ${Cw.ERF_A2};\n  float a3 = ${Cw.ERF_A3};\n  float a4 = ${Cw.ERF_A4};\n  float a5 = ${Cw.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,W0=BY({opSnippet:B0}),V0={kernelName:Zt,backendName:"webgl",kernelFunc:W0},U0=zY+"\n  return exp(x);\n",G0="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",H0=BY({opSnippet:U0,packedOpSnippet:G0,cpuKernelImpl:KK,dtype:"float32"}),j0={kernelName:en,backendName:"webgl",kernelFunc:H0};function q0(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(Ea.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),YY({inputs:{x:s},backend:r,attrs:{shape:o}})}var K0={kernelName:tn,backendName:"webgl",kernelFunc:q0},X0="return exp(x) - 1.0;",Y0=BY({opSnippet:X0,packedOpSnippet:X0,cpuKernelImpl:XK}),J0={kernelName:nn,backendName:"webgl",kernelFunc:Y0},Z0=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,i=n?r+".0":"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function Q0(e,t,n){let r=n.texData.get(e.dataId),a=Ea.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=YY({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,u=new Z0("real",l,t),p=new Z0("imag",l,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),c=n.runWebGLProgram(p,h,"float32"),f=EY({inputs:{real:d,imag:c},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c);let m=YY({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}function e1(e){let{inputs:t,backend:n}=e,{input:r}=t;return Q0(r,!1,n)}var t1={kernelName:rn,backendName:"webgl",kernelFunc:e1},n1=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function r1(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||Ea.inferDtype(a),"string"===s){let e=Ea.getArrayFromDType(s,Ea.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new n1(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var a1,s1={kernelName:an,backendName:"webgl",kernelFunc:r1},i1=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},o1={kernelName:sn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new i1(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},l1="return floor(x);",u1=BY({opSnippet:l1,packedOpSnippet:l1,cpuKernelImpl:YK}),p1={kernelName:on,backendName:"webgl",kernelFunc:u1},h1="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",d1="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",c1=WY({opSnippet:h1,packedOpSnippet:d1,dtype:"int32"}),f1={kernelName:ln,backendName:"webgl",kernelFunc:c1},m1=class{constructor(e){this.variableNames=["A"];let t=nq(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},g1=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=nq(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},y1={kernelName:ha,backendName:"webgl",kernelFunc:x1},b1=Ge().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function x1(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[u,l],h=[u,l,s];if(o||i){let e=Ge().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==a1||e!==b1)&&(b1=e,a1=document.createElement("canvas").getContext("2d",{willReadFrequently:b1})),a1.canvas.width=l,a1.canvas.height=u,a1.drawImage(a,0,0,l,u),a=a1.canvas}let d=n.makeTensorInfo(p,"int32");n.texData.get(d.dataId).usage=WH.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=Ge().getBool("WEBGL_PACK")?new g1(h):new m1(h),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}function w1(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:p,dataFormat:h,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=Cw.convertConv2DDataFormat(h),y=Cw.computeConv2DInfo(s.shape,i.shape,u,d,p,c,!1,g),b=[],x=null!=o,w=null!=l,v="leakyrelu"===f,k=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=YY({inputs:{x:e},backend:r,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,h)),w&&e.push(t(l,h)),v){let t=r.makeTensorInfo([],"float32",Ea.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&Ge().getBool("WEBGL_EXP_CONV")){let e=f?VY(f,!0):null,n=new bQ(y,x,e,w,v),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=k();t=r.runWebGLProgram(n,s,"float32",a)}else if(Ge().getBool("WEBGL_CONV_IM2COL"))t=kQ({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?VY(f,!1):null,n=new gQ(y,x,e,w,v),a=k();t=r.runWebGLProgram(n,a,"float32")}else t=vQ({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let I=YY({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach(e=>r.disposeIntermediateTensorInfo(e)),I}var v1={kernelName:fa,backendName:"webgl",kernelFunc:w1};function k1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:c}=r,f=[],m=p;null==m&&(m=[1,1]),Ea.assert(Cw.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g,y=Cw.computeConv2DInfo(a.shape,s.shape,l,m,u,h,!0),b=Ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=d?VY(d,b):null,w=[a,s],v=null!=i,k=null!=o,I="leakyrelu"===d;if(v&&w.push(i),k&&w.push(o),I){let e=n.makeTensorInfo([],"float32",Ea.createScalarValue(c,"float32"));w.push(e),f.push(e)}g=b?new h0(y,v,x,k,I):new p0(y,v,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(g,w,"float32",S);return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}var I1={kernelName:ma,backendName:"webgl",kernelFunc:k1},S1=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=Zq(n.length),s="\n    int index;";for(let i=0;i<this.sliceDim;i++)s+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}};function N1(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=Ea.sizeFromShape(r.shape),[l,u,p,h]=Cw.prepareAndValidate(r,a),d=YY({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=YY({inputs:{x:r},backend:n,attrs:{shape:[Ea.sizeFromShape(r.shape)/p,p]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=JK(e,t,r.dtype,u,i,p,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new S1(i,h,[u,p],r.shape),m=n.runWebGLProgram(f,[c,d],c.dtype),g=YY({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}var T1={kernelName:hn,backendName:"webgl",kernelFunc:N1},_1=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=Zq(this.rank),r=C1(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}};function C1(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push("index"):r.push(""+n[a]);return r.join()}function E1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=Ea.parseAxisParam(i,a.shape)[0];if(Ge().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];Ea.assert(r<=t-1&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`)}}let u=Cw.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=Ea.sizeFromShape(s.shape),h=[],d=YY({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=YY({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,p/u.batchSize]}});h.push(d),h.push(c);let f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),r=ZK(t,e,f);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new _1(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);h.push(g);let y=YY({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}var A1={kernelName:pn,backendName:"webgl",kernelFunc:E1},R1="return float(a > b);",$1="\n  return vec4(greaterThan(a, b));\n",F1=WY({opSnippet:R1,packedOpSnippet:$1,cpuKernelImpl:QK,dtype:"bool"}),D1={kernelName:dn,backendName:"webgl",kernelFunc:F1},M1="return float(a >= b);",O1="\n  return vec4(greaterThanEqual(a, b));\n",L1=WY({opSnippet:M1,packedOpSnippet:O1,dtype:"bool",cpuKernelImpl:eX}),P1={kernelName:cn,backendName:"webgl",kernelFunc:L1};function z1(e){let{inputs:t,backend:n}=e,{input:r}=t;return Q0(r,!0,n)}var B1={kernelName:mn,backendName:"webgl",kernelFunc:z1},W1="return float(!isnan(x) && !isinf(x));",V1=BY({opSnippet:W1,dtype:"bool"}),U1={kernelName:yn,backendName:"webgl",kernelFunc:V1},G1="return float(isinf(x));",H1=BY({opSnippet:G1,dtype:"bool"}),j1={kernelName:bn,backendName:"webgl",kernelFunc:H1},q1="return float(isnan(x));",K1=BY({opSnippet:q1,dtype:"bool"}),X1={kernelName:xn,backendName:"webgl",kernelFunc:K1},Y1="return float(a < b);",J1="\n  return vec4(lessThan(a, b));\n",Z1=WY({opSnippet:Y1,packedOpSnippet:J1,cpuKernelImpl:tX,dtype:"bool"}),Q1={kernelName:vn,backendName:"webgl",kernelFunc:Z1},e2="return float(a <= b);",t2="\n  return vec4(lessThanEqual(a, b));\n",n2=WY({opSnippet:e2,packedOpSnippet:t2,cpuKernelImpl:nX,dtype:"bool"}),r2={kernelName:kn,backendName:"webgl",kernelFunc:n2};function a2(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=rX(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var s2={kernelName:In,backendName:"webgl",kernelFunc:a2},i2=zY+"\n  return x < 0.0 ? 0./0. : log(x);\n",o2="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",l2=BY({opSnippet:i2,packedOpSnippet:o2,cpuKernelImpl:aX}),u2={kernelName:Sn,backendName:"webgl",kernelFunc:l2},p2=zY+"\n  return log(1.0 + x);\n",h2=BY({opSnippet:p2}),d2={kernelName:Nn,backendName:"webgl",kernelFunc:h2},c2="return float(a >= 1.0 && b >= 1.0);",f2="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",m2=WY({opSnippet:c2,packedOpSnippet:f2,dtype:"bool"}),g2={kernelName:Tn,backendName:"webgl",kernelFunc:m2},y2="return float(!(x >= 1.0));",b2=BY({opSnippet:y2}),x2={kernelName:_n,backendName:"webgl",kernelFunc:b2},w2="return float(a >= 1.0 || b >= 1.0);",v2="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",k2=WY({opSnippet:w2,packedOpSnippet:v2,dtype:"bool"}),I2={kernelName:Cn,backendName:"webgl",kernelFunc:k2},S2=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},N2=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},T2=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Ge().getBool("WEBGL_PACK_NORMALIZATION")?new N2(a.shape,s,i,o,l):new S2(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)},_2={kernelName:$n,backendName:"webgl",kernelFunc:T2},C2=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},E2=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r,h=new C2(a.shape,o,l,u,p);return n.runWebGLProgram(h,[a,s,i],a.dtype)},A2={kernelName:Fn,backendName:"webgl",kernelFunc:E2};function R2(e,t,n,r){let a=Ea.sizeFromShape(t),s=Ea.sizeFromShape(e.shape)/a,i=YY({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=tJ(i,e.dtype,"max",r),l=YY({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function $2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=Ea.parseAxisParam(s,a.shape),u=l,p=Cw.getAxesPermutation(u,o),h=null!=p,d=n.shouldExecuteOnCPU([a]),c=a;if(h){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=a.shape[p[n]];let r=FX(e,a.shape,a.dtype,p,t);c=n.makeTensorInfo(t,a.dtype);let s=n.texData.get(c.dataId);s.values=r}else c=sJ(a,p,n);u=Cw.getInnerMostAxes(u.length,o)}Cw.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=Cw.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=Cw.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=sX(e,Ea.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype);let r=n.texData.get(f.dataId);r.values=t}else f=R2(c,g,y,n);return h&&n.disposeIntermediateTensorInfo(c),f}var F2={kernelName:Mn,backendName:"webgl",kernelFunc:$2},D2=IY+"\n  return max(a, b);\n",M2="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+NY+"\n  return result;\n",O2=WY({opSnippet:D2,packedOpSnippet:M2,cpuKernelImpl:iX}),L2={kernelName:On,backendName:"webgl",kernelFunc:O2};function P2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;eq(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ea.assert(Cw.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=Cw.computePool2DInfo(a.shape,s,i,u,o,l);if(1===p.filterWidth&&1===p.filterHeight&&Ea.arraysEqual(p.inShape,p.outShape))return _Y({inputs:{x:a},backend:n});let h=new iZ(p,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}var z2={kernelName:Ln,backendName:"webgl",kernelFunc:P2};function B2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,p=[1,1,1],h=Cw.computePool3DInfo(a.shape,s,i,p,o,u,l),d=new oZ(h,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}var W2={kernelName:zn,backendName:"webgl",kernelFunc:B2},V2=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},U2=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function G2(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,h=[1,1,1],d=Cw.computePool3DInfo(i.shape,o,l,h,u,p),c=new oZ(d,"max",!0),f=n.runWebGLProgram(c,[i],i.dtype),m=new U2(d),g=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}var H2={kernelName:Bn,backendName:"webgl",kernelFunc:G2};function j2(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;eq([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=r,d=Cw.computePool2DInfo(o.shape,l,u,1,p,h),c=!0,f=new iZ(d,"max",c),m=n.runWebGLProgram(f,[o],o.dtype),g=new V2(d),y=n.runWebGLProgram(g,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}var q2={kernelName:Pn,backendName:"webgl",kernelFunc:j2};function K2(e,t,n,r){let a=new iZ(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");a=new iZ(n,"max",!0,!0,t);let i=r.runWebGLProgram(a,[e],"float32");return[s,i]}var X2={kernelName:Wn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;Ea.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];Ea.assert(Cw.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let p=Cw.computePool2DInfo(r.shape,a,s,u,i),[h,d]=K2(r,o,p,l);return[h,d]}};function Y2(e,t,n,r){let a=Ea.sizeFromShape(t),s=Ea.sizeFromShape(e.shape)/a,i=YY({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=tJ(i,"float32","mean",r),l=YY({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var J2={kernelName:Vn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=Ea.parseAxisParam(s,r.shape),u=l,p=Cw.getAxesPermutation(u,o),h=null!=p,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(h){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let s=0;s<t.length;s++)t[s]=r.shape[p[s]];let n=FX(e,r.shape,r.dtype,p,t);f=i.makeTensorInfo(t,r.dtype);let a=i.texData.get(f.dataId);a.values=n}else f=sJ(r,p,i);c.push(f),u=Cw.getInnerMostAxes(u.length,o)}Cw.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=Cw.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=Cw.expandShapeToKeepDim(m,l));let b=Y2(f,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function Z2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Ea.parseAxisParam(s,a.shape),u=l,p=Cw.getAxesPermutation(u,o),h=a;null!=p&&(h=uJ({inputs:{x:a},backend:n,attrs:{perm:p}}),u=Cw.getInnerMostAxes(u.length,a.shape.length)),Cw.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=Cw.computeOutAndReduceShapes(h.shape,u),m=Ea.sizeFromShape(f),g=YY({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),y=tJ(g,g.dtype,"min",n);if(i){let e=Cw.expandShapeToKeepDim(c,l);d=YY({inputs:{x:y},backend:n,attrs:{shape:e}})}else d=YY({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=p&&n.disposeIntermediateTensorInfo(h),d}var Q2={kernelName:Un,backendName:"webgl",kernelFunc:Z2},e3=IY+"\n  return min(a, b);\n",t3="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+NY+"\n  return result;\n",n3=WY({opSnippet:e3,packedOpSnippet:t3,cpuKernelImpl:oX}),r3={kernelName:Gn,backendName:"webgl",kernelFunc:n3},a3=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Zq(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},s3=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Zq(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=OX("rc",r),l=OX("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1,d="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${p});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${p});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}},i3=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new s3(r.shape,a,s):new a3(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)},o3={kernelName:Hn,backendName:"webgl",kernelFunc:i3},l3="if (b == 0.0) return NAN;\n  return mod(a, b);",u3="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+NY+"\n  return result;\n",p3=WY({opSnippet:l3,packedOpSnippet:u3}),h3={kernelName:jn,backendName:"webgl",kernelFunc:p3},d3=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},c3="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",f3="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",m3=WY({opSnippet:c3,packedOpSnippet:f3,checkOutOfBounds:!0}),g3={kernelName:Kt,backendName:"webgl",kernelFunc:m3},y3="return a - b;",b3=WY({opSnippet:y3,packedOpSnippet:y3,supportsComplex:!0,cpuKernelImpl:AX}),x3={kernelName:Zr,backendName:"webgl",kernelFunc:b3};function w3(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=Ea.parseAxisParam([s],a.shape),o=$2({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Cw.expandShapeToKeepDim(o.shape,i),u=YY({inputs:{x:o},backend:n,attrs:{shape:l}}),p=b3({inputs:{a:a,b:u},backend:n}),h=H0({inputs:{x:p},backend:n}),d=oJ({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=YY({inputs:{x:d},backend:n,attrs:{shape:l}}),f=m3({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var v3={kernelName:zr,backendName:"webgl",kernelFunc:w3};function k3(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:w3({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],p=l.shape[1],h=new d3(u,p,s),d=[[i]],c=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}var I3={kernelName:qn,backendName:"webgl",kernelFunc:k3},S3=XX+"\n  return -x;\n",N3="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";function T3(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=uX(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lY(a.shape,N3):new KX(a.shape,S3),r.runWebGLProgram(t,[a],a.dtype)}var _3={kernelName:Xn,backendName:"webgl",kernelFunc:T3},C3=Dv.nonMaxSuppressionV3Impl;function E3(e){Cw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:h}=C3(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var A3={kernelName:Jn,backendName:"webgl",kernelFunc:E3},R3=Dv.nonMaxSuppressionV4Impl;function $3(e){Cw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=R3(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var F3={kernelName:Zn,backendName:"webgl",kernelFunc:$3},D3=Dv.nonMaxSuppressionV5Impl;function M3(e){Cw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=D3(p,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var O3={kernelName:Qn,backendName:"webgl",kernelFunc:M3},L3=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},P3=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=Ea.sizeFromShape(a.shape),p=new L3(u,i,o,l),h=YY({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(p,[h],s);n.disposeIntermediateTensorInfo(h);let c=[...a.shape,i],f=YY({inputs:{x:d},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),f},z3={kernelName:tr,backendName:"webgl",kernelFunc:P3};function B3(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=GZ({inputs:{input:r},backend:n}),t=B3({inputs:{x:e},backend:n}),a=pQ({inputs:{input:r},backend:n}),s=B3({inputs:{x:a},backend:n}),i=EY({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return r1({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var W3={kernelName:ua,backendName:"webgl",kernelFunc:B3};function V3(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let e=GZ({inputs:{input:r},backend:n}),t=V3({inputs:{x:e},backend:n}),a=pQ({inputs:{input:r},backend:n}),s=B3({inputs:{x:a},backend:n}),i=EY({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return r1({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var U3={kernelName:er,backendName:"webgl",kernelFunc:V3};function G3(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return q0({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{Ea.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Ea.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{let t=q0({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),u=fQ({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}var H3={kernelName:nr,backendName:"webgl",kernelFunc:G3},j3=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Zq(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},q3=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Zq(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=OX("rc",r),l=OX("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=1===r?2:4;f<m;f++)c+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${p});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},K3=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===Ea.sizeFromShape(a.shape)){let e=s.map((e,t)=>e[0]+a.shape[t]+e[1]);return r1({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}let o=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new q3(a.shape,s,i):new j3(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},X3={kernelName:rr,backendName:"webgl",kernelFunc:K3},Y3="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",J3="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+NY+"\n  return result;\n",Z3=WY({opSnippet:Y3,packedOpSnippet:J3}),Q3={kernelName:sr,backendName:"webgl",kernelFunc:Z3};function e4(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],p=Ea.parseAxisParam(i,s.shape),h=p,d=Cw.getAxesPermutation(h,l),c=s;if(null!=d&&(c=uJ({inputs:{x:s},backend:r,attrs:{perm:d}}),h=Cw.getInnerMostAxes(h.length,l),u.push(c)),Cw.assertAxesAreInnerMostDims("prod",h,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=hX(c.shape,c.dtype,e,h);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=Cw.computeOutAndReduceShapes(c.shape,h),a=Ea.sizeFromShape(n),i=YY({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=Ms(s.dtype),l=tJ(i,o,"prod",r);t=YY({inputs:{x:l},backend:r,attrs:{shape:e}}),u.push(i),u.push(l)}if(o){u.push(t);let e=Cw.expandShapeToKeepDim(t.shape,p);t=YY({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),t}var t4={kernelName:or,backendName:"webgl",kernelFunc:e4};function n4(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(e=>n.readSync(e.dataId)),u=a.map(e=>e.shape),p=n.readSync(s.dataId),h=n.readSync(i.dataId),[d,c,f]=dX(l,u,p,s.shape,s.dtype,h,i.shape,o),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var r4={kernelName:lr,backendName:"webgl",kernelFunc:n4};function a4(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=cX(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([p.length],r.dtype,p);return[h,d]}var s4={kernelName:ur,backendName:"webgl",kernelFunc:a4};function i4(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),h=n.readSync(i.dataId),d=o.map(e=>n.readSync(e.dataId)),c=o.map(e=>e.shape),[f,m]=fX(u,a.shape,p,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var o4={kernelName:pr,backendName:"webgl",kernelFunc:i4},l4=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=mX(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},u4={kernelName:hr,backendName:"webgl",kernelFunc:l4},p4="return 1.0 / x;",h4=BY({opSnippet:p4}),d4={kernelName:cr,backendName:"webgl",kernelFunc:h4},c4=XX+"\n  return (x < 0.0) ? 0.0 : x;\n",f4="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",m4=BY({opSnippet:c4,packedOpSnippet:f4}),g4={kernelName:fr,backendName:"webgl",kernelFunc:m4},y4=XX+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",b4="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",x4=BY({opSnippet:y4,packedOpSnippet:b4}),w4={kernelName:wr,backendName:"webgl",kernelFunc:x4},v4=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},k4=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]},\n          ${p[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}};function I4(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=Ge().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new k4(a.shape,l,u,s,i):new v4(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],"float32")}var S4={kernelName:br,backendName:"webgl",kernelFunc:I4},N4=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};function T4(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new N4(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var _4={kernelName:xr,backendName:"webgl",kernelFunc:T4},C4=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},E4=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]},\n          ${p[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}};function A4(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=Ge().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new E4(a.shape,l,u,s,i):new C4(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],a.dtype)}var R4={kernelName:gr,backendName:"webgl",kernelFunc:A4},$4=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};function F4(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new $4(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var D4={kernelName:yr,backendName:"webgl",kernelFunc:F4},M4=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,a=e.map((e,t)=>r(t)).join(","),s=Zq(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}},O4=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=OX("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Zq(n);function o(e){return h(e)}function l(e){return e[n-1]="("+e[n-1]+" + 1)",h(e)}function u(e){return e[n-2]="("+e[n-2]+" + 1)",h(e)}function p(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",h(e)}function h(t){let n=e.map((e,n)=>d(n,t)),r=n.join(","),a=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${a}))`}function d(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(r.slice())};\n          if(${a}){\n            result.g = ${l(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${u(r.slice())};\n            if(${a}) {\n              result.a = ${p(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}};function L4(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=Ea.parseAxisParam(s,a.shape);if(0===i)return _Y({inputs:{x:a},backend:n});let l=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new O4(a.shape,o):new M4(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}var P4={kernelName:vr,backendName:"webgl",kernelFunc:L4},z4=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},B4={kernelName:da,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new z4(r.shape,s),[u,p]=Cw.getImageCenter(i,r.shape[1],r.shape[2]),h=[[u,p,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},W4="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",V4=BY({opSnippet:W4}),U4={kernelName:kr,backendName:"webgl",kernelFunc:V4},G4="return inversesqrt(x);",H4=BY({opSnippet:G4,cpuKernelImpl:gX}),j4={kernelName:Ir,backendName:"webgl",kernelFunc:H4},q4=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=Zq(a.length),u=Zq(s.length),p="";1===n?p="i":2===n&&(p="i, j");let h=`getIndices(${p})`,d="";1===r?d="i":2===r&&(d="i, coords[1]");let c=`getUpdates(${d})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${c};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}},K4=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=Zq(a.length),u=Zq(s.length),p="";1===n?p="i":2===n&&(p="i, j");let h=`getIndices(${p})`,d="";1===r?d="i":2===r&&(d="i, coords[1]");let c=`getUpdates(${d})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${c};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}};function X4(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=Cw.calculateShapes(s,a,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);let c,f=YY({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=YY({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));c=Ge().getBool("WEBGL_PACK")?new K4(l,o,f.shape.length,m.shape.length,p,d):new q4(l,o,f.shape.length,m.shape.length,p,d);let y=n.runWebGLProgram(c,[m,f,g],m.dtype),b=YY({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),b}var Y4={kernelName:Sr,backendName:"webgl",kernelFunc:X4},J4=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Ge().getNumber("WEBGL_VERSION")?a:s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}};function Z4(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new J4(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}var Q4={kernelName:Tr,backendName:"webgl",kernelFunc:Z4},e6=class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(""+n[r]),r<e&&s.push(""+n[r]);r=s.join(),a=i.join()}let s=Zq(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}};function t6(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new e6(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Ds(a.dtype,s.dtype))}var n6={kernelName:_r,backendName:"webgl",kernelFunc:t6},r6=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Cw.SELU_SCALEALPHA};\n  float scale = ${Cw.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,a6=BY({opSnippet:r6}),s6={kernelName:Cr,backendName:"webgl",kernelFunc:a6},i6=zY+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",o6="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",l6=BY({opSnippet:i6,packedOpSnippet:o6,cpuKernelImpl:bX}),u6={kernelName:Fr,backendName:"webgl",kernelFunc:l6},p6="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",h6=BY({opSnippet:p6}),d6={kernelName:$r,backendName:"webgl",kernelFunc:h6},c6=zY+"\n  return sin(x);\n",f6=`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${NY}\n  return result;\n`,m6=BY({opSnippet:c6,packedOpSnippet:f6}),g6={kernelName:Ar,backendName:"webgl",kernelFunc:m6},y6="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",b6=BY({opSnippet:y6}),x6={kernelName:Rr,backendName:"webgl",kernelFunc:b6},w6="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",v6=BY({opSnippet:w6}),k6={kernelName:Dr,backendName:"webgl",kernelFunc:v6},I6=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Ea.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],p=K3({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=Cw.getReshaped(p.shape,s,o,!1),d=Cw.getPermuted(h.length,s.length,!1),c=Cw.getReshapedPermuted(p.shape,s,o,!1),f=YY({inputs:{x:p},backend:n,attrs:{shape:h}}),m=uJ({inputs:{x:f},backend:n,attrs:{perm:d}}),g=YY({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(p),u.push(f),u.push(m),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),g},S6={kernelName:Lr,backendName:"webgl",kernelFunc:I6};function N6(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n         "+a.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),p=n.readSync(i.dataId)[0],[h,d,c,f,m]=vX(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var T6={kernelName:Br,backendName:"webgl",kernelFunc:N6};function _6(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,p,h]=kX(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var C6={kernelName:Wr,backendName:"webgl",kernelFunc:_6};function E6(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n              "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              "+s.shape);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=IX(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}var A6={kernelName:Vr,backendName:"webgl",kernelFunc:E6};function R6(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n             "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             "+s.shape);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=IX(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}var $6={kernelName:Ur,backendName:"webgl",kernelFunc:R6};function F6(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=Cw.calculateShapes(s,a,o),c=!1;if("string"===s.dtype){let e=n.bufferSync(a),t=n.bufferSync(s),r=Ea.decodeString(n.readSync(i.dataId)[0]),f=yX(e,t,o,d,p,u,l,h,r,c);return n.makeTensorInfo(o,f.dtype,f.values)}let f=new q4(u,l,a.shape.length,s.shape.length,h,[d,1],c),m=n.runWebGLProgram(f,[s,a,i],s.dtype),g=YY({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}var D6={kernelName:Gr,backendName:"webgl",kernelFunc:F6};function M6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Ea.parseAxisParam(i,a.shape)[0],l=Cw.prepareSplitSize(a,s,o),u=a.shape.length,p=new Array(u).fill(0),h=a.shape.slice();return l.map(e=>{let t=[...h];t[o]=e;let r=EZ({inputs:{x:a},backend:n,attrs:{begin:p,size:t}});return p[o]+=e,r})}var O6={kernelName:Pr,backendName:"webgl",kernelFunc:M6},L6="return sqrt(x);",P6=BY({opSnippet:L6,packedOpSnippet:L6,cpuKernelImpl:SX}),z6={kernelName:Mr,backendName:"webgl",kernelFunc:P6},B6="return x * x;",W6=BY({opSnippet:B6}),V6={kernelName:jr,backendName:"webgl",kernelFunc:W6},U6="return (a - b) * (a - b);",G6=WY({opSnippet:U6,packedOpSnippet:U6}),H6={kernelName:Hr,backendName:"webgl",kernelFunc:G6};function j6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=Cw.fromUint8ToStringArray(s),o=NX(i,"string",r);return n.makeTensorInfo(a.shape,"string",o)}var q6={kernelName:qr,backendName:"webgl",kernelFunc:j6};function K6({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=XX+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new KX(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}var X6={kernelName:pa,backendName:"webgl",kernelFunc:K6},Y6=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=Zq(n.length),s=Zq(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}};function J6(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:p,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=tw.sliceInfo(s.shape,i,o,l,u,p,h,d,c);if(g)t=YY({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){Ea.assert(s.shape.length>=1,()=>"Input must have rank at least 1, got: "+s.shape.length);let e=tw.computeOutShape(x,w,v),n=EZ({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=YY({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=Qo(s.shape,s.dtype,e),a=TX(f,n,v,x);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new Y6(x,v,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=YY({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}var Z6={kernelName:Kr,backendName:"webgl",kernelFunc:J6};function Q6(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:h}=t,d=n.readSync(p.dataId),c=n.readSync(h.dataId),[f,m]=_X(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var e5={kernelName:Xr,backendName:"webgl",kernelFunc:Q6};function t5(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,p,h]=CX(o,l,a),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var n5={kernelName:Yr,backendName:"webgl",kernelFunc:t5};function r5(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=EX(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var a5={kernelName:Jr,backendName:"webgl",kernelFunc:r5},s5="return tan(x);",i5=BY({opSnippet:s5}),o5={kernelName:Qr,backendName:"webgl",kernelFunc:i5},l5="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",u5=BY({opSnippet:l5}),p5={kernelName:ea,backendName:"webgl",kernelFunc:u5};function h5(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=Cw.calculateShapes(i,s,a.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(a.shape,s.dtype);let c=YY({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=YY({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=YY({inputs:{x:a},backend:n,attrs:{shape:d}}),g=new q4(l,o,c.shape.length,f.shape.length,p,d,!1,!0),y=n.runWebGLProgram(g,[f,c,m],m.dtype),b=YY({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}var d5={kernelName:Nr,backendName:"webgl",kernelFunc:h5},c5=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=Zq(this.rank),a=f5(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}};function f5(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}function m5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>Ea.decodeString(e)):e,r=Qo(a.shape,a.dtype,t),i=RX(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new c5(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var g5={kernelName:ta,backendName:"webgl",kernelFunc:m5},y5=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},b5=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function x5(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function w5(e){let t=1;for(;t<e;)t*=2;return t}function v5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Ge().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ge().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,p=u[u.length-1];if(n.shouldExecuteOnCPU([a])||p<o||s>l){let e=n.readSync(a.dataId),[t,r]=$X(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===p)return[a,r1({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,c=d?n.unpackTensor(a):a,f=Ea.sizeFromShape(u)/p,m=YY({inputs:{x:c},attrs:{shape:[f,p]},backend:n});d&&x5(n,c);let g=w5(s),y=w5(p),b=null,x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{let a=x(),s=new y5(r),i=[[p],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),x5(n,o)};for(let N=1;N<g;N*=2){let e=2*N;for(let t=N;t>=1;t/=2)w(e,t,[f,y])}for(let N=y;N>g;N/=2){let e=x(),t=new b5([f,N/2]),r=[[p],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(t,e,"int32",r),x5(n,a);let s=g/2,i=2*s;for(let n=s;n>=1;n/=2)w(i,n,b.shape)}let v=b;b=EZ({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),x5(n,v);let k=E1({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});x5(n,m);let I=u.slice(0,-1);I.push(s),v=b,b=YY({inputs:{x:b},attrs:{shape:I},backend:n}),x5(n,v);let S=k;return k=YY({inputs:{x:k},attrs:{shape:I},backend:n}),x5(n,S),[k,b]}var k5={kernelName:na,backendName:"webgl",kernelFunc:v5},I5=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}};function S5(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,h,d,c]=a.shape,[f,m]=null!=u?u:[h,d],g=[p,f,m,c],y=new I5(h,d,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}var N5={kernelName:ra,backendName:"webgl",kernelFunc:S5};function T5(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;eq(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=DX(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var _5={kernelName:sa,backendName:"webgl",kernelFunc:T5};function C5(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),p=0;for(let m=0;m<o;m++)m!==s&&(u[p++]=i.shape[m]);let h=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[s]=m;let e=EZ({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),t=YY({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}var E5={kernelName:ia,backendName:"webgl",kernelFunc:C5},A5=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o="0.0",l="sumValue",u=4*Math.floor(n/4),p=n%4,h="\n        sumValue += dot(values, segFilter);\n    ",d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${c}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${h}\n        } else if (${2===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${h}\n        } else if (${3===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}};function R5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,p=Cw.getAxesPermutation([u],o),h=a;null!=p&&(h=uJ({inputs:{x:a},backend:n,attrs:{perm:p}}),l.push(h),u=Cw.getInnerMostAxes(1,o)[0]);let d=Cw.segment_util.computeOutShape(h.shape,u,i),c=Ea.sizeFromShape([h.shape[u]]),f=YY({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=Ms(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=Cw.segment_util.segOpComputeOptimalWindowSize(o,s),p={windowSize:u,inSize:o,batchSize:i,numSegments:s},h=new A5(p,t),d=n.compileAndRun(h,[e,r],a);if(l.push(d),d.shape[1]===s)return d;let c=l4({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=m5({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(f),g(d,t,f,a,s)},y=g(f,"unsortedSegmentSum",s,m,i),b=YY({inputs:{x:y},backend:n,attrs:{shape:d}}),x=b;if(null!=p){l.push(b);let e=Cw.getUndoAxesPermutation(p);x=uJ({inputs:{x:x},backend:n,attrs:{perm:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}var $5,F5,D5,M5={kernelName:oa,backendName:"webgl",kernelFunc:R5},O5=[fJ,yJ,wJ,IJ,TJ,AJ,$J,DJ,WJ,UJ,jJ,XJ,ZJ,nZ,sZ,uZ,hZ,mZ,yZ,xZ,IZ,$Z,DZ,PZ,BZ,XZ,ZZ,nQ,AY,iQ,mQ,SQ,AQ,FQ,MQ,LQ,BQ,GQ,qQ,YQ,n0,a0,i0,u0,c0,y0,x0,k0,N0,_0,R0,M0,z0,V0,j0,K0,J0,t1,s1,o1,p1,f1,y1,v1,I1,T1,A1,D1,P1,CY,B1,hQ,U1,j1,X1,DY,Q1,r2,s2,u2,d2,g2,x2,I2,_2,A2,F2,L2,z2,W2,H2,q2,X2,J2,Q2,r3,o3,h3,I3,KY,_3,A3,F3,O3,UZ,z3,U3,H3,X3,Q3,PY,t4,r4,s4,o4,u4,HZ,g3,d4,g4,w4,JY,S4,_4,R4,D4,P4,B4,U4,j4,Y4,Q4,n6,s6,u6,d6,g6,x6,AZ,v3,k6,S6,T6,C6,A6,$6,D6,O6,z6,V6,H6,q6,X6,Z6,e5,n5,a5,x3,lJ,o5,p5,d5,g5,k5,N5,pJ,_5,E5,M5,W3];for(let t of O5)Ia(t);function L5(e){D5=e.wasm.cwrap(ca,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function P5(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=F5[p];if(null==g)throw new Error(p+" activation not yet supported for FusedConv2D in the wasm backend.");let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=Fp.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),w=n.makeOutput([...x,y,b],a.dtype),v=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return D5(d,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,h||0,v),w}(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})($5||($5={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(F5||(F5={}));var z5={kernelName:ca,backendName:"wasm",setupFunc:L5,kernelFunc:P5};function B5(e,t){let n;function r(t){n=t.wasm.cwrap(e,null,["number","number","number"])}function a(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===Ea.sizeFromShape(i.shape)||n(s,$5[a.dtype],o),i}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var W5=B5(Je),V5=B5(Ze),U5=B5(Qe);function G5(e,t,n){let r;function a(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,p=Cw.assertAndGetBroadcastShape(s.shape,i.shape),h=t.makeOutput(p,u);if(0===Ea.sizeFromShape(p))return h;let d=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return r(o,d,s.shape.length,l,c,i.shape.length,$5[s.dtype],f),h}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var H5,j5=!0,q5=G5(et,j5);function K5(e){H5=e.wasm.cwrap(tt,null,["array","number","number","number"])}function X5(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===Ea.sizeFromShape(r.shape))return r;let a=t.map(e=>n.dataIdMap.get(e.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return H5(s,a.length,$5[r.dtype],i),r}var Y5={kernelName:tt,backendName:"wasm",setupFunc:K5,kernelFunc:X5};function J5(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return fi(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var Z5,Q5={kernelName:fn,backendName:"wasm",kernelFunc:J5};function e8(e){Z5=e.wasm.cwrap(aa,null,["number","array","number","number","number","array","number"])}function t8(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=r8(t.x.shape,r.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=n8(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=J5({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),p=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return Z5(p,c,l.shape.length,$5[l.dtype],h,d,s.length),u}function n8(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function r8(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let a=0;a<r.length;++a){let e=-1;for(let t=0;t<r.length;++t)r[t]>=a&&(-1===e||r[e]>r[t])&&(e=t);r[e]=a}return[n,r]}var a8,s8={kernelName:aa,backendName:"wasm",kernelFunc:t8,setupFunc:e8};function i8(e,t,n){let r=e.shape,a=e.shape.length,s=Ea.parseAxisParam(t,r),i=s,o=Cw.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Cw.getInnerMostAxes(i.length,a),l=t8({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}function o8(e){a8=e.wasm.cwrap(nt,null,["number, number, number"])}function l8(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=i8(i,a,t);if(d){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;Cw.assertAxesAreInnerMostDims("all",p,c);let[f,m]=Cw.computeOutAndReduceShapes(l.shape,p),g=Ea.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Ea.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;a8(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=Cw.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}var u8,p8={kernelName:nt,backendName:"wasm",setupFunc:o8,kernelFunc:l8};function h8(e){u8=e.wasm.cwrap(rt,null,["number, number, number"])}function d8(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=i8(i,a,t);if(d){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;Cw.assertAxesAreInnerMostDims("any",p,c);let[f,m]=Cw.computeOutAndReduceShapes(l.shape,p),g=Ea.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Ea.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;u8(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=Cw.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}var c8={kernelName:rt,backendName:"wasm",setupFunc:h8,kernelFunc:d8};function f8(e){let t;function n(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])}function r(e){let{backend:n,inputs:r,attrs:a}=e,{axis:s}=a,{x:i}=r,o=n.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,inputWasTransposed:d}=i8(i,s,n);if(d){let e=n.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e)}let c=u.shape.slice(0,-1),f=n.makeOutput(c,"int32"),m=n.dataIdMap.get(f.dataId).id,g=Ea.sizeFromShape(f.shape),y=u.shape[h[0]];return t(l,$5[u.dtype],g,y,m),d&&n.disposeData(p.dataId),f}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:r}}var m8,g8=f8(at),y8=f8(st),b8=B5(it),x8=B5(ot),w8=B5(lt),v8=G5(pt,!1),k8=B5(ut);function I8(e){m8=e.wasm.cwrap(ht,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function S8(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=Cw.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,b=p.strideWidth,x=p.inChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(1!==p.dilationWidth||1!==p.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let w=r.makeOutput(p.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return m8(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,b,x,v),w}var N8,T8={kernelName:ht,backendName:"wasm",setupFunc:I8,kernelFunc:S8};function _8(e){N8=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function C8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=Cw.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(p.outShape,a.dtype);return N8(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),h}var E8,A8={kernelName:ct,backendName:"wasm",setupFunc:_8,kernelFunc:C8};function R8(e){E8=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $8(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=Cw.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return E8(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left,p.filterDepth,p.filterHeight,p.filterWidth),h}var F8,D8={kernelName:ft,backendName:"wasm",setupFunc:R8,kernelFunc:$8};function M8(e){F8=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function O8(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l}=r,u=Cw.computePool2DInfo(s.shape,i,o,1,l),p=n.makeOutput(s.shape,s.dtype);return F8(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),p}var L8={kernelName:dt,backendName:"wasm",setupFunc:M8,kernelFunc:O8};function P8(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=Ea.sizeFromShape(r.shape),i=Ea.inferFromImplicitShape(a,s);return Ea.assert(s===Ea.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var z8,B8={kernelName:mr,backendName:"wasm",kernelFunc:P8};function W8(e){z8=e.wasm.cwrap(mt,null,["number","array","number","number","array","number","number","number","number"])}function V8(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Ea.sizeFromShape(f),y=Ea.sizeFromShape(m),b=Fp.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);Ea.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,p,d]:[g,d,p],w=o?[y,c,h]:[y,h,c],v=P8({inputs:{x:a},backend:n,attrs:{shape:x}}),k=P8({inputs:{x:s},backend:n,attrs:{shape:w}}),I=n.dataIdMap.get(v.dataId).id,S=n.dataIdMap.get(k.dataId).id,N=i?v.shape[2]:v.shape[1],T=o?k.shape[1]:k.shape[2],_=Math.max(g,y),C=n.makeOutput([_,N,T],v.dtype),E=n.dataIdMap.get(C.dataId).id,A=new Uint8Array(new Int32Array(v.shape).buffer),R=new Uint8Array(new Int32Array(k.shape).buffer);return z8(I,A,v.shape.length,S,R,k.shape.length,i,o,E),n.disposeData(v.dataId),n.disposeData(k.dataId),C.shape=b,C}var U8={kernelName:mt,backendName:"wasm",setupFunc:W8,kernelFunc:V8};function G8(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=tw.parseSliceParams(t,n,r),o=tw.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),p=Ea.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let e=tw.computeFlatOffset(s,p);return"string"===t.dtype?h.stringBytes=l.slice(e,e+Ea.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+Ea.sizeFromShape(i))),u}if("string"===t.dtype){let e=fz(l,s,i,t.shape,t.dtype);return h.stringBytes=e,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)H8(l,p[0],d,s,i);else if(3===c)j8(l,p[0],p[1],d,s,i);else if(4===c)q8(l,p[0],p[1],p[2],d,s,i);else{let e=fz(l,s,i,t.shape,t.dtype);d.set(e)}return u}function H8(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let u=i;u<l;u++){let r=u*t+o;n.set(e.subarray(r,r+a[1]),s),s+=a[1]}}function j8(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],p=o+s[0],h=l+s[1];for(let d=o;d<p;d++)for(let a=l;a<h;a++){let o=d*t+a*n+u;r.set(e.subarray(o,o+s[2]),i),i+=s[2]}}function q8(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],p=s[2],h=l+i[0],d=u+i[1],c=p+i[2],f=s[3];for(let m=l;m<h;m++)for(let s=u;s<d;s++)for(let l=p;l<c;l++){let u=m*t+s*n+l*r+f;a.set(e.subarray(u,u+i[3]),o),o+=i[3]}}var K8={kernelName:Er,backendName:"wasm",kernelFunc:G8};function X8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((e,t)=>e*t),l=Cw.getReshaped(a.shape,s,o),u=Cw.getPermuted(l.length,s.length),p=Cw.getReshapedPermuted(a.shape,s,o),h=Cw.getSliceBeginCoords(i,s.length),d=Cw.getSliceSize(p,i,s.length),c=P8({inputs:{x:a},backend:n,attrs:{shape:l}}),f=t8({inputs:{x:c},backend:n,attrs:{perm:u}}),m=P8({inputs:{x:f},backend:n,attrs:{shape:p}}),g=G8({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}var Y8,J8={kernelName:gt,backendName:"wasm",kernelFunc:X8};function Z8(e){Y8=e.wasm.cwrap(yt,null,["number","number","boolean","number","number","number"])}function Q8(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=0!==s.shape.reduce((e,t)=>e*t,1),l=1===a.shape.length?[i]:[a.shape[0],i],u=t.makeOutput(l,s.dtype);function p(e){return t.dataIdMap.get(e.dataId).id}return Y8(p(a),i,o,p(s),$5[s.dtype],p(u)),u}var e7={kernelName:yt,backendName:"wasm",setupFunc:Z8,kernelFunc:Q8},t7=!0,n7=G5(bt,t7);function r7(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=Cw.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}var a7={kernelName:wt,backendName:"wasm",kernelFunc:r7};function s7(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var i7,o7={kernelName:vt,backendName:"wasm",kernelFunc:s7},l7=B5(kt);function u7(e){i7=e.wasm.cwrap(It,null,["number","number","number","number"])}function p7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return i7(o,s,i,u),l}var h7={kernelName:It,backendName:"wasm",setupFunc:u7,kernelFunc:p7};function d7(e){let{inputs:t,backend:n}=e,r=Ea.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(e=>e.shape);Cw.assertParamsConsistent(a,r);let s=Cw.computeOutShape(t.map(e=>e.shape),r),i=t.filter(e=>Ea.sizeFromShape(e.shape)>0);if(1===i.length)return J5({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(0===Ea.sizeFromShape(s))return o;if("string"===i[0].dtype){let e=i.map(e=>{let t=[-1,Ea.sizeFromShape(e.shape.slice(r))];return P8({inputs:{x:e},backend:n,attrs:{shape:t}})}),a=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape}));s=Cw.computeOutShape(e.map(e=>e.shape),1);let l=1===e[0].shape[0],u=VL(a,s,t[0].dtype,l),p=Cw.computeOutShape(i.map(e=>e.shape),r);o.shape=p;let h=n.dataIdMap.get(o.dataId);return h.stringBytes=Cw.fromStringArrayToUint8(u),e.forEach(e=>n.disposeData(e.dataId)),o}let l=Ea.sizeFromShape(i[0].shape.slice(0,r)),u=0,p=i.map(e=>{let t=Ea.sizeFromShape(e.shape.slice(r));return u+=t,t}),h=i.map(e=>n.typedArrayFromHeap(e)),d=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let e=c*u;for(let t=0;t<h.length;t++){let n=p[t],r=c*n,a=h[t].subarray(r,r+n);d.set(a,e),e+=n}}return o}var c7,f7={kernelName:Tt,backendName:"wasm",kernelFunc:d7};function m7(e){c7=e.wasm.cwrap(_t,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function g7(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h,dataFormat:d}=n,c=Cw.convertConv2DDataFormat(d),f=Cw.computeConv2DInfo(a.shape,s.shape,l,u,p,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return c7(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,w,_,v,k,I,S,N,T,E),C}var y7,b7={kernelName:_t,backendName:"wasm",setupFunc:m7,kernelFunc:g7};function x7(e){y7=e.wasm.cwrap(Et,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function w7(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:p}=r,h=1,d=Cw.convertConv2DDataFormat(l),c=Cw.computeConv2DInfo(p,s.shape,i,h,o,u,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:w,outHeight:v,outWidth:k,strideHeight:I,strideWidth:S}=c,N=m-1-c.padInfo.top,T=g-1-c.padInfo.left,_="channelsLast"===c.dataFormat,C=Ea.computeStrides(c.inShape),E=Ea.computeStrides(a.shape),[A,R,$]=Ea.computeStrides(s.shape),F=C[0],D=_?C[1]:C[2],M=_?C[2]:1,O=_?1:C[1],L=E[0],P=_?E[1]:E[2],z=_?E[2]:1,B=_?1:E[1],W=t.makeOutput(c.inShape,"float32"),V=t.dataIdMap.get(W.dataId).id,U=t.dataIdMap.get(a.dataId).id,G=t.dataIdMap.get(s.dataId).id;return y7(U,G,f,m,g,b,x,y,v,k,w,I,S,N,T,A,R,$,F,D,M,O,L,P,z,B,V),W}var v7,k7={kernelName:Et,backendName:"wasm",setupFunc:x7,kernelFunc:w7};function I7(e){v7=e.wasm.cwrap(At,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function S7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if("float32"!==a.dtype)throw new Error("Tensor x must have dtype float32, got "+a.dtype);if("float32"!==s.dtype)throw new Error("Tensor filter must have dtype float32, got "+s.dtype);let u=Cw.computeConv3DInfo(a.shape,s.shape,i,l,o),p=n.makeOutput(u.outShape,a.dtype);return v7(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}var N7,T7={kernelName:At,backendName:"wasm",setupFunc:I7,kernelFunc:S7};function _7(e){N7=e.wasm.cwrap(Rt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function C7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;if("float32"!==a.dtype)throw new Error("Tensor dy must have dtype float32, got "+a.dtype);if("float32"!==s.dtype)throw new Error("Tensor filter must have dtype float32, got "+s.dtype);let u=Cw.computeConv3DInfo(a.shape,l,i,1,o),p=n.makeOutput(u.filterShape,s.dtype);return N7(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}var E7,A7={kernelName:Rt,backendName:"wasm",setupFunc:_7,kernelFunc:C7};function R7(e){E7=e.wasm.cwrap($t,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $7(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;if("float32"!==a.dtype)throw new Error("Tensor dy must have dtype float32, got "+a.dtype);if("float32"!==s.dtype)throw new Error("Tensor filter must have dtype float32, got "+s.dtype);let u=Cw.computeConv3DInfo(l,s.shape,o,1,i),p=n.makeOutput(u.inShape,a.dtype);return E7(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}var F7,D7,M7={kernelName:$t,backendName:"wasm",setupFunc:R7,kernelFunc:$7},O7=B5(Ft),L7=B5(Dt);function P7(e){D7=e.wasm.cwrap(Lt,null,["number","number","number","number","array","number","number","number","number","number"])}function z7(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:p}=r,h=u.shape[0],[d,c]=o,f=[h,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=s7({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(p.dataId).id,x=n.makeOutput(f,"float32"),w=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(l.shape).buffer);return D7(g,y,b,h,v,d,c,F7[s],i,w),null!=t&&n.disposeData(t.dataId),x}(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(F7||(F7={}));var B7,W7={kernelName:Lt,backendName:"wasm",setupFunc:P7,kernelFunc:z7};function V7(e){B7=e.wasm.cwrap(Mt,null,["number","number","number","number","number","number"])}function U7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;Ea.assert("float32"===a.dtype||"int32"===a.dtype,()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let u=Cw.getAxesPermutation([s],l),p=a;null!==u&&(p=t8({inputs:{x:a},attrs:{perm:u},backend:n}));let h=Cw.getInnerMostAxes(1,l)[0];Cw.assertAxesAreInnerMostDims("cumprod",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(d.dataId).id;B7(f,i?1:0,o?1:0,c,m,$5[a.dtype]);let g=d;if(null!==u){let e=Cw.getUndoAxesPermutation(u);g=t8({inputs:{x:d},attrs:{perm:e},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)}return g}var G7,H7={kernelName:Mt,backendName:"wasm",setupFunc:V7,kernelFunc:U7};function j7(e){G7=e.wasm.cwrap(Ot,null,["number","number","number","number","number","number"])}function q7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;Ea.assert("float32"===a.dtype||"int32"===a.dtype,()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let u=Cw.getAxesPermutation([s],l),p=a;null!==u&&(p=t8({inputs:{x:a},attrs:{perm:u},backend:n}));let h=Cw.getInnerMostAxes(1,l)[0];Cw.assertAxesAreInnerMostDims("cumsum",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(d.dataId).id;G7(f,i?1:0,o?1:0,c,m,$5[a.dtype]);let g=d;if(null!==u){let e=Cw.getUndoAxesPermutation(u);g=t8({inputs:{x:d},attrs:{perm:e},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)}return g}var K7,X7={kernelName:Ot,backendName:"wasm",setupFunc:j7,kernelFunc:q7};function Y7(e){K7=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function J7(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,l=0!==s.shape.reduce((e,t)=>e*t,1),u=1===a.shape.length?[i]:[a.shape[0],i],p=t.makeOutput(u,s.dtype);function h(e){return t.dataIdMap.get(e.dataId).id}return K7(h(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,l,h(s),$5[s.dtype],o,h(p)),p}var Z7,Q7={kernelName:Pt,backendName:"wasm",setupFunc:Y7,kernelFunc:J7};function e9(e){Z7=e.wasm.cwrap(zt,null,["number","number","number","array","number","array","array","number","number"])}function t9(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],p="NHWC"===i?a.shape[3]:a.shape[1],h=l*s,d=u*s,c=p/(s*s),f="NHWC"===i?[o,h,d,c]:[o,c,h,d],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(Ea.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(Ea.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return Z7(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,x,f.length,w),m}var n9,r9={kernelName:zt,backendName:"wasm",setupFunc:e9,kernelFunc:t9};function a9(e){n9=e.wasm.cwrap(Bt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function s9(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h}=n,d=null==u?[1,1]:u,c=Cw.computeConv2DInfo(a.shape,s.shape,l,d,p,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,w=c.dilationHeight,v=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,S=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(_.dataId).id;return n9(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,w,v,k,I,S,N,C),_}var i9,o9={kernelName:Bt,backendName:"wasm",setupFunc:a9,kernelFunc:s9};function l9(e){i9=e.wasm.cwrap("Diag",null,["number","number","number","number"])}function u9(e){let{inputs:t,backend:n}=e,{x:r}=t,a=Ea.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return i9(n.dataIdMap.get(r.dataId).id,$5[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}var p9,h9={kernelName:Ut,backendName:"wasm",setupFunc:l9,kernelFunc:u9};function d9(e){p9=e.wasm.cwrap(Gt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function c9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let u=Cw.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),p=n.makeOutput(u.outShape,a.dtype);return p9(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,$5[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),p}var f9,m9={kernelName:Gt,backendName:"wasm",setupFunc:d9,kernelFunc:c9};function g9(e){f9=e.wasm.cwrap(jt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function y9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=Cw.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(s.shape,s.dtype);return f9(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,$5[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),h}var b9,x9={kernelName:jt,backendName:"wasm",setupFunc:g9,kernelFunc:y9};function w9(e){b9=e.wasm.cwrap(Ht,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function v9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=Cw.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(a.shape,a.dtype);return b9(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,$5[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),h}var k9,I9={kernelName:Ht,backendName:"wasm",setupFunc:w9,kernelFunc:v9},S9=B5(Yt);function N9(e){k9=e.wasm.cwrap(Jt,null,["number","number","number"])}function T9(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=e=>n.dataIdMap.get(e.dataId).id;return k9(i(a),i(r),i(s)),s}var _9={kernelName:Jt,backendName:"wasm",setupFunc:N9,kernelFunc:T9},C9=!1,E9=G5(Qt,C9,"bool"),A9=B5(Zt),R9=B5(en,"float32");function $9(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Ea.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),P8({inputs:{x:a},backend:r,attrs:{shape:o}})}var F9={kernelName:tn,backendName:"wasm",kernelFunc:$9},D9=B5(nn,"float32");function M9(e){let{attrs:{shape:t,value:n},backend:r}=e,{attrs:{dtype:a}}=e;a=a||Ea.inferDtype(n);let s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var O9,L9={kernelName:an,backendName:"wasm",kernelFunc:M9};function P9(e){O9=e.wasm.cwrap(sn,null,["number","number","number","number","number","number"])}function z9(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,p]=r.shape;return O9(s,o,l,u,p,i),a}var B9,W9={kernelName:sn,backendName:"wasm",kernelFunc:z9,setupFunc:P9},V9=B5(on),U9=!1,G9=G5(ln,U9);function H9(e){B9=e.wasm.cwrap(un,null,["number","number","number","number","number","number","number"])}function j9(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,p=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===Ea.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return B9(p,h,d,c,f,a,g),m}var q9,K9={kernelName:un,backendName:"wasm",setupFunc:H9,kernelFunc:j9};function X9(e){q9=e.wasm.cwrap(fa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Y9(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=Cw.computeConv2DInfo(a.shape,s.shape,l,p,u,d),g=F5[c];if(null==g)throw new Error(c+" activation not yet supported for FusedConv2D in the wasm backend.");let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,R=m.inChannels,$="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return q9(y,F,D,M,b,v,k,w,I,S,N,T,$,_,C,E,A,R,x,g,P,f||0,L),O}var J9,Z9={kernelName:fa,backendName:"wasm",setupFunc:X9,kernelFunc:Y9};function Q9(e){J9=e.wasm.cwrap(ma,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function eee(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=Cw.computeConv2DInfo(a.shape,s.shape,l,p,u,d,!0),g=F5[c];if(null==g)throw new Error(c+" activation not yet supported for FusedDepthwiseConv2D in the wasm backend.");let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,R=m.inChannels,$="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return J9(y,F,D,M,b,v,k,w,I,S,N,T,$,_,C,E,A,R,x,g,P,f||0,L),O}var tee,nee={kernelName:ma,backendName:"wasm",setupFunc:Q9,kernelFunc:eee};function ree(e){tee=e.wasm.cwrap(hn,null,["number","number","number","number","number","number","array","number"])}function aee(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Qx.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let p=a.shape,h=p[p.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return tee(d,$5[r.dtype],c,i,h,o,f,m),u}var see,iee={kernelName:hn,backendName:"wasm",setupFunc:ree,kernelFunc:aee};function oee(e){see=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function lee(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=Ea.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),p=a.shape[l];for(let I=0;I<u.length;++I){let e=u[I];Ea.assert(e<=p-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${p-1}]`)}let h=Cw.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=P8({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=Ea.sizeFromShape(s.shape),f=P8({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(0===Ea.sizeFromShape(a.shape))return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(Ea.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(Ea.computeStrides(m)).buffer);return see(b,$5[a.dtype],v,y,x,h.batchSize,k,w),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}var uee,pee={kernelName:pn,backendName:"wasm",setupFunc:oee,kernelFunc:lee},hee=!1,dee=G5(dn,hee,"bool"),cee=!1,fee=G5(cn,cee,"bool"),mee=B5(yn,"bool"),gee=B5(bn,"bool"),yee=B5(xn,"bool");function bee(e){uee=e.wasm.cwrap(wn,null,["number","number","number","number"])}function xee(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==Ea.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;uee(a,$5[t.dtype],n,e)}return s}var wee,vee={kernelName:wn,backendName:"wasm",setupFunc:bee,kernelFunc:xee},kee=!1,Iee=G5(vn,kee,"bool"),See=!1,Nee=G5(kn,See,"bool");function Tee(e){wee=e.wasm.cwrap(In,null,["number","number","number","number"])}function _ee(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return wee(n.dataIdMap.get(o.dataId).id,r,a,i),o}var Cee,Eee={kernelName:In,backendName:"wasm",setupFunc:Tee,kernelFunc:_ee},Aee=B5(Sn),Ree=B5(Nn),$ee=!1,Fee=G5(Tn,$ee,"bool"),Dee=B5(_n),Mee=!1,Oee=G5(Cn,Mee,"bool"),Lee=!1,Pee=G5(En,Lee,"bool");function zee(e){Cee=e.wasm.cwrap($n,null,["number","number","number","number","number","number","number"])}function Bee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;if("float32"!==a.dtype)throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(a.shape,a.dtype);return Cee(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,a.shape[3],s,i,o,l),u}var Wee,Vee={kernelName:$n,backendName:"wasm",setupFunc:zee,kernelFunc:Bee};function Uee(e){Wee=e.wasm.cwrap(Fn,null,["number","number","number","number","number","number","number","number","number"])}function Gee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;if("float32"!==a.dtype||"float32"!==s.dtype||"float32"!==i.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let h=n.makeOutput(a.shape,a.dtype);return Wee(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,i.shape[3],o,l,u,p),h}var Hee,jee={kernelName:Fn,backendName:"wasm",setupFunc:Uee,kernelFunc:Gee};function qee(e){Hee=e.wasm.cwrap(Mn,null,["number","number","number","number"])}function Kee(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=i8(i,a,t);if(d){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;Cw.assertAxesAreInnerMostDims("max",p,c);let[f,m]=Cw.computeOutAndReduceShapes(l.shape,p),g=Ea.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Ea.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;Hee(o,$5[i.dtype],g,e)}if(d&&t.disposeData(u.dataId),s){let e=Cw.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}var Xee,Yee={kernelName:Mn,backendName:"wasm",setupFunc:qee,kernelFunc:Kee},Jee=!1,Zee=G5(On,Jee);function Qee(e){Xee=e.wasm.cwrap(Ln,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ete(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;Ea.assert("float32"===a.dtype,()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=Cw.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,b=p.dilationWidth,x=p.strideHeight,w=p.strideWidth,v=p.inChannels,k=p.outChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(p.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return Xee(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,b,x,w,v,k,S),I}var tte,nte={kernelName:Ln,backendName:"wasm",setupFunc:Qee,kernelFunc:ete};function rte(e){tte=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ate(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=Cw.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(p.outShape,a.dtype);return tte(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),h}var ste,ite={kernelName:zn,backendName:"wasm",setupFunc:rte,kernelFunc:ate};function ote(e){ste=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=Cw.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return ste(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),h}var ute,pte={kernelName:Bn,backendName:"wasm",setupFunc:ote,kernelFunc:lte};function hte(e){ute=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function dte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=Cw.computePool2DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return ute(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),h}var cte,fte={kernelName:Pn,backendName:"wasm",setupFunc:hte,kernelFunc:dte};function mte(e){cte=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=r;Ea.assert(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let u=[1,1];Ea.assert(Cw.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=Cw.computePool2DInfo(a.shape,s,i,[1,1],o),h=n.makeOutput(p.outShape,a.dtype),d=n.makeOutput(p.outShape,"int32");return cte(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,n.dataIdMap.get(d.dataId).id,$5[a.dtype],l,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),[h,d]}var yte,bte={kernelName:Wn,backendName:"wasm",setupFunc:mte,kernelFunc:gte};function xte(e){yte=e.wasm.cwrap(Vn,null,["number, number, number"])}function wte(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=i8(i,a,t),f=h;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=Cw.getInnerMostAxes(f.length,u.shape.length))}Cw.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=Cw.computeOutAndReduceShapes(u.shape,f),y=Ea.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=s7({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==Ea.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;yte(l,y,e)}if(c&&t.disposeData(p.dataId),s){let e=Cw.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}var vte,kte={kernelName:Vn,backendName:"wasm",setupFunc:xte,kernelFunc:wte};function Ite(e){vte=e.wasm.cwrap(Un,null,["number","number","number","number"])}function Ste(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=i8(i,a,t);if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e)}let f=u.shape.length;Cw.assertAxesAreInnerMostDims("min",h,f);let[m,g]=Cw.computeOutAndReduceShapes(u.shape,h),y=Ea.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Ea.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;vte(l,$5[i.dtype],y,e)}if(c&&t.disposeData(p.dataId),s){let e=Cw.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}var Nte,Tte,_te={kernelName:Un,backendName:"wasm",setupFunc:Ite,kernelFunc:Ste},Cte=!1,Ete=G5(Gn,Cte);function Ate(e){Tte=e.wasm.cwrap(Hn,null,["number","array","number","number","array","array","number","number"])}function Rte(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map(e=>e[0]),h=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return Tte(i,u,t.shape.length,$5[t.dtype],d,c,Nte[a],l),o}(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(Nte||(Nte={}));var $te,Fte={kernelName:Hn,backendName:"wasm",kernelFunc:Rte,setupFunc:Ate};function Dte(e){$te=e.wasm.cwrap(zr,null,["number","number","number","number"])}function Mte(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=Ea.sizeFromShape(n.shape)/o;return 0===Ea.sizeFromShape(s.shape)||$te(a,i,o,l),s}var Ote,Lte={kernelName:zr,backendName:"wasm",setupFunc:Dte,kernelFunc:Mte};function Pte(e){Ote=e.wasm.cwrap(qn,null,["number","number","number","number","number","number"])}function zte(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if("float32"!==a.dtype)throw new Error("Tensor logits must have dtype float32, got "+a.dtype);let l=o?a:Mte({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[u,p]=l.shape,h=n.makeOutput([u,s],"int32");return Ote(n.dataIdMap.get(l.dataId).id,u,p,s,i,n.dataIdMap.get(h.dataId).id),o||n.disposeData(l.dataId),h}var Bte,Wte={kernelName:qn,backendName:"wasm",setupFunc:Pte,kernelFunc:zte},Vte=G5(jn,!0),Ute=!0,Gte=G5(Kn,Ute),Hte=B5(Xn);function jte(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}function qte(e){Bte=e.wasm.cwrap(Jn,"number",["number","number","number","number","number"])}function Kte(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(l.dataId).id,h=Bte(u,p,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=jte(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}var Xte,Yte={kernelName:Jn,backendName:"wasm",setupFunc:qte,kernelFunc:Kte};function Jte(e){Xte=e.wasm.cwrap(Zn,"number",["number","number","number","number","number","bool"])}function Zte(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=Xte(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=jte(t,d);t.wasm._free(m);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var Qte,ene={kernelName:Zn,backendName:"wasm",setupFunc:Jte,kernelFunc:Zte};function tne(e){Qte=e.wasm.cwrap(Qn,"number",["number","number","number","number","number","number"])}function nne(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=Qte(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=jte(t,d);t.wasm._free(g);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([f],"float32",m);return[y,b]}var rne,ane={kernelName:Qn,backendName:"wasm",setupFunc:tne,kernelFunc:nne},sne=!1,ine=G5(Yn,sne,"bool");function one(e){rne=e.wasm.cwrap(tr,null,["number","number","number","number","number"])}function lne(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),p=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(a.dataId).id;return rne(h,i,o,l,p),u}var une={kernelName:tr,backendName:"wasm",setupFunc:one,kernelFunc:lne};function pne(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var hne={kernelName:er,backendName:"wasm",kernelFunc:pne};function dne(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return $9({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{Ea.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Ea.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{let t=$9({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),u=d7({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeData(e.dataId)),u}var cne,fne={kernelName:nr,backendName:"wasm",kernelFunc:dne};function mne(e){cne=e.wasm.cwrap(rr,null,["number","array","number","number","array","array","number","number"])}function gne(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]);if(0===Ea.sizeFromShape(t.shape))return M9({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map(e=>e[0]),h=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return cne(i,u,t.shape.length,$5[t.dtype],d,c,a,l),o}var yne,bne={kernelName:rr,backendName:"wasm",kernelFunc:gne,setupFunc:mne},xne=!1,wne=G5(sr,xne);function vne(e){yne=e.wasm.cwrap(ir,null,["number","number","number"])}function kne(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=s7({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let p=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(p.dataId).id;return yne(o,i,h),"float32"!==l.dtype&&n.disposeData(u.dataId),p}var Ine,Sne={kernelName:ir,backendName:"wasm",setupFunc:vne,kernelFunc:kne};function Nne(e){Ine=e.wasm.cwrap(or,null,["number","number","number","number"])}function Tne(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=i8(i,a,t),f=h;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=Cw.getInnerMostAxes(f.length,u.shape.length))}Cw.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=Cw.computeOutAndReduceShapes(u.shape,f),y=Ea.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Ea.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;Ine(l,y,$5[b.dtype],e)}if(c&&t.disposeData(p.dataId),s){let e=Cw.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}var _ne,Cne={kernelName:or,backendName:"wasm",setupFunc:Nne,kernelFunc:Tne},Ene=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=iz(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},Ane={kernelName:hr,backendName:"wasm",kernelFunc:Ene},Rne=!0,$ne=G5(Kt,Rne),Fne=B5(cr),Dne=B5(fr),Mne=B5(wr);function One(e){_ne=e.wasm.cwrap(br,null,["number","number","number","number","number","number","number","number","number","number"])}function Lne(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,p]=l,[h,d,c,f]=s.shape,m=[h,u,p,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=s7({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===Ea.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return _ne(y,h,d,c,f,u,p,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}var Pne,zne={kernelName:br,backendName:"wasm",setupFunc:One,kernelFunc:Lne};function Bne(e){Pne=e.wasm.cwrap(xr,null,["number","number","number","array","array","boolean"])}function Wne(e){let t,{inputs:n,backend:r,attrs:a}=e,{images:s,dy:i}=n,{alignCorners:o}=a,l=r.makeOutput(s.shape,"float32"),u=r.dataIdMap.get(s.dataId);return"float32"!==u.dtype&&(t=s7({backend:r,inputs:{x:s},attrs:{dtype:"float32"}}),u=r.dataIdMap.get(t.dataId)),Pne(r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(i.dataId).id,r.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(s.shape).buffer),new Uint8Array(new Int32Array(i.shape).buffer),o),null!=t&&r.disposeData(t.dataId),l}var Vne,Une={kernelName:xr,backendName:"wasm",setupFunc:Bne,kernelFunc:Wne};function Gne(e){Vne=e.wasm.cwrap(gr,null,["number","number","number","number","number","number","number","number","number","number"])}function Hne(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[p,h,d,c]=a.shape,f=[p,l,u,c],m=t.makeOutput(f,"float32");if(0===Ea.sizeFromShape(a.shape))return m;let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=s7({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));let b=y.id,x=t.dataIdMap.get(m.dataId).id;return Vne(b,p,h,d,c,l,u,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),m}var jne,qne={kernelName:gr,backendName:"wasm",setupFunc:Gne,kernelFunc:Hne};function Kne(e){jne=e.wasm.cwrap(yr,null,["number","number","number","array","array","boolean"])}function Xne(e){let t,{inputs:n,backend:r,attrs:a}=e,{images:s,dy:i}=n,{alignCorners:o}=a,l=r.makeOutput(s.shape,"float32"),u=r.dataIdMap.get(s.dataId);return"float32"!==u.dtype&&(t=s7({backend:r,inputs:{x:s},attrs:{dtype:"float32"}}),u=r.dataIdMap.get(t.dataId)),jne(r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(i.dataId).id,r.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(s.shape).buffer),new Uint8Array(new Int32Array(i.shape).buffer),o),null!=t&&r.disposeData(t.dataId),l}var Yne,Jne={kernelName:yr,backendName:"wasm",setupFunc:Kne,kernelFunc:Xne};function Zne(e){Yne=e.wasm.cwrap(vr,null,["number","array","number","array","number","number"])}function Qne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=Ea.parseAxisParam(s,a.shape);if(0===a.shape.length)return J5({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);Yne(l,p,i.length,h,a.shape.length,u);let d=P8({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d}var ere,tre={kernelName:vr,backendName:"wasm",kernelFunc:Qne,setupFunc:Zne};function nre(e){ere=e.wasm.cwrap(da,null,["number","number","number","number","number","number","number","number","array","number","number"])}function rre(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(l.dataId).id,[h,d,c,f]=a.shape,[m,g]=Cw.getImageCenter(o,d,c),y=0===i,b=255,x="number"==typeof i?[i,i,i,y?0:b]:[...i,b],w=new Uint8Array(new Int32Array(x).buffer);return ere(u,h,d,c,f,s,m,g,w,x.length,p),l}var are,sre={kernelName:da,backendName:"wasm",kernelFunc:rre,setupFunc:nre},ire=B5(kr),ore=B5(Ir);function lre(e){are=e.wasm.cwrap(Sr,null,["number","number","number","number","number","number","array","number","number"])}function ure(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===Ea.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=Hm.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return are(c,f,$5[s.dtype],l,u,p,m,d,g),o}var pre,hre={kernelName:Sr,backendName:"wasm",setupFunc:lre,kernelFunc:ure};function dre(e){pre=e.wasm.cwrap(Tr,null,["number","number","number","number","number","number","bool","number"])}function cre(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(e){return n.dataIdMap.get(e.dataId).id}return pre(l(a),l(s),a.shape[0],a.shape[1],s.shape[1],$5[a.dtype],"left"===i,l(o)),o}var fre,mre={kernelName:Tr,backendName:"wasm",setupFunc:dre,kernelFunc:cre};function gre(e){fre=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function yre(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(u.dataId).id,h=r.shape.length,d=a.shape.length,c=0===h||h>1||1===d?1:Ea.sizeFromShape(a.shape.slice(1));return fre(i,o,l,c,p),u}var bre,xre={kernelName:_r,backendName:"wasm",kernelFunc:yre,setupFunc:gre},wre=B5(Cr);function vre(e){bre=e.wasm.cwrap(Fr,null,["number","number"])}function kre(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===Ea.sizeFromShape(a.shape)||bre(r,s),a}var Ire={kernelName:"Sigmoid",backendName:"wasm",setupFunc:vre,kernelFunc:kre},Sre=B5($r),Nre=B5(Ar),Tre=B5(Rr),_re=B5(Dr);function Cre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=Ea.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=bne.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=Cw.getReshaped(u.shape,s,o,!1),h=Cw.getPermuted(p.length,s.length,!1),d=Cw.getReshapedPermuted(u.shape,s,o,!1),c=P8({inputs:{x:u},backend:n,attrs:{shape:p}}),f=t8({inputs:{x:c},backend:n,attrs:{perm:h}}),m=P8({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}var Ere,Are={kernelName:Lr,backendName:"wasm",kernelFunc:Cre};function Rre(e){Ere=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function $re(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],p=n.readSync(i.dataId)[0],h=[l+p,u],d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(h,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(h.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([p],"bool"),w=n.dataIdMap.get(x.dataId).id,v=n.makeOutput([l],a.dtype),k=n.dataIdMap.get(v.dataId).id,I=n.makeOutput([4],"int32"),S=n.dataIdMap.get(I.dataId).id,N=Ere(d,c,$5[s.dtype],l,p,u,f,g,b,w,k,S),T=n.readSync(I.dataId);switch(T[0]){case 1:t=Cw.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:t=Cw.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:t=Cw.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(v.dataId),new Error(t);let _=m,C=y;return N!==h[0]&&(_=G8({inputs:{x:m},attrs:{begin:0,size:[N,u]},backend:n}),C=G8({inputs:{x:y},attrs:{begin:0,size:N},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[_,C,x,v]}var Fre,Dre={kernelName:Br,backendName:"wasm",setupFunc:Rre,kernelFunc:$re};function Mre(e){Fre=e.wasm.cwrap(Wr,null,["number","number","number","number","number","number","number"])}function Ore(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],p=Ea.sizeFromShape(s.shape),h=t.makeOutput([u,p],r.dtype),d=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([p],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;Fre(i,o,l,u,d,f,g);let y,b=t.readSync(m.dataId);switch(b[0]){case 0:y=Cw.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:y=Cw.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:y=Cw.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=Cw.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=Cw.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(y);return[h,c]}var Lre,Pre={kernelName:Wr,backendName:"wasm",setupFunc:Mre,kernelFunc:Ore};function zre(e){Lre=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Bre(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(Cw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=a.shape.slice();p[0]=u;let h=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(p,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;Lre(h,$5[a.dtype],a.shape[0],d,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=Cw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=Cw.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=Cw.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=Cw.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}function Wre(e){return Bre(e,!0)}var Vre={kernelName:Vr,backendName:"wasm",setupFunc:zre,kernelFunc:Wre};function Ure(e){return Bre(e,!1)}var Gre,Hre={kernelName:Ur,backendName:"wasm",setupFunc:zre,kernelFunc:Ure};function jre(e){Gre=e.wasm.cwrap(Gr,null,["number","number","number","number","number","number","number","number","array","number","number"])}function qre(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,l=t.makeOutput(o,i.dtype);if(0===Ea.sizeFromShape(o))return l;let{sliceRank:u,numUpdates:p,sliceSize:h,strides:d,outputSize:c}=Cw.calculateShapes(s,a,o),f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),b=t.dataIdMap.get(l.dataId).id;return Gre(f,m,s.shape.length,g,$5[i.dtype],u,p,h,y,c,b),l}var Kre={kernelName:Gr,backendName:"wasm",setupFunc:jre,kernelFunc:qre};function Xre(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=Ea.parseAxisParam(i,a.shape)[0],l=Cw.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;let n=G8({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n})}var Yre,Jre={kernelName:Pr,backendName:"wasm",kernelFunc:Xre},Zre=B5(Mr),Qre=B5(jr),eae=!0,tae=G5(Hr,eae);function nae(e){Yre=e.wasm.cwrap(pa,null,["number","number","number","number"])}function rae(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return Yre(i,a,$5[s.dtype],l),o}var aae,sae={kernelName:pa,backendName:"wasm",setupFunc:nae,kernelFunc:rae};function iae(e){aae=e.wasm.cwrap(Kr,null,["number","array","number","array","array","array","array","array","number","number"])}function oae(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:p,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=tw.sliceInfo(s.shape,i,o,l,u,p,h,d,c);if(g)t=P8({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){Ea.assert(s.shape.length>=1,()=>"Input must have rank at least 1, got: "+s.shape.length);let e=tw.computeOutShape(x,w,v),r=G8({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=P8({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(Ea.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(w).buffer),l=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(f).buffer),p=new Uint8Array(new Int32Array(Ea.computeStrides(f)).buffer),h=n.dataIdMap.get(e.dataId).id;aae(r,a,s.shape.length,i,o,l,u,p,f.length,h),t=P8({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}var lae={kernelName:Kr,backendName:"wasm",setupFunc:iae,kernelFunc:oae};function uae(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:p,preserveShortSequences:h}=r,d=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=Rz(d,c,i,o,l,u,p,h),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(m),[g,b]}var pae={kernelName:Xr,backendName:"wasm",kernelFunc:uae};function hae(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,p,h]=Fz(o,l[0],i),d=p.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([d],"string"),m=t.dataIdMap.get(f.dataId);m.stringBytes=p;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(h),[c,f,g]}var dae={kernelName:Yr,backendName:"wasm",kernelFunc:hae};function cae(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=Dz(i,s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var fae,mae={kernelName:Jr,backendName:"wasm",kernelFunc:cae},gae=!0,yae=G5(Zr,gae);function bae(e){fae=e.wasm.cwrap(Or,null,["number","number","number","number"])}function xae(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=i8(i,a,t),f=h;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=Cw.getInnerMostAxes(f.length,u.shape.length))}Cw.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=Cw.computeOutAndReduceShapes(u.shape,f),y=Ea.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Ea.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;fae(l,y,$5[b.dtype],e)}if(c&&t.disposeData(p.dataId),s){let e=Cw.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}var wae,vae={kernelName:Or,backendName:"wasm",setupFunc:bae,kernelFunc:xae},kae=B5(Qr),Iae=B5(ea);function Sae(e){wae=e.wasm.cwrap(Nr,null,["number","number","number","number","number","number","array","number","number","number"])}function Nae(e){let{backend:t,inputs:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=n,{}=r,o=t.makeOutput(a.shape,a.dtype);if(0===Ea.sizeFromShape(a.shape))return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=Hm.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return wae(c,f,$5[i.dtype],l,u,p,g,d,y,m),o}var Tae,_ae={kernelName:Nr,backendName:"wasm",setupFunc:Sae,kernelFunc:Nae};function Cae(e){Tae=e.wasm.cwrap(ta,null,["number","array","number","array","number","number"])}function Eae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let d=0;d<o.length;d++)o[d]=a.shape[d]*i[d];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),p=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(p.dataId).id;return Tae(s,l,a.shape.length,u,o.length,$5[p.dtype],h),p}var Aae,Rae={kernelName:ta,backendName:"wasm",setupFunc:Cae,kernelFunc:Eae};function $ae(e){Aae=e.wasm.cwrap(na,null,["number","array","number","number","number","bool","number","number"])}var Fae,Dae=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),p=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),d=t.dataIdMap.get(h.dataId).id;return Aae(i,o,r.shape.length,$5[r.dtype],a,s,p,d),[u,h]},Mae={kernelName:na,backendName:"wasm",setupFunc:$ae,kernelFunc:Dae};function Oae(e){Fae=e.wasm.cwrap(ra,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Lae(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:p}=a,[h,d,c,f]=s.shape,[m,g]=null!=p?p:[d,c],y=[h,m,g,f],b=new Uint8Array(new Int32Array(Ea.computeStrides(s.shape)).buffer),x=new Uint8Array(new Int32Array(Ea.computeStrides(y)).buffer),w=n.makeOutput(y,s.dtype),v=n.dataIdMap.get(w.dataId).id,k=n.dataIdMap.get(s.dataId).id,I=n.dataIdMap.get(i.dataId).id,S="nearest"===o?1:2;switch(l){case"constant":t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4;break;default:t=1;break}return Fae(k,I,i.shape[0]>1,h,m,g,f,c,d,b,s.shape.length-1,x,y.length-1,S,t,u,v),w}var Pae={kernelName:ra,backendName:"wasm",setupFunc:Oae,kernelFunc:Lae};function zae(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=Uz(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([l.length],"int32",void 0,l)]}var Bae={kernelName:sa,backendName:"wasm",kernelFunc:zae};function Wae(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=a.shape[c]);let p=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let c=0;c<p.length;c++)h[s]=c,p[c]=G8({inputs:{x:a},attrs:{begin:h,size:d},backend:n});return p.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l}))}var Vae={kernelName:ia,backendName:"wasm",kernelFunc:Wae};function Uae(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var Gae={kernelName:ua,backendName:"wasm",kernelFunc:Uae},Hae=[z5,W5,V5,U5,q5,Y5,p8,c8,g8,y8,b8,x8,w8,v8,k8,T8,L8,A8,D8,U8,J8,e7,n7,a7,o7,l7,h7,f7,b7,k7,T7,A7,M7,O7,L7,W7,H7,X7,Q7,r9,o9,h9,m9,x9,I9,S9,_9,E9,A9,R9,F9,D9,L9,W9,V9,G9,K9,Z9,nee,iee,pee,dee,fee,Q5,mee,gee,yee,vee,Iee,Nee,Eee,Ree,Aee,Fee,Dee,Oee,Pee,Vee,jee,Yee,Zee,nte,ite,pte,fte,bte,kte,_te,Ete,Fte,Wte,Vte,Gte,Hte,Yte,ene,ane,ine,une,hne,fne,bne,wne,Sne,Cne,Ane,$ne,Fne,Dne,Mne,B8,zne,Une,qne,Jne,tre,sre,ire,ore,hre,mre,xre,wre,Ire,Sre,Nre,Tre,K8,Lte,_re,Are,Dre,Pre,Vre,Hre,Kre,Jre,Zre,Qre,tae,sae,lae,pae,dae,mae,yae,vae,kae,Iae,_ae,Rae,Mae,Pae,s8,Bae,Vae,Gae];for(let t of Hae)Ia(t);var jae=Ge();jae.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(ppe){return!1}}),jae.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(jae.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(ppe){return!1}});var qae=w(z()),Kae=w(B()),Xae=w(W()),Yae=qae.default||qae,Jae=Xae.default||Xae,Zae=class extends U{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(hse),dse=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new V(this,Ii())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=Ea.now();return e(),{kernelMs:Ea.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=Ea.sizeFromShape(n),o=i*Ea.bytesPerElement(r),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||Ea.sizeFromShape(s);let o=Ea.bytesPerElement(a),l=this.wasm.HEAPU8.slice(r+t*o,r+n*o);return nse(l.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(null==n)a=this.write(null!=r?r:null,e,t);else{let r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=Ea.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=Ea.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error("Unknown dtype "+t)}}};function Qae(e){return(t,n)=>(Ea.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(e=>{WebAssembly.instantiate(e,t).then(e=>{n(e.instance,e.module)})})}),{})}function ese(e,t,n){if(null!=ase)return ase;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=ise&&null!=ise[r]?ise[r]:n+r}async function tse(){let[e,t]=await Promise.all([Ge().getAsync("WASM_HAS_SIMD_SUPPORT"),Ge().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=Kae.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?ese(e,t,null!=sse?sse:r):r+n}};lse&&(a.instantiateWasm=Qae(ese(e,t,null!=sse?sse:"")));let s,i=!1;a.onAbort=()=>{i||ose||(ose=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==ase?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Yae.toString()],{type:"text/javascript"}),s=Yae(a)):s=Jae(a),s.then(e=>{i=!0,ose=!1;let t=null;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",t,["number"]),dispose:e.cwrap("dispose",t,[])},n({wasm:e})}).catch(r)})}function nse(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error("Unknown dtype "+t)}}var rse=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],ase=null,sse=null,ise={},ose=!1,lse=!1;function use(e,t=!1){if(vi("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),ose)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");ase=e,lse=t}function pse(e,t=!1){if(ose)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)sse=e;else{ise=e;let t=rse.filter(e=>null==ise[e]);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}lse=t}var hse=-1,dse=-1;function cse(e){hse=e}function fse(){if(-1===dse)throw new Error("WASM backend not initialized.");return dse}var mse="4.16.0",gse=2;Oi("wasm",async()=>{let{wasm:e}=await tse();return new Zae(e)},gse);var yse="4.16.0",bse="4.16.0",xse="4.16.0",wse="4.16.0",vse="4.16.0",kse={tfjs:yse,"tfjs-core":yse,"tfjs-converter":bse,"tfjs-backend-cpu":xse,"tfjs-backend-webgl":wse,"tfjs-backend-wasm":vse},Ise={};function Sse(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)}),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}u(Ise,{AnchorPosition:()=>Tie,DrawBox:()=>Aie,DrawBoxOptions:()=>Eie,DrawFaceLandmarks:()=>Doe,DrawFaceLandmarksOptions:()=>Foe,DrawTextField:()=>Cie,DrawTextFieldOptions:()=>_ie,drawContour:()=>Sse,drawDetections:()=>Rie,drawFaceExpressions:()=>Eoe,drawFaceLandmarks:()=>Moe});var Nse={};u(Nse,{computeReshapedDimensions:()=>Ose,getCenterPoint:()=>Lse,isDimensions:()=>Mse,isEven:()=>Fse,isFloat:()=>$se,isTensor:()=>_se,isTensor1D:()=>Cse,isTensor2D:()=>Ese,isTensor3D:()=>Ase,isTensor4D:()=>Rse,isValidNumber:()=>zse,isValidProbablitiy:()=>Bse,range:()=>Pse,round:()=>Dse});var Tse=class e{constructor(e,t){if(!zse(e)||!zse(t))throw new Error("Dimensions.constructor - expected width and height to be valid numbers, instead have "+JSON.stringify({width:e,height:t}));this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new e(1/this.width,1/this.height)}};function _se(e,t){return e instanceof Ss&&e.shape.length===t}function Cse(e){return _se(e,1)}function Ese(e){return _se(e,2)}function Ase(e){return _se(e,3)}function Rse(e){return _se(e,4)}function $se(e){return e%1!==0}function Fse(e){return e%2===0}function Dse(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Mse(e){return e&&e.width&&e.height}function Ose({width:e,height:t},n){let r=n/Math.max(t,e);return new Tse(Math.round(e*r),Math.round(t*r))}function Lse(e){return e.reduce((e,t)=>e.add(t),new Wse(0,0)).div(new Wse(e.length,e.length))}function Pse(e,t,n){return Array(e).fill(0).map((e,r)=>t+r*n)}function zse(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function Bse(e){return zse(e)&&e>=0&&e<=1}var Wse=class e{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(t){return new e(this.x+t.x,this.y+t.y)}sub(t){return new e(this.x-t.x,this.y-t.y)}mul(t){return new e(this.x*t.x,this.y*t.y)}div(t){return new e(this.x/t.x,this.y/t.y)}abs(){return new e(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new e(Math.floor(this.x),Math.floor(this.y))}},Vse=class e{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(zse)}static assertIsValidBox(t,n,r=!1){if(!e.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!r&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let r=t||{},a=[r.left,r.top,r.right,r.bottom].every(zse),s=[r.x,r.y,r.width,r.height].every(zse);if(!s&&!a)throw new Error("Box.constructor - expected box to be IBoundingBox | IRect, instead have "+JSON.stringify(r));let[i,o,l,u]=s?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];e.assertIsValidBox({x:i,y:o,width:l,height:u},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new Wse(this.left,this.top)}get topRight(){return new Wse(this.right,this.top)}get bottomLeft(){return new Wse(this.left,this.bottom)}get bottomRight(){return new Wse(this.right,this.bottom)}round(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(e=>Math.round(e));return new e({x:t,y:n,width:r,height:a})}floor(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(e=>Math.floor(e));return new e({x:t,y:n,width:r,height:a})}toSquare(){let{x:t,y:n,width:r,height:a}=this,s=Math.abs(r-a);return r<a&&(t-=s/2,r+=s),a<r&&(n-=s/2,a+=s),new e({x:t,y:n,width:r,height:a})}rescale(t){let n=Mse(t)?t.width:t,r=Mse(t)?t.height:t;return new e({x:this.x*n,y:this.y*r,width:this.width*n,height:this.height*r})}pad(t,n){let[r,a,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new e({x:r,y:a,width:s,height:i})}clipAtImageBorders(t,n){let{x:r,y:a,right:s,bottom:i}=this,o=Math.max(r,0),l=Math.max(a,0),u=s-o,p=i-l,h=Math.min(u,t-o),d=Math.min(p,n-l);return new e({x:o,y:l,width:h,height:d}).floor()}shift(t,n){let{width:r,height:a}=this,s=this.x+t,i=this.y+n;return new e({x:s,y:i,width:r,height:a})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=1,s=1,i=n,o=r,l=this.left,u=this.top,p=this.right,h=this.bottom;return p>t&&(i=-p+t+n,p=t),h>e&&(o=-h+e+r,h=e),l<1&&(o=2-l,l=1),u<1&&(o=2-u,u=1),{dy:s,edy:o,dx:a,edx:i,y:u,ey:h,x:l,ex:p,w:n,h:r}}calibrate(t){return new e({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}},Use=class extends Vse{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},Gse=class e{constructor(e,t,n,r,a){this._imageDims=new Tse(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new Vse(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new Vse(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new e(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}},Hse=class e extends Gse{constructor(e,t,n){super(e,e,"",t,n)}forSize(t,n){let{score:r,relativeBox:a,imageDims:s}=super.forSize(t,n);return new e(r,a,s)}};function jse(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function qse(e){let t=e.map(e=>e.x),n=e.map(e=>e.y),r=t.reduce((e,t)=>t<e?t:e,1/0),a=n.reduce((e,t)=>t<e?t:e,1/0),s=t.reduce((e,t)=>e<t?t:e,0),i=n.reduce((e,t)=>e<t?t:e,0);return new Use(r,a,s,i)}function Kse(e,t,n,r=!0){let a=t.map((e,t)=>({score:e,boxIndex:t})).sort((e,t)=>e.score-t.score).map(e=>e.boxIndex),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(jse(s,l,r))}a=a.filter((e,t)=>o[t]<=n)}return s}function Xse(e,t){return Ti(()=>{let[n,r,a]=t,s=Gu([...e.shape.slice(0,3),1],n,"float32"),i=Gu([...e.shape.slice(0,3),1],r,"float32"),o=Gu([...e.shape.slice(0,3),1],a,"float32"),l=du([s,i,o],3);return Td(e,l)})}function Yse(e,t=!1){return Ti(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,Gu(n,0,"float32")},l=o(s),u=a-l.shape[i],p=[t&&u?o(u):null,e,l].filter(e=>!!e).map(e=>tl(e,"float32"));return du(p,i)})}function Jse(e){let t=e.slice();for(let n=t.length-1;n>0;n--){let e=Math.floor(Math.random()*(n+1)),r=t[n];t[n]=t[e],t[e]=r}return t}function Zse(e){return 1/(1+Math.exp(-e))}function Qse(e){return Math.log(e/(1-e))}var eie,tie=class extends Vse{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},nie=.5,rie=.43,aie=.45,sie=class{constructor(e,t,n=new Wse(0,0)){let{width:r,height:a}=t;this._imgDims=new Tse(r,a),this._shift=n,this._positions=e.map(e=>e.mul(new Wse(r,a)).add(n))}get shift(){return new Wse(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new Wse(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new Wse(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof Hse?e.box.floor():new Vse(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/aie),o=Lse(e),l=Math.floor(Math.max(0,o.x-nie*i)),u=Math.floor(Math.max(0,o.y-rie*i));return new tie(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=qse(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},iie=class extends sie{getRefPointsForAlignment(){let e=this.positions;return[e[0],e[1],Lse([e[3],e[4]])]}},oie=class extends sie{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Lse)}},lie=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${Dse(this.distance)})`:""}`}},uie=class extends Vse{static assertIsValidLabeledBox(e,t){if(Vse.assertIsValidBox(e,t),!zse(e.label))throw new Error(`${t} - expected property label (${e.label}) to be a number`)}constructor(e,t){super(e),this._label=t}get label(){return this._label}},pie=class e{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some(e=>!(e instanceof Float32Array)))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map(e=>Array.from(e))}}static fromJSON(t){let n=t.descriptors.map(e=>new Float32Array(e));return new e(t.label,n)}},hie=class extends uie{static assertIsValidPredictedBox(e,t){if(uie.assertIsValidLabeledBox(e,t),!Bse(e.score)||!Bse(e.classScore))throw new Error(`${t} - expected properties score (${e.score}) and (${e.classScore}) to be a number between [0, 1]`)}constructor(e,t,n,r){super(e,t),this._score=n,this._classScore=r}get score(){return this._score}get classScore(){return this._classScore}};function die(e){return e.detection instanceof Hse}function cie(e,t){return{...e,detection:t}}function fie(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function mie(){return"object"==typeof s&&"undefined"!=typeof r&&null!=r.versions&&null!=r.versions.node}function gie(e){let t="";if(!e&&mie())try{e=l("fs")}catch(n){t=n.toString()}return{readFile:e?t=>new Promise((n,r)=>{e.readFile(t,(e,t)=>e?r(e):n(t))}):()=>{throw new Error("readFile - failed to require fs in nodejs environment with error: "+t)}}}function yie(){let e=s.Canvas||s.HTMLCanvasElement,t=s.Image||s.HTMLImageElement,n=s.Video||s.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},i=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},o=s.fetch,l=gie();return{Canvas:e||class{},CanvasRenderingContext2D:s.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:s.ImageData||class{},Video:s.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:a,createVideoElement:i,fetch:o,...l}}function bie(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function xie(){if(!eie)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return eie}function wie(e){eie=e}function vie(){return bie()?wie(fie()):mie()?wie(yie()):null}function kie(e){if(eie||vie(),!eie)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=eie.Canvas,Image:n=eie.Image}=e;eie.Canvas=t,eie.Image=n,eie.createCanvasElement=e.createCanvasElement||(()=>new t),eie.createImageElement=e.createImageElement||(()=>new n),eie.ImageData=e.ImageData||eie.ImageData,eie.Video=e.Video||eie.Video,eie.fetch=e.fetch||eie.fetch,eie.readFile=e.readFile||eie.readFile}var Iie={getEnv:xie,setEnv:wie,initialize:vie,createBrowserEnv:fie,createFileSystem:gie,createNodejsEnv:yie,monkeyPatch:kie,isBrowser:bie,isNodejs:mie};function Sie(e){return Iie.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function Nie(e){let{Canvas:t,CanvasRenderingContext2D:n}=Iie.getEnv();if(e instanceof n)return e;let r=Sie(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}vie();var Tie=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(Tie||{}),_ie=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},Cie=class e{constructor(t,n,r={}){this.text="string"==typeof t?[t]:t instanceof e?t.text:t,this.anchor=n,this.options=new _ie(r)}measureWidth(e){let{padding:t}=this.options;return this.text.map(t=>e.measureText(t).width).reduce((e,t)=>e<t?t:e,0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t,r=Math.max(Math.min(o,e-s),0),a=Math.max(Math.min(l,n-i),0);return{x:r,y:a}}return{x:o,y:l}}draw(e){let t=Sie(e),n=Nie(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let p=this.getUpperLeft(n,t);n.fillRect(p.x,p.y,l,u),n.fillStyle=a,this.text.forEach((e,t)=>{let r=o+p.x,a=o+p.y+(t+1)*s;n.fillText(e,r,a)})}},Eie=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new _ie({...s,...a})}},Aie=class{constructor(e,t={}){this.box=new Vse(e),this.options=new Eie(t)}draw(e){let t=Nie(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new Cie([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function Rie(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{let n=t instanceof Hse?t.score:die(t)?t.detection.score:void 0,r=t instanceof Hse?t.box:die(t)?t.detection.box:new Vse(t),a=n?""+Dse(n):void 0;new Aie(r,{label:a}).draw(e)})}function $ie(e){let{Image:t,Video:n}=Iie.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Fie(e){return new Promise((t,n)=>{function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}(e instanceof Iie.getEnv().Canvas||$ie(e))&&t(null),e.addEventListener("load",a),e.addEventListener("error",r)})}function Die(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let e=Iie.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)})}function Mie(e){let{Image:t,Video:n}=Iie.getEnv();return e instanceof t?new Tse(e.naturalWidth,e.naturalHeight):e instanceof n?new Tse(e.videoWidth,e.videoHeight):new Tse(e.width,e.height)}function Oie({width:e,height:t}){let{createCanvasElement:n}=Iie.getEnv(),r=n();return r.width=e,r.height=t,r}function Lie(e,t){let{ImageData:n}=Iie.getEnv();if(!(e instanceof n)&&!$ie(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||Mie(e),s=Oie({width:r,height:a});return e instanceof n?Nie(s).putImageData(e,0,0):Nie(s).drawImage(e,0,0,r,a),s}async function Pie(e,t){let n=t||Iie.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(Rse(e)?1:0),i=Ti(()=>e.as3D(r,a,s).toInt());return await zx.toPixels(i,n),i.dispose(),n}function zie(e){let{Image:t,Canvas:n,Video:r}=Iie.getEnv();return e instanceof t||e instanceof n||e instanceof r}function Bie(e,t,n=!1){let{Image:r,Canvas:a}=Iie.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Oie({width:1,height:1});let s=Mie(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=Oie({width:t,height:t}),p=e instanceof a?e:Lie(e),h=Math.abs(o-l)/2,d=n&&o<l?h:0,c=n&&l<o?h:0;return p.width>0&&p.height>0&&Nie(u).drawImage(p,d,c,o,l),u}var Wie=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error("NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have "+e);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((e,t)=>{if(Ase(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(Rse(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof Iie.getEnv().Canvas?e:Lie(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return Pse(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),n=this.getInputHeight(e);return Ose({width:t,height:n},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,Ti(()=>{let n=Pse(this.batchSize,0,1).map(n=>{let r=this.getInput(n);if(r instanceof Ss){let n=Rse(r)?r:Ah(r);return n=Yse(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=Pb.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof Iie.getEnv().Canvas)return zx.fromPixels(Bie(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)});return $m(n.map(e=>tl(e,"float32"))).as4D(this.batchSize,e,e,3)})}};async function Vie(e){if(e instanceof Wie)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(Sie);return r.forEach((e,r)=>{if(!zie(e)&&!Ase(e)&&!Rse(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(Rse(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}}),await Promise.all(r.map(e=>zie(e)&&Fie(e))),new Wie(r,Array.isArray(e))}async function Uie(e,t){let{Canvas:n}=Iie.getEnv(),r=e;if(!(e instanceof n)){let t=await Vie(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await Pie(a)}let a=Nie(r);return t.map(e=>e instanceof Hse?e.forSize(r.width,r.height).box.floor():e).map(e=>e.clipAtImageBorders(r.width,r.height)).map(({x:e,y:t,width:n,height:r})=>{let s=Oie({width:n,height:r});return n>0&&r>0&&Nie(s).putImageData(a.getImageData(e,t,n,r),0,0),s})}async function Gie(e,t){if(!Ase(e)&&!Rse(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(Rse(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return Ti(()=>{let[n,r,a]=e.shape.slice(Rse(e)?1:0);return t.map(e=>e instanceof Hse?e.forSize(r,n).box:e).map(e=>e.clipAtImageBorders(r,n)).filter(e=>e.width>0&&e.height>0).map(({x:t,y:s,width:i,height:o})=>dm(e.as3D(n,r,a),[s,t,0],[o,i,a]))})}async function Hie(e,t){let{fetch:n}=Iie.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function jie(e){let t=await Hie(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return Die(n)}async function qie(e){return(await Hie(e)).json()}async function Kie(e){return new Float32Array(await(await Hie(e)).arrayBuffer())}function Xie(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToVideo - expected buf to be of type: Blob"));let r=Iie.getEnv().createVideoElement();r.oncanplay=()=>t(r),r.onerror=n,r.playsInline=!0,r.muted=!0,r.src=URL.createObjectURL(e),r.play()})}async function Yie(e){let t=await Hie(e),n=await t.blob();if(!n.type.startsWith("video/"))throw new Error(`fetchVideo - expected blob type to be of type video/*, instead have: ${n.type}, for url: ${t.url}`);return Xie(n)}function Jie(e,t){let n=t+"-weights_manifest.json";if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:"/"+n};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let a=e.split("/").filter(e=>e),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?"/"+i:i,{modelBaseUri:i,manifestUri:"/"===i?"/"+s:`${i}/${s}`}}async function Zie(e,t){let{manifestUri:n,modelBaseUri:r}=Jie(e,t),a=await qie(n);return ix.loadWeights(a,r)}function Qie(e,t,n=!1){let{width:r,height:a}=n?Mie(t):t;return e.width=r,e.height=a,{width:r,height:a}}var eoe=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof Ts)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof Ts))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=fi(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error("param tensor has already been disposed for path "+t.path);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(this._name+".loadFromUri - expected model uri");let t=await Zie(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(this._name+".loadFromDisk - expected model file path");let{readFile:t}=Iie.getEnv(),{manifestUri:n,modelBaseUri:r}=Jie(e,this.getDefaultModelName()),a=e=>Promise.all(e.map(e=>t(e).then(e=>"string"==typeof e?i.from(e):e.buffer))),s=ix.weightsLoaderFactory(a),o=JSON.parse((await t(n)).toString()),l=await s(o,r);this.loadFromWeightMap(l)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof Ss))throw new Error("traversePropertyPath - parameter is not a tensor, for path "+e);return{obj:n,objProp:r}}};function toe(e,t,n){return Ti(()=>{let r=Zf(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=ol(r,t.bias),r})}function noe(e,t,n=!1){return Ti(()=>{let r=$f(n?ol(np(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):toe(e,t.conv0,[2,2])),a=toe(r,t.conv1,[1,1]),s=$f(ol(r,a)),i=toe(s,t.conv2,[1,1]);return $f(ol(r,ol(a,i)))})}function roe(e,t,n=!1,r=!0){return Ti(()=>{let a=$f(n?ol(np(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):toe(e,t.conv0,r?[2,2]:[1,1])),s=toe(a,t.conv1,[1,1]),i=$f(ol(a,s)),o=toe(i,t.conv2,[1,1]),l=$f(ol(a,ol(s,o))),u=toe(l,t.conv3,[1,1]);return $f(ol(a,ol(s,ol(o,u))))})}function aoe(e,t,n="same",r=!1){return Ti(()=>{let a=ol(np(e,t.filters,[1,1],n),t.bias);return r?$f(a):a})}function soe(e,t){Object.keys(e).forEach(n=>{t.some(e=>e.originalPath===n)||e[n].dispose()})}function ioe(e,t){return(n,r,a,s)=>{let i=Vm(e(n*r*a*a),[a,a,n,r]),o=zm(e(r));return t.push({paramPath:s+"/filters"},{paramPath:s+"/bias"}),{filters:i,bias:o}}}function ooe(e,t){return(n,r,a)=>{let s=Bm(e(n*r),[n,r]),i=zm(e(r));return t.push({paramPath:a+"/weights"},{paramPath:a+"/bias"}),{weights:s,bias:i}}}var loe=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function uoe(e,t){return(n,r,a)=>{let s=Vm(e(9*n),[3,3,n,1]),i=Vm(e(n*r),[1,1,n,r]),o=zm(e(r));return t.push({paramPath:a+"/depthwise_filter"},{paramPath:a+"/pointwise_filter"},{paramPath:a+"/bias"}),new loe(s,i,o)}}function poe(e){return t=>{let n=e(t+"/depthwise_filter",4),r=e(t+"/pointwise_filter",4),a=e(t+"/bias",1);return new loe(n,r,a)}}function hoe(e,t){return(n,r,a)=>{let s=e[n];if(!_se(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function doe(e){let t=e;function n(e){let n=t.slice(0,e);return t=t.slice(e),n}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function coe(e,t){let n=ioe(e,t),r=uoe(e,t);function a(e,t,a,s=!1){let i=s?n(e,t,3,a+"/conv0"):r(e,t,a+"/conv0"),o=r(t,t,a+"/conv1"),l=r(t,t,a+"/conv2");return{conv0:i,conv1:o,conv2:l}}function s(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s),u=r(t,t,n+"/conv3");return{conv0:i,conv1:o,conv2:l,conv3:u}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function foe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=doe(e),{extractDenseBlock4Params:a}=coe(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function moe(e){return t=>{let n=e(t+"/filters",4),r=e(t+"/bias",1);return{filters:n,bias:r}}}function goe(e,t){let n=hoe(e,t),r=moe(n),a=poe(n);function s(e,t=!1){let n=t?r(e+"/conv0"):a(e+"/conv0"),s=a(e+"/conv1"),i=a(e+"/conv2");return{conv0:n,conv1:s,conv2:i}}function i(e,t=!1){let n=t?r(e+"/conv0"):a(e+"/conv0"),s=a(e+"/conv1"),i=a(e+"/conv2"),o=a(e+"/conv3");return{conv0:n,conv1:s,conv2:i,conv3:o}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function yoe(e){let t=[],{extractDenseBlock4Params:n}=goe(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return soe(e,t),{params:r,paramMappings:t}}var boe=class extends eoe{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return Ti(()=>{let n=tl(e.toBatchTensor(112,!0),"float32"),r=Xse(n,[122.782,117.001,104.298]).div(255),a=roe(r,t.dense0,!0);return a=roe(a,t.dense1),a=roe(a,t.dense2),a=roe(a,t.dense3),a=lu(a,[7,7],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await Vie(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return yoe(e)}extractParams(e){return foe(e)}};function xoe(e,t){return Ti(()=>ol(fu(e,t.weights),t.bias))}function woe(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=doe(e),i=ooe(a,r)(t,n,"fc");if(0!==s().length)throw new Error("weights remaing after extract: "+s().length);return{paramMappings:r,params:{fc:i}}}function voe(e){let t=[],n=hoe(e,t);function r(e){let t=n(e+"/weights",2),r=n(e+"/bias",1);return{weights:t,bias:r}}let a={fc:r("fc")};return soe(e,t),{params:a,paramMappings:t}}function koe(e){let t={},n={};return Object.keys(e).forEach(r=>{let a=r.startsWith("fc")?n:t;a[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var Ioe=class extends eoe{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(this._name+" - load model before inference");return Ti(()=>{let n=e instanceof Wie?this.faceFeatureExtractor.forwardInput(e):e;return xoe(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return woe(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=koe(e);return this.faceFeatureExtractor.loadFromWeightMap(t),voe(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},Soe=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Noe=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error("FaceExpressions.constructor - expected probabilities.length to be 7, have: "+e.length);Soe.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return Soe.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},Toe=class extends Ioe{constructor(e=new boe){super("FaceExpressionNet",e)}forwardInput(e){return Ti(()=>gm(this.runNet(e)))}async forward(e){return this.forwardInput(await Vie(e))}async predictExpressions(e){let t=await Vie(e),n=await this.forwardInput(t),r=await Promise.all(ig(n).map(async e=>{let t=e.dataSync();return e.dispose(),t}));n.dispose();let a=r.map(e=>new Noe(e));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function _oe(e){return e.expressions instanceof Noe}function Coe(e,t){return{...e,expressions:t}}function Eoe(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(t=>{let a=t instanceof Noe?t:_oe(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter(e=>e.probability>n),i=die(t)?t.detection.box.bottomLeft:r||new Wse(0,0);new Cie(s.map(e=>`${e.expression} (${Dse(e.probability)})`),i).draw(e)})}function Aoe(e){return die(e)&&e.landmarks instanceof sie&&e.unshiftedLandmarks instanceof sie&&e.alignedRect instanceof Hse}function Roe(e){let t=e=>180*e/Math.PI,n=(e,t)=>Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2),r={roll:void 0,pitch:void 0,yaw:void 0},a=(e,t,n)=>{let r=Math.floor(e.x-t.x),a=Math.floor(t.x-n.x);return r-a},s=(e,n)=>{let r=Math.hypot(n.x-e.x,n.y-e.y),a=n.y-e.y,s=Math.asin(a/r),i=t(s),o=Math.floor(90-i),l=n.x-e.x<0?-1:1;return o*l},i=(e,r,a)=>{let s=n(e,a),i=new Wse((e.x+a.x)/2,(e.y+a.y)/2),o=n(r,i),l=Math.atan(o/s),u=Math.floor(t(l)),p=i.y-r.y<0?-1:1;return u*p};if(!e||!e.positions||68!==e.positions.length)return r;let o=e.positions;return r.roll=s(o[27],o[66]),r.pitch=i(o[14],o[30],o[2]),r.yaw=a(o[14],o[33],o[2]),r}function $oe(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new Hse(e.detection.score,a.rescale(s.reverse()),s),o=Roe(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var Foe=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},Doe=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new Foe(t)}draw(e){let t=Nie(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof oie&&(t.strokeStyle=s,t.lineWidth=a,Sse(t,this.faceLandmarks.getJawOutline()),Sse(t,this.faceLandmarks.getLeftEyeBrow()),Sse(t,this.faceLandmarks.getRightEyeBrow()),Sse(t,this.faceLandmarks.getNose()),Sse(t,this.faceLandmarks.getLeftEye(),!0),Sse(t,this.faceLandmarks.getRightEye(),!0),Sse(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function Moe(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{let n=t instanceof sie?t:Aoe(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new Doe(n).draw(e)})}var Ooe="1.7.13";function Loe(e,t){let n=ioe(e,t),r=uoe(e,t);function a(e,t,a){let s=r(e,t,a+"/separable_conv0"),i=r(t,t,a+"/separable_conv1"),o=n(e,t,1,a+"/expansion_conv");return{separable_conv0:s,separable_conv1:i,expansion_conv:o}}function s(e,t){let n=r(e,e,t+"/separable_conv0"),a=r(e,e,t+"/separable_conv1"),s=r(e,e,t+"/separable_conv2");return{separable_conv0:n,separable_conv1:a,separable_conv2:s}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:a,extractMainBlockParams:s}}function Poe(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=doe(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=Loe(r,n),u=s(3,32,3,"entry_flow/conv_in"),p=o(32,64,"entry_flow/reduction_block_0"),h=o(64,128,"entry_flow/reduction_block_1"),d={conv_in:u,reduction_block_0:p,reduction_block_1:h},c={};Pse(t,0,1).forEach(e=>{c["main_block_"+e]=l(128,"middle_flow/main_block_"+e)});let f=o(128,256,"exit_flow/reduction_block"),m=i(256,512,"exit_flow/separable_conv"),g={reduction_block:f,separable_conv:m};if(0!==a().length)throw new Error("weights remaing after extract: "+a().length);return{paramMappings:n,params:{entry_flow:d,middle_flow:c,exit_flow:g}}}function zoe(e,t){let n=hoe(e,t),r=moe(n),a=poe(n);function s(e){let t=a(e+"/separable_conv0"),n=a(e+"/separable_conv1"),s=r(e+"/expansion_conv");return{separable_conv0:t,separable_conv1:n,expansion_conv:s}}function i(e){let t=a(e+"/separable_conv0"),n=a(e+"/separable_conv1"),r=a(e+"/separable_conv2");return{separable_conv0:t,separable_conv1:n,separable_conv2:r}}return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function Boe(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=zoe(e,n),o=r("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),u=s("entry_flow/reduction_block_1"),p={conv_in:o,reduction_block_0:l,reduction_block_1:u},h={};Pse(t,0,1).forEach(e=>{h["main_block_"+e]=i("middle_flow/main_block_"+e)});let d=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),f={reduction_block:d,separable_conv:c};return soe(e,n),{params:{entry_flow:p,middle_flow:h,exit_flow:f},paramMappings:n}}function Woe(e,t,n){return ol(np(e,t.filters,n,"same"),t.bias)}function Voe(e,t,n=!0){let r=n?$f(e):e;return r=toe(r,t.separable_conv0,[1,1]),r=toe($f(r),t.separable_conv1,[1,1]),r=Gd(r,[3,3],[2,2],"same"),r=ol(r,Woe(e,t.expansion_conv,[2,2])),r}function Uoe(e,t){let n=toe($f(e),t.separable_conv0,[1,1]);return n=toe($f(n),t.separable_conv1,[1,1]),n=toe($f(n),t.separable_conv2,[1,1]),n=ol(n,e),n}var Goe=class extends eoe{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return Ti(()=>{let n=tl(e.toBatchTensor(112,!0),"float32"),r=Xse(n,[122.782,117.001,104.298]).div(255),a=$f(Woe(r,t.entry_flow.conv_in,[2,2]));return a=Voe(a,t.entry_flow.reduction_block_0,!1),a=Voe(a,t.entry_flow.reduction_block_1),Pse(this._numMainBlocks,0,1).forEach(e=>{a=Uoe(a,t.middle_flow["main_block_"+e])}),a=Voe(a,t.exit_flow.reduction_block),a=$f(toe(a,t.exit_flow.separable_conv,[1,1])),a})}async forward(e){return this.forwardInput(await Vie(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return Boe(e,this._numMainBlocks)}extractParams(e){return Poe(e,this._numMainBlocks)}};function Hoe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=doe(e),a=ooe(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function joe(e){let t=[],n=hoe(e,t);function r(e){let t=n(e+"/weights",2),r=n(e+"/bias",1);return{weights:t,bias:r}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return soe(e,t),{params:a,paramMappings:t}}var qoe=(e=>(e.FEMALE="female",e.MALE="male",e))(qoe||{}),Koe=class extends eoe{constructor(e=new Goe(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(this._name+" - load model before inference");return Ti(()=>{let n=e instanceof Wie?this.faceFeatureExtractor.forwardInput(e):e,r=lu(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1),a=xoe(r,t.fc.age).as1D(),s=xoe(r,t.fc.gender);return{age:a,gender:s}})}forwardInput(e){return Ti(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:gm(n)}})}async forward(e){return this.forwardInput(await Vie(e))}async predictAgeAndGender(e){let t=await Vie(e),n=await this.forwardInput(t),r=ig(n.age),a=ig(n.gender),s=r.map((e,t)=>({ageTensor:e,genderTensor:a[t]})),i=await Promise.all(s.map(async({ageTensor:e,genderTensor:t})=>{let n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?"male":"female",i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Hoe(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=koe(e);return this.faceFeatureExtractor.loadFromWeightMap(t),joe(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},Xoe=class extends Ioe{postProcess(e,t,n){let r=n.map(({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}}),a=r.length;return Ti(()=>{let n=(e,t)=>$m([Gu([68],e,"float32"),Gu([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0},i=e=>s(e,(e,t)=>e<t),o=e=>s(e,(e,t)=>t<e);return e.mul(Gu([a,136],t,"float32")).sub($m(Array.from(Array(a),(e,t)=>n(i(t),o(t))))).div($m(Array.from(Array(a),(e,t)=>n(r[t].width,r[t].height))))})}forwardInput(e){return Ti(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([e,t])=>({height:e,width:t})))})}async forward(e){return this.forwardInput(await Vie(e))}async detectLandmarks(e){let t=await Vie(e),n=Ti(()=>ig(this.forwardInput(t))),r=await Promise.all(n.map(async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter((e,t)=>Fse(t)),s=r.filter((e,t)=>!Fse(t));return new oie(Array(68).fill(0).map((e,t)=>new Wse(a[t],s[t])),{height:t.getInputHeight(n),width:t.getInputWidth(n)})}));return n.forEach(e=>e.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},Yoe=class extends Xoe{constructor(e=new boe){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function Joe(e){let t=[],{extractDenseBlock3Params:n}=goe(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return soe(e,t),{params:r,paramMappings:t}}function Zoe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=doe(e),{extractDenseBlock3Params:a}=coe(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var Qoe=class extends eoe{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return Ti(()=>{let n=tl(e.toBatchTensor(112,!0),"float32"),r=Xse(n,[122.782,117.001,104.298]).div(255),a=noe(r,t.dense0,!0);return a=noe(a,t.dense1),a=noe(a,t.dense2),a=lu(a,[14,14],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await Vie(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return Joe(e)}extractParams(e){return Zoe(e)}},ele=class extends Xoe{constructor(e=new Qoe){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},tle=class extends Yoe{};function nle(e,t){return ol(cl(e,t.weights),t.biases)}function rle(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=np(e,s,n,a);return o=ol(o,i),o=nle(o,t.scale),r?$f(o):o}function ale(e,t){return rle(e,t,[1,1],!0)}function sle(e,t){return rle(e,t,[1,1],!1)}function ile(e,t){return rle(e,t,[2,2],!0,"valid")}function ole(e,t){function n(t,n,r){let a=e(t),s=a.length/(n*r*r);if($se(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return Ti(()=>mg(Vm(a,[n,s,r,r]),[2,3,1,0]))}function r(r,a,s,i){let o=n(r,a,s),l=zm(e(a));return t.push({paramPath:i+"/filters"},{paramPath:i+"/bias"}),{filters:o,bias:l}}function a(n,r){let a=zm(e(n)),s=zm(e(n));return t.push({paramPath:r+"/weights"},{paramPath:r+"/biases"}),{weights:a,biases:s}}function s(e,t,n,s){let i=r(e,t,n,s+"/conv"),o=a(t,s+"/scale");return{conv:i,scale:o}}function i(e,t,n,r,a=!1){let i=s((a?.5:1)*e,t,n,r+"/conv1"),o=s(e,t,n,r+"/conv2");return{conv1:i,conv2:o}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function lle(e){let{extractWeights:t,getRemainingWeights:n}=doe(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=ole(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),p=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),v=Ti(()=>mg(Bm(t(32768),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error("weights remaing after extract: "+n().length);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:p,conv64_1:h,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:v},paramMappings:r}}function ule(e,t){let n=hoe(e,t);function r(e){let t=n(e+"/scale/weights",1),r=n(e+"/scale/biases",1);return{weights:t,biases:r}}function a(e){let t=n(e+"/conv/filters",4),a=n(e+"/conv/bias",1),s=r(e);return{conv:{filters:t,bias:a},scale:s}}function s(e){return{conv1:a(e+"/conv1"),conv2:a(e+"/conv2")}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function ple(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=ule(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),p=r("conv64_2"),h=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!Ese(x))throw new Error("expected weightMap[fc] to be a Tensor2D, instead have "+x);let w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:p,conv64_3:h,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return soe(e,t),{params:w,paramMappings:t}}function hle(e,t){let n=ale(e,t.conv1);return n=sle(n,t.conv2),n=ol(n,e),n=$f(n),n}function dle(e,t){let n=ile(e,t.conv1);n=sle(n,t.conv2);let r=lu(e,2,2,"valid"),a=Qd(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=Qd(e);n=du([n,t],1);let r=[...n.shape];r[2]=1;let a=Qd(r);n=du([n,a],2)}return r=s?du([r,a],3):r,n=ol(r,n),n=$f(n),n}var cle=class extends eoe{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return Ti(()=>{let n=tl(e.toBatchTensor(150,!0),"float32"),r=Xse(n,[122.782,117.001,104.298]).div(255),a=ile(r,t.conv32_down);a=Gd(a,3,2,"valid"),a=hle(a,t.conv32_1),a=hle(a,t.conv32_2),a=hle(a,t.conv32_3),a=dle(a,t.conv64_down),a=hle(a,t.conv64_1),a=hle(a,t.conv64_2),a=hle(a,t.conv64_3),a=dle(a,t.conv128_down),a=hle(a,t.conv128_1),a=hle(a,t.conv128_2),a=dle(a,t.conv256_down),a=hle(a,t.conv256_1),a=hle(a,t.conv256_2),a=dle(a,t.conv256_down_out);let s=a.mean([1,2]);return fu(s,t.fc)})}async forward(e){return this.forwardInput(await Vie(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some(e=>e<=0))return new Float32Array(128);let n=await Vie(e),r=Ti(()=>ig(this.forwardInput(n))),a=await Promise.all(r.map(e=>e.data()));return r.forEach(e=>e.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return ple(e)}extractParams(e){return lle(e)}};function fle(e){let t=new cle;return t.extractWeights(e),t}function mle(e,t){return{...e,descriptor:t}}function gle(e){return"number"==typeof e.age}function yle(e,t){return{...e,age:t}}function ble(e){return("male"===e.gender||"female"===e.gender)&&Bse(e.genderProbability)}function xle(e,t,n){return{...e,gender:t,genderProbability:n}}function wle(e,t){function n(n,r){let a=Vm(e(9*n),[3,3,n,1]),s=zm(e(n)),i=zm(e(n)),o=zm(e(n)),l=zm(e(n));return t.push({paramPath:r+"/filters"},{paramPath:r+"/batch_norm_scale"},{paramPath:r+"/batch_norm_offset"},{paramPath:r+"/batch_norm_mean"},{paramPath:r+"/batch_norm_variance"}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}function r(n,r,a,s,i){let o=Vm(e(n*r*a*a),[a,a,n,r]),l=zm(e(r));return t.push({paramPath:s+"/filters"},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function a(e,t,n,a){let{filters:s,bias:i}=r(e,t,n,a,!0);return{filters:s,batch_norm_offset:i}}function s(e,t,r){let s=n(e,r+"/depthwise_conv"),i=a(e,t,1,r+"/pointwise_conv");return{depthwise_conv:s,pointwise_conv:i}}function i(){let e=a(3,32,3,"mobilenetv1/conv_0"),t=s(32,64,"mobilenetv1/conv_1"),n=s(64,128,"mobilenetv1/conv_2"),r=s(128,128,"mobilenetv1/conv_3"),i=s(128,256,"mobilenetv1/conv_4"),o=s(256,256,"mobilenetv1/conv_5"),l=s(256,512,"mobilenetv1/conv_6"),u=s(512,512,"mobilenetv1/conv_7"),p=s(512,512,"mobilenetv1/conv_8"),h=s(512,512,"mobilenetv1/conv_9"),d=s(512,512,"mobilenetv1/conv_10"),c=s(512,512,"mobilenetv1/conv_11"),f=s(512,1024,"mobilenetv1/conv_12"),m=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:e,conv_1:t,conv_2:n,conv_3:r,conv_4:i,conv_5:o,conv_6:l,conv_7:u,conv_8:p,conv_9:h,conv_10:d,conv_11:c,conv_12:f,conv_13:m}}function o(){let e=a(1024,256,1,"prediction_layer/conv_0"),t=a(256,512,3,"prediction_layer/conv_1"),n=a(512,128,1,"prediction_layer/conv_2"),s=a(128,256,3,"prediction_layer/conv_3"),i=a(256,128,1,"prediction_layer/conv_4"),o=a(128,256,3,"prediction_layer/conv_5"),l=a(256,64,1,"prediction_layer/conv_6"),u=a(64,128,3,"prediction_layer/conv_7"),p=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),h=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),d=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),c=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),f=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),m=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),g=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),y=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),b=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),x=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),w=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),v=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:e,conv_1:t,conv_2:n,conv_3:s,conv_4:i,conv_5:o,conv_6:l,conv_7:u,box_predictor_0:{box_encoding_predictor:p,class_predictor:h},box_predictor_1:{box_encoding_predictor:d,class_predictor:c},box_predictor_2:{box_encoding_predictor:f,class_predictor:m},box_predictor_3:{box_encoding_predictor:g,class_predictor:y},box_predictor_4:{box_encoding_predictor:b,class_predictor:x},box_predictor_5:{box_encoding_predictor:w,class_predictor:v}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function vle(e){let t=[],{extractWeights:n,getRemainingWeights:r}=doe(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=wle(n,t),i=a(),o=s(),l={extra_dim:Wm(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}function kle(e,t){let n=hoe(e,t);function r(e,t,r){let a=n(`${e}/Conv2d_${t}_pointwise/weights`,4,r+"/filters"),s=n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,r+"/batch_norm_offset");return{filters:a,batch_norm_offset:s}}function a(e){let t="mobilenetv1/conv_"+e,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=t+"/depthwise_conv",i=t+"/pointwise_conv",o=n(a+"/depthwise_weights",4,s+"/filters"),l=n(a+"/BatchNorm/gamma",1,s+"/batch_norm_scale"),u=n(a+"/BatchNorm/beta",1,s+"/batch_norm_offset"),p=n(a+"/BatchNorm/moving_mean",1,s+"/batch_norm_mean"),h=n(a+"/BatchNorm/moving_variance",1,s+"/batch_norm_variance");return{depthwise_conv:{filters:o,batch_norm_scale:l,batch_norm_offset:u,batch_norm_mean:p,batch_norm_variance:h},pointwise_conv:r("MobilenetV1",e,i)}}function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(e,t){let r=n(e+"/weights",4,t+"/filters"),a=n(e+"/biases",1,t+"/bias");return{filters:r,bias:a}}function o(e){let t=i(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),n=i(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`);return{box_encoding_predictor:t,class_predictor:n}}function l(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function Ile(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=kle(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Ase(a))throw new Error("expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have "+a);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return soe(e,t),{params:s,paramMappings:t}}function Sle(e,t,n){return Ti(()=>{let r=np(e,t.filters,n,"same");return r=ol(r,t.batch_norm_offset),ju(r,0,6)})}var Nle=.0010000000474974513;function Tle(e,t,n){return Ti(()=>{let r=Cp(e,t.filters,n,"same");return r=_u(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,Nle),ju(r,0,6)})}function _le(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function Cle(e,t){return Ti(()=>{let n,r=Sle(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((e,t)=>{let a=t+1,s=_le(a);r=Tle(r,e.depthwise_conv,s),r=Sle(r,e.pointwise_conv,[1,1]),11===a&&(n=r)}),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function Ele(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),p=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(p-l)*(h-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,p),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function Ale(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map((e,t)=>({score:e,boxIndex:t})).filter(e=>e.score>a).sort((e,t)=>t.score-e.score),l=e=>e<=r?1:0,u=[];return o.forEach(t=>{if(u.length>=i)return;let n=t.score;for(let r=u.length-1;r>=0;--r){let n=Ele(e,t.boxIndex,u[r]);if(0!==n&&(t.score*=l(n),t.score<=a))break}n===t.score&&u.push(t.boxIndex)}),u}function Rle(e){let t=ig(mg(e,[1,0])),n=[Td(t[2],t[0]),Td(t[3],t[1])],r=[ol(t[0],hl(n[0],2)),ol(t[1],hl(n[1],2))];return{sizes:n,centers:r}}function $le(e,t){let{sizes:n,centers:r}=Rle(e),a=ig(mg(t,[1,0])),s=hl(cl(Ch(hl(a[2],5)),n[0]),2),i=ol(cl(hl(a[0],10),n[0]),r[0]),o=hl(cl(Ch(hl(a[3],5)),n[1]),2),l=ol(cl(hl(a[1],10),n[1]),r[1]);return mg($m([Td(i,s),Td(l,o),ol(i,s),ol(l,o)]),[1,0])}function Fle(e,t,n){return Ti(()=>{let r=e.shape[0],a=$le(iu(Dh(n.extra_dim,[r,1,1]),[-1,4]),iu(e,[-1,4]));a=iu(a,[r,a.shape[0]/r,4]);let s=gu(bu(t,[0,0,1],[-1,-1,-1])),i=bu(s,[0,0,0],[-1,-1,1]);i=iu(i,[r,i.shape[1]]);let o=ig(a),l=ig(i);return{boxes:o,scores:l}})}function Dle(e,t){return Ti(()=>{let n=e.shape[0],r=iu(aoe(e,t.box_encoding_predictor),[n,-1,1,4]),a=iu(aoe(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:a}})}function Mle(e,t,n){return Ti(()=>{let r=Sle(e,n.conv_0,[1,1]),a=Sle(r,n.conv_1,[2,2]),s=Sle(a,n.conv_2,[1,1]),i=Sle(s,n.conv_3,[2,2]),o=Sle(i,n.conv_4,[1,1]),l=Sle(o,n.conv_5,[2,2]),u=Sle(l,n.conv_6,[1,1]),p=Sle(u,n.conv_7,[2,2]),h=Dle(t,n.box_predictor_0),d=Dle(e,n.box_predictor_1),c=Dle(a,n.box_predictor_2),f=Dle(i,n.box_predictor_3),m=Dle(l,n.box_predictor_4),g=Dle(p,n.box_predictor_5),y=du([h.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),b=du([h.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var Ole=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(this._name+" - expected minConfidence to be a number between 0 and 1");if("number"!=typeof this._maxResults)throw new Error(this._name+" - expected maxResults to be a number")}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Lle=class extends eoe{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return Ti(()=>{let n=tl(e.toBatchTensor(512,!1),"float32"),r=Td(hl(n,127.5),1),a=Cle(r,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=Mle(a.out,a.conv11,t.prediction_layer);return Fle(s,i,t.output_layer)})}async forward(e){return this.forwardInput(await Vie(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new Ole(t),a=await Vie(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let u=Array.from(l.dataSync()),p=Ale(o,u,n,.5,r),h=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/h.width,f=d/h.height,m=o.arraySync(),g=p.map(e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map(e=>e*f),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map(e=>e*c);return new Hse(u[e],new tie(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return Ile(e)}extractParams(e){return vle(e)}};function Ple(e){let t=new Lle;return t.extractWeights(e),t}function zle(e){return Ple(e)}var Ble=class extends Lle{},Wle=.4,Vle=[new Wse(.738768,.874946),new Wse(2.42204,2.65704),new Wse(4.30971,7.04493),new Wse(10.246,4.59428),new Wse(12.6868,11.8741)],Ule=[new Wse(1.603231,2.094468),new Wse(6.041143,7.080126),new Wse(2.882459,3.518061),new Wse(4.266906,5.178857),new Wse(9.041765,10.66308)],Gle=[117.001,114.697,97.404],Hle="tiny_yolov2_model",jle="tiny_yolov2_separable_conv_model",qle=e=>"number"==typeof e;function Kle(e){if(!e)throw new Error("invalid config: "+e);if("boolean"!=typeof e.withSeparableConvs)throw new Error("config.withSeparableConvs has to be a boolean, have: "+e.withSeparableConvs);if(!qle(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error("config.iouThreshold has to be a number between [0, 1], have: "+e.iouThreshold);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(e=>"string"==typeof e))throw new Error("config.classes has to be an array class names: string[], have: "+JSON.stringify(e.classes));if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(e=>e||{}).every(e=>qle(e.x)&&qle(e.y)))throw new Error("config.anchors has to be an array of { x: number, y: number }, have: "+JSON.stringify(e.anchors));if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(qle)))throw new Error("config.meanRgb has to be an array of shape [number, number, number], have: "+JSON.stringify(e.meanRgb))}function Xle(e){return Ti(()=>{let t=cl(e,mh(.10000000149011612));return ol($f(Td(e,t)),t)})}function Yle(e,t){return Ti(()=>{let n=Ic(e,[[0,0],[1,1],[1,1],[0,0]]);return n=np(n,t.conv.filters,[1,1],"valid"),n=Td(n,t.bn.sub),n=cl(n,t.bn.truediv),n=ol(n,t.conv.bias),Xle(n)})}function Jle(e,t){return Ti(()=>{let n=Ic(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Zf(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=ol(n,t.bias),Xle(n)})}function Zle(e,t){let n=ioe(e,t);function r(n,r){let a=zm(e(n)),s=zm(e(n));return t.push({paramPath:r+"/sub"},{paramPath:r+"/truediv"}),{sub:a,truediv:s}}function a(e,t,a){let s=n(e,t,3,a+"/conv"),i=r(t,a+"/bn");return{conv:s,bn:i}}let s=uoe(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function Qle(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=doe(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:p}=Zle(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,h,d,c,f]=r,m=t.isFirstLayerConv2d?l(e,s,3,"conv0"):p(e,s,"conv0"),g=p(s,i,"conv1"),y=p(i,o,"conv2"),b=p(o,u,"conv3"),x=p(u,h,"conv4"),w=p(h,d,"conv5"),v=c?p(d,c,"conv6"):void 0,k=f?p(c,f,"conv7"):void 0,I=l(f||c||d,5*n,1,"conv8");a={conv0:m,conv1:g,conv2:y,conv3:b,conv4:x,conv5:w,conv6:v,conv7:k,conv8:I}}else{let[e,t,s,i,o,p,h,d,c]=r,f=u(e,t,"conv0"),m=u(t,s,"conv1"),g=u(s,i,"conv2"),y=u(i,o,"conv3"),b=u(o,p,"conv4"),x=u(p,h,"conv5"),w=u(h,d,"conv6"),v=u(d,c,"conv7"),k=l(c,5*n,1,"conv8");a={conv0:f,conv1:m,conv2:g,conv3:y,conv4:b,conv5:x,conv6:w,conv7:v,conv8:k}}if(0!==i().length)throw new Error("weights remaing after extract: "+i().length);return{params:a,paramMappings:o}}function eue(e,t){let n=hoe(e,t);function r(e){let t=n(e+"/sub",1),r=n(e+"/truediv",1);return{sub:t,truediv:r}}function a(e){let t=n(e+"/filters",4),r=n(e+"/bias",1);return{filters:t,bias:r}}function s(e){let t=a(e+"/conv"),n=r(e+"/bn");return{conv:t,bn:n}}let i=poe(n);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function tue(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=eue(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return soe(e,r),{params:n,paramMappings:r}}var nue=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!==0)throw new Error(this._name+" - expected inputSize to be a number divisible by 32");if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(this._name+" - expected scoreThreshold to be a number between 0 and 1")}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},rue=class e extends eoe{constructor(e){super("TinyYolov2"),Kle(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=Yle(e,t.conv0);return n=Gd(n,[2,2],[2,2],"same"),n=Yle(n,t.conv1),n=Gd(n,[2,2],[2,2],"same"),n=Yle(n,t.conv2),n=Gd(n,[2,2],[2,2],"same"),n=Yle(n,t.conv3),n=Gd(n,[2,2],[2,2],"same"),n=Yle(n,t.conv4),n=Gd(n,[2,2],[2,2],"same"),n=Yle(n,t.conv5),n=Gd(n,[2,2],[1,1],"same"),n=Yle(n,t.conv6),n=Yle(n,t.conv7),aoe(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?Xle(aoe(e,t.conv0,"valid",!1)):Jle(e,t.conv0);return n=Gd(n,[2,2],[2,2],"same"),n=Jle(n,t.conv1),n=Gd(n,[2,2],[2,2],"same"),n=Jle(n,t.conv2),n=Gd(n,[2,2],[2,2],"same"),n=Jle(n,t.conv3),n=Gd(n,[2,2],[2,2],"same"),n=Jle(n,t.conv4),n=Gd(n,[2,2],[2,2],"same"),n=Jle(n,t.conv5),n=Gd(n,[2,2],[1,1],"same"),n=t.conv6?Jle(n,t.conv6):n,n=t.conv7?Jle(n,t.conv7):n,aoe(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return Ti(()=>{let r=tl(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?Xse(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)})}async forward(e,t){return this.forwardInput(await Vie(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new nue(t),a=await Vie(e),s=await this.forwardInput(a,n),i=Ti(()=>ig(s)[0].expandDims()),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map(e=>e.box),p=l.map(e=>e.score),h=l.map(e=>e.classScore),d=l.map(e=>this.config.classes[e.label]);return Kse(u.map(e=>e.rescale(n)),p,this.config.iouThreshold,!0).map(e=>new Gse(p[e],h[e],d[e],u[e],o))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return tue(e,this.config)}extractParams(t){let n=this.config.filterSizes||e.DEFAULT_FILTER_SIZES,r=n?n.length:void 0;if(7!==r&&8!==r&&9!==r)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${r} filterSizes in config`);return Qle(t,this.config,this.boxEncodingSize,n)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[p,h,d]=Ti(()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]),n=t.slice([0,0,0,0],[l,l,u,4]),r=t.slice([0,0,0,4],[l,l,u,1]),a=this.withClassScores?gm(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):mh(0);return[n,r,a]}),c=[],f=await h.array(),m=await p.array();for(let g=0;g<l;g++)for(let e=0;e<l;e++)for(let t=0;t<u;t++){let r=Zse(f[g][e][t][0]);if(!n||r>n){let n=(e+Zse(m[g][e][t][0]))/l*i,a=(g+Zse(m[g][e][t][1]))/l*o,s=Math.exp(m[g][e][t][2])*this.config.anchors[t].x/l*i,u=Math.exp(m[g][e][t][3])*this.config.anchors[t].y/l*o,p=n-s/2,h=a-u/2,f={row:g,col:e,anchor:t},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,f):{classScore:1,label:0};c.push({box:new Use(p,h,p+s,h+u),score:r,classScore:r*y,label:b,...f})}}return p.dispose(),h.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map((e,t)=>s[n][r][a][t]).map((e,t)=>({classScore:e,label:t})).reduce((e,t)=>e.classScore>t.classScore?e:t)}};rue.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var aue=rue,sue=class extends aue{constructor(e=!0){let t={withSeparableConvs:e,iouThreshold:Wle,classes:["face"],...e?{anchors:Ule,meanRgb:Gle}:{anchors:Vle,withClassScores:!0}};super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new Hse(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?jle:Hle}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};function iue(e,t=!0){let n=new sue(t);return n.extractWeights(e),n}var oue=class extends nue{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},lue=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function uue(e,t,n,r,a=(({alignedRect:e})=>e)){let s=e.map(e=>Aoe(e)?a(e):e.detection),i=r||(t instanceof Ss?await Gie(t,s):await Uie(t,s)),o=await n(i);return i.forEach(e=>e instanceof Ss&&e.dispose()),o}async function pue(e,t,n,r,a){return uue([e],t,async e=>n(e[0]),r,a)}var hue=.4,due=[new Wse(1.603231,2.094468),new Wse(6.041143,7.080126),new Wse(2.882459,3.518061),new Wse(4.266906,5.178857),new Wse(9.041765,10.66308)],cue=[117.001,114.697,97.404],fue=class extends aue{constructor(){let e={withSeparableConvs:!0,iouThreshold:hue,classes:["face"],anchors:due,meanRgb:cue,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new Hse(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},mue={ssdMobilenetv1:new Lle,tinyFaceDetector:new fue,tinyYolov2:new sue,faceLandmark68Net:new Yoe,faceLandmark68TinyNet:new ele,faceRecognitionNet:new cle,faceExpressionNet:new Toe,ageGenderNet:new Koe},gue=(e,t)=>mue.ssdMobilenetv1.locateFaces(e,t),yue=(e,t)=>mue.tinyFaceDetector.locateFaces(e,t),bue=(e,t)=>mue.tinyYolov2.locateFaces(e,t),xue=e=>mue.faceLandmark68Net.detectLandmarks(e),wue=e=>mue.faceLandmark68TinyNet.detectLandmarks(e),vue=e=>mue.faceRecognitionNet.computeFaceDescriptor(e),kue=e=>mue.faceExpressionNet.predictExpressions(e),Iue=e=>mue.ageGenderNet.predictAgeAndGender(e),Sue=e=>mue.ssdMobilenetv1.load(e),Nue=e=>mue.tinyFaceDetector.load(e),Tue=e=>mue.tinyYolov2.load(e),_ue=e=>mue.faceLandmark68Net.load(e),Cue=e=>mue.faceLandmark68TinyNet.load(e),Eue=e=>mue.faceRecognitionNet.load(e),Aue=e=>mue.faceExpressionNet.load(e),Rue=e=>mue.ageGenderNet.load(e),$ue=Sue,Fue=gue,Due=xue,Mue=class extends lue{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},Oue=class extends Mue{async run(){let e=await this.parentTask,t=await uue(e,this.input,async e=>Promise.all(e.map(e=>mue.faceExpressionNet.predictExpressions(e))),this.extractedFaces);return e.map((e,n)=>Coe(e,t[n]))}withAgeAndGender(){return new Wue(this,this.input)}},Lue=class extends Mue{async run(){let e=await this.parentTask;if(!e)return;let t=await pue(e,this.input,e=>mue.faceExpressionNet.predictExpressions(e),this.extractedFaces);return Coe(e,t)}withAgeAndGender(){return new Vue(this,this.input)}},Pue=class extends Oue{withAgeAndGender(){return new Uue(this,this.input)}withFaceDescriptors(){return new jue(this,this.input)}},zue=class extends Lue{withAgeAndGender(){return new Gue(this,this.input)}withFaceDescriptor(){return new que(this,this.input)}},Bue=class extends lue{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},Wue=class extends Bue{async run(){let e=await this.parentTask,t=await uue(e,this.input,async e=>Promise.all(e.map(e=>mue.ageGenderNet.predictAgeAndGender(e))),this.extractedFaces);return e.map((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return yle(xle(e,a,s),r)})}withFaceExpressions(){return new Oue(this,this.input)}},Vue=class extends Bue{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await pue(e,this.input,e=>mue.ageGenderNet.predictAgeAndGender(e),this.extractedFaces);return yle(xle(e,n,r),t)}withFaceExpressions(){return new Lue(this,this.input)}},Uue=class extends Wue{withFaceExpressions(){return new Pue(this,this.input)}withFaceDescriptors(){return new jue(this,this.input)}},Gue=class extends Vue{withFaceExpressions(){return new zue(this,this.input)}withFaceDescriptor(){return new que(this,this.input)}},Hue=class extends lue{constructor(e,t){super(),this.parentTask=e,this.input=t}},jue=class extends Hue{async run(){let e=await this.parentTask;return(await uue(e,this.input,e=>Promise.all(e.map(e=>mue.faceRecognitionNet.computeFaceDescriptor(e))),null,e=>e.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>mle(e[n],t))}withFaceExpressions(){return new Pue(this,this.input)}withAgeAndGender(){return new Uue(this,this.input)}},que=class extends Hue{async run(){let e=await this.parentTask;if(!e)return;let t=await pue(e,this.input,e=>mue.faceRecognitionNet.computeFaceDescriptor(e),null,e=>e.landmarks.align(null,{useDlibAlignment:!0}));return mle(e,t)}withFaceExpressions(){return new zue(this,this.input)}withAgeAndGender(){return new Gue(this,this.input)}},Kue=class extends lue{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?mue.faceLandmark68TinyNet:mue.faceLandmark68Net}},Xue=class extends Kue{async run(){let e=await this.parentTask,t=e.map(e=>e.detection),n=this.input instanceof Ss?await Gie(this.input,t):await Uie(this.input,t),r=await Promise.all(n.map(e=>this.landmarkNet.detectLandmarks(e)));return n.forEach(e=>e instanceof Ss&&e.dispose()),e.filter((e,t)=>r[t]).map((e,t)=>$oe(e,r[t]))}withFaceExpressions(){return new Pue(this,this.input)}withAgeAndGender(){return new Uue(this,this.input)}withFaceDescriptors(){return new jue(this,this.input)}},Yue=class extends Kue{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof Ss?await Gie(this.input,[t]):await Uie(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach(e=>e instanceof Ss&&e.dispose()),$oe(e,r)}withFaceExpressions(){return new zue(this,this.input)}withAgeAndGender(){return new Gue(this,this.input)}withFaceDescriptor(){return new que(this,this.input)}},Jue=class extends lue{constructor(e,t=new Ole){super(),this.input=e,this.options=t}},Zue=class extends Jue{async run(){let e,{input:t,options:n}=this;if(n instanceof oue)e=mue.tinyFaceDetector.locateFaces(t,n);else if(n instanceof Ole)e=mue.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof nue))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=mue.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(t=>e(t.map(e=>cie({},e)))).catch(e=>t(e))})}withFaceLandmarks(e=!1){return new Xue(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new Oue(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new Wue(this.runAndExtendWithFaceDetections(),this.input)}},Que=class extends Jue{async run(){let e=await new Zue(this.input,this.options),t=e[0];return e.forEach(e=>{e.score>t.score&&(t=e)}),t}runAndExtendWithFaceDetection(){return new Promise(async e=>{let t=await this.run();e(t?cie({},t):void 0)})}withFaceLandmarks(e=!1){return new Yue(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new Lue(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new Vue(this.runAndExtendWithFaceDetection(),this.input)}};function epe(e,t=new Ole){return new Que(e,t)}function tpe(e,t=new Ole){return new Zue(e,t)}async function npe(e,t){return tpe(e,new Ole(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function rpe(e,t={}){return tpe(e,new nue(t)).withFaceLandmarks().withFaceDescriptors()}var ape=npe;function spe(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map((e,t)=>e-r[t]).reduce((e,t)=>e+t*t,0))}var ipe=class e{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>"person "+r++;this._labeledDescriptors=n.map(e=>{if(e instanceof pie)return e;if(e instanceof Float32Array)return new pie(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new pie(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map(t=>spe(t,e)).reduce((e,t)=>e+t,0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map(({descriptors:t,label:n})=>new lie(n,this.computeMeanDistance(e,t))).reduce((e,t)=>e.distance<t.distance?e:t)}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this._distanceThreshold?t:new lie("unknown",t.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map(e=>e.toJSON())}}static fromJSON(t){let n=t.labeledDescriptors.map(e=>pie.fromJSON(e));return new e(n,t.distanceThreshold)}};function ope(e){let t=new fue;return t.extractWeights(e),t}function lpe(e,t){let{width:n,height:r}=new Tse(t.width,t.height);if(n<=0||r<=0)throw new Error("resizeResults - invalid dimensions: "+JSON.stringify({width:n,height:r}));if(Array.isArray(e))return e.map(e=>lpe(e,{width:n,height:r}));if(Aoe(e)){let t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return $oe(cie(e,t),a)}return die(e)?cie(e,e.detection.forSize(n,r)):e instanceof sie||e instanceof Hse?e.forSize(n,r):e}var upe=Ooe}.call(this,"/index.js",n("4362"),"/",n("c8ba"),n("b639").Buffer)},9152:function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
t.read=function(e,t,n,r,a){var s,i,o=8*a-r-1,l=(1<<o)-1,u=l>>1,p=-7,h=n?a-1:0,d=n?-1:1,c=e[t+h];for(h+=d,s=c&(1<<-p)-1,c>>=-p,p+=o;p>0;s=256*s+e[t+h],h+=d,p-=8);for(i=s&(1<<-p)-1,s>>=-p,p+=r;p>0;i=256*i+e[t+h],h+=d,p-=8);if(0===s)s=1-u;else{if(s===l)return i?NaN:1/0*(c?-1:1);i+=Math.pow(2,r),s-=u}return(c?-1:1)*i*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var i,o,l,u=8*s-a-1,p=(1<<u)-1,h=p>>1,d=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,c=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=p):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),t+=i+h>=1?d/l:d*Math.pow(2,1-h),t*l>=2&&(i++,l/=2),i+h>=p?(o=0,i=p):i+h>=1?(o=(t*l-1)*Math.pow(2,a),i+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,a),i=0));a>=8;e[n+c]=255&o,c+=f,o/=256,a-=8);for(i=i<<a|o,u+=a;u>0;e[n+c]=255&i,c+=f,i/=256,u-=8);e[n+c-f]|=128*m}},b639:function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n("1fb5"),a=n("9152"),s=n("e3db");function i(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"===typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(t){return!1}}function o(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function l(e,t){if(o()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t),e.__proto__=u.prototype):(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,n){if(!u.TYPED_ARRAY_SUPPORT&&!(this instanceof u))return new u(e,t,n);if("number"===typeof e){if("string"===typeof t)throw new Error("If encoding is specified then the first argument must be a string");return c(this,e)}return p(this,e,t,n)}function p(e,t,n,r){if("number"===typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&t instanceof ArrayBuffer?g(e,t,n,r):"string"===typeof t?f(e,t,n):y(e,t)}function h(e){if("number"!==typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function d(e,t,n,r){return h(t),t<=0?l(e,t):void 0!==n?"string"===typeof r?l(e,t).fill(n,r):l(e,t).fill(n):l(e,t)}function c(e,t){if(h(t),e=l(e,t<0?0:0|b(t)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function f(e,t,n){if("string"===typeof n&&""!==n||(n="utf8"),!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|w(t,n);e=l(e,r);var a=e.write(t,n);return a!==r&&(e=e.slice(0,a)),e}function m(e,t){var n=t.length<0?0:0|b(t.length);e=l(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function g(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r),u.TYPED_ARRAY_SUPPORT?(e=t,e.__proto__=u.prototype):e=m(e,t),e}function y(e,t){if(u.isBuffer(t)){var n=0|b(t.length);return e=l(e,n),0===e.length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!==typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!==typeof t.length||te(t.length)?l(e,0):m(e,t);if("Buffer"===t.type&&s(t.data))return m(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function b(e){if(e>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|e}function x(e){return+e!=e&&(e=0),u.alloc(+e)}function w(e,t){if(u.isBuffer(e))return e.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!==typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return Y(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Q(e).length;default:if(r)return Y(e).length;t=(""+t).toLowerCase(),r=!0}}function v(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,t>>>=0,n<=t)return"";e||(e="utf8");while(1)switch(e){case"hex":return L(this,t,n);case"utf8":case"utf-8":return $(this,t,n);case"ascii":return M(this,t,n);case"latin1":case"binary":return O(this,t,n);case"base64":return R(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function k(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function I(e,t,n,r,a){if(0===e.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:S(e,t,n,r,a);if("number"===typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):S(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function S(e,t,n,r,a){var s,i=1,o=e.length,l=t.length;if(void 0!==r&&(r=String(r).toLowerCase(),"ucs2"===r||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,o/=2,l/=2,n/=2}function u(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(a){var p=-1;for(s=n;s<o;s++)if(u(e,s)===u(t,-1===p?0:s-p)){if(-1===p&&(p=s),s-p+1===l)return p*i}else-1!==p&&(s-=s-p),p=-1}else for(n+l>o&&(n=o-l),s=n;s>=0;s--){for(var h=!0,d=0;d<l;d++)if(u(e,s+d)!==u(t,d)){h=!1;break}if(h)return s}return-1}function N(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r),r>a&&(r=a)):r=a;var s=t.length;if(s%2!==0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(t.substr(2*i,2),16);if(isNaN(o))return i;e[n+i]=o}return i}function T(e,t,n,r){return ee(Y(t,e.length-n),e,n,r)}function _(e,t,n,r){return ee(J(t),e,n,r)}function C(e,t,n,r){return _(e,t,n,r)}function E(e,t,n,r){return ee(Q(t),e,n,r)}function A(e,t,n,r){return ee(Z(t,e.length-n),e,n,r)}function R(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function $(e,t,n){n=Math.min(e.length,n);var r=[],a=t;while(a<n){var s,i,o,l,u=e[a],p=null,h=u>239?4:u>223?3:u>191?2:1;if(a+h<=n)switch(h){case 1:u<128&&(p=u);break;case 2:s=e[a+1],128===(192&s)&&(l=(31&u)<<6|63&s,l>127&&(p=l));break;case 3:s=e[a+1],i=e[a+2],128===(192&s)&&128===(192&i)&&(l=(15&u)<<12|(63&s)<<6|63&i,l>2047&&(l<55296||l>57343)&&(p=l));break;case 4:s=e[a+1],i=e[a+2],o=e[a+3],128===(192&s)&&128===(192&i)&&128===(192&o)&&(l=(15&u)<<18|(63&s)<<12|(63&i)<<6|63&o,l>65535&&l<1114112&&(p=l))}null===p?(p=65533,h=1):p>65535&&(p-=65536,r.push(p>>>10&1023|55296),p=56320|1023&p),r.push(p),a+=h}return D(r)}t.Buffer=u,t.SlowBuffer=x,t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:i(),t.kMaxLength=o(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,n){return p(null,e,t,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,n){return d(null,e,t,n)},u.allocUnsafe=function(e){return c(null,e)},u.allocUnsafeSlow=function(e){return c(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!s(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var i=e[n];if(!u.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},u.byteLength=w,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)k(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)k(this,t,t+3),k(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)k(this,t,t+7),k(this,t+1,t+6),k(this,t+2,t+5),k(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?$(this,0,e):v.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,n,r,a){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,r>>>=0,a>>>=0,this===e)return 0;for(var s=a-r,i=n-t,o=Math.min(s,i),l=this.slice(r,a),p=e.slice(t,n),h=0;h<o;++h)if(l[h]!==p[h]){s=l[h],i=p[h];break}return s<i?-1:i<s?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return I(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return I(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"===typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return N(this,e,t,n);case"utf8":case"utf-8":return T(this,e,t,n);case"ascii":return _(this,e,t,n);case"latin1":case"binary":return C(this,e,t,n);case"base64":return E(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var F=4096;function D(e){var t=e.length;if(t<=F)return String.fromCharCode.apply(String,e);var n="",r=0;while(r<t)n+=String.fromCharCode.apply(String,e.slice(r,r+=F));return n}function M(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function O(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function L(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=X(e[s]);return a}function P(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function z(e,t,n){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function B(e,t,n,r,a,s){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function W(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,s=Math.min(e.length-n,2);a<s;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function V(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,s=Math.min(e.length-n,4);a<s;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function U(e,t,n,r,a,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function G(e,t,n,r,s){return s||U(e,t,n,4,34028234663852886e22,-34028234663852886e22),a.write(e,t,n,r,23,4),n+4}function H(e,t,n,r,s){return s||U(e,t,n,8,17976931348623157e292,-17976931348623157e292),a.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n,r=this.length;if(e=~~e,t=void 0===t?r:~~t,e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),t<0?(t+=r,t<0&&(t=0)):t>r&&(t=r),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)n=this.subarray(e,t),n.__proto__=u.prototype;else{var a=t-e;n=new u(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+e]}return n},u.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);var r=this[e],a=1,s=0;while(++s<t&&(a*=256))r+=this[e+s]*a;return r},u.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);var r=this[e+--t],a=1;while(t>0&&(a*=256))r+=this[e+--t]*a;return r},u.prototype.readUInt8=function(e,t){return t||z(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||z(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||z(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||z(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||z(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);var r=this[e],a=1,s=0;while(++s<t&&(a*=256))r+=this[e+s]*a;return a*=128,r>=a&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);var r=t,a=1,s=this[e+--r];while(r>0&&(a*=256))s+=this[e+--r]*a;return a*=128,s>=a&&(s-=Math.pow(2,8*t)),s},u.prototype.readInt8=function(e,t){return t||z(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||z(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){t||z(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return t||z(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||z(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||z(e,4,this.length),a.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||z(e,4,this.length),a.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||z(e,8,this.length),a.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||z(e,8,this.length),a.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;B(this,e,t,n,a,0)}var s=1,i=0;this[t]=255&e;while(++i<n&&(s*=256))this[t+i]=e/s&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;B(this,e,t,n,a,0)}var s=n-1,i=1;this[t+s]=255&e;while(--s>=0&&(i*=256))this[t+s]=e/i&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):W(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):W(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):V(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):V(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);B(this,e,t,n,a-1,-a)}var s=0,i=1,o=0;this[t]=255&e;while(++s<n&&(i*=256))e<0&&0===o&&0!==this[t+s-1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);B(this,e,t,n,a-1,-a)}var s=n-1,i=1,o=0;this[t+s]=255&e;while(--s>=0&&(i*=256))e<0&&0===o&&0!==this[t+s+1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):W(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):W(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):V(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):V(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,n){return G(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return G(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return H(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return H(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,s=r-n;if(this===e&&n<t&&t<r)for(a=s-1;a>=0;--a)e[a+t]=this[a+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},u.prototype.fill=function(e,t,n,r){if("string"===typeof e){if("string"===typeof t?(r=t,t=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"===typeof e)for(s=t;s<n;++s)this[s]=e;else{var i=u.isBuffer(e)?e:Y(new u(e,r).toString()),o=i.length;for(s=0;s<n-t;++s)this[s+t]=i[s%o]}return this};var j=/[^+\/0-9A-Za-z-_]/g;function q(e){if(e=K(e).replace(j,""),e.length<2)return"";while(e.length%4!==0)e+="=";return e}function K(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}function X(e){return e<16?"0"+e.toString(16):e.toString(16)}function Y(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],i=0;i<r;++i){if(n=e.charCodeAt(i),n>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function J(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}function Z(e,t){for(var n,r,a,s=[],i=0;i<e.length;++i){if((t-=2)<0)break;n=e.charCodeAt(i),r=n>>8,a=n%256,s.push(a),s.push(r)}return s}function Q(e){return r.toByteArray(q(e))}function ee(e,t,n,r){for(var a=0;a<r;++a){if(a+n>=t.length||a>=e.length)break;t[a+n]=e[a]}return a}function te(e){return e!==e}}).call(this,n("c8ba"))},e3db:function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}}}]);
//# sourceMappingURL=page-LoadingInit~page-absen-group_selfie~page-absen-selfie~page-register-wajah.f7e4a8b9.js.map